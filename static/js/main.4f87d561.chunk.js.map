{"version":3,"sources":["components/Video.tsx","components/FilePicker.tsx","utilities/data.ts","utilities/area.ts","utilities/types.ts","components/ToolSelector.tsx","utilities/shapes.ts","components/Canvas.tsx","components/Inspector.tsx","components/IOManager.tsx","components/OptionSelector.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Video","source","setVideo","setSlider","videoRef","value","useRef","useEffect","current","src","loader","setTimeout","duration","setVideoPos","percentage","currentTime","className","type","min","max","onChange","ev","target","ref","hidden","FilePicker","setFile","accept_types","onClick","click","accept","_","files","item","order","s","lu","sort","a","b","slice","i_lu","findIndex","p","ordered","nextP","length","prevP","i","push","Tool","Area","quad","id","shape","isCarWalkable","direction","left","up","right","down","isParking","stop","isSelected","this","newId","points","map","x","Math","round","ru","rb","lb","carWalk","dir","parking","ad","Object","values","counter","ToolSelector","onSelect","onAdd","onSetDirections","onToggleType","ADD","SELECT","SET_DIRECTIONS","TOGGLE_TYPE","isPointInShape","res","edge","distancePointToPoint","hypot","projectPointToSegment","l","vec1","vec2","lineVec","vecSub","lineLen","lineVecNormalized","vecScale","pointProjLen","vecSum","v1","v2","vecNegative","v","n","vecRotate","upRotated","vecLen","vecFromCoordinateSystem","centroidOfShape","reduce","alpha","style1","width","stroke","fill","arrow","selected","style2","Canvas","img","quads","newQuad","tool","setSelected","updateQuads","deleteQuads","slider","height","options","ids","arrows","useState","setPoints","dragging","setDragging","modifier","setModifier","oldMouse","setOldMouse","dragIndexes","setDragIndexes","y","mouse","setMouse","canvas","context","getContext","Error","drawImage","e","fillStyle","fillRect","drawArea","close","path","snapToShapes","lineWidth","strokeStyle","drawPath","pos","shapes","flat","dist","point","d","minDist","newPoint","p1","p2","proj","canvasCtx","f_drawPoints","moveTo","beginPath","lineTo","closePath","drawPoint","tmpFill","tmpStroke","arc","drawArrows","directions","color","f_close","vec","topMid","botMid","rightMid","leftMid","entries","anchor","k","rotated","translation","tmpWidth","area","movement","style","some","filter","center","tmp","lw","ss","fs","drawText","toString","drawParking","text","size","font","ta","textAlign","tb","textBaseline","fillText","strokeText","handleSelect","find","indexes","distance","res_d","res_i","res_is","j","findPointInShapeIndex","stopDragging","selectedAreas","updated","onMouseDown","updatedShape","newArea","addPoint","targetArea","q","sectors","selectedDir","handleSetDirections","handleToggleType","onMouseUp","onMouseLeave","onMouseMove","ratio","clientWidth","topLeft","offsetLeft","offsetTop","pageX","pageY","onKeyDown","key","onKeyUp","tabIndex","onMouseEnter","focus","onBlur","Inspector","update","selectById","deleteById","inspected","setInspected","updateInspected","changed","unchanged","renderAD","renderedPoints","flatMap","val","renderedDirection","checked","stopPropagation","Delete","t","fromAreaDictionary","Check","toAreaDictionary","Clear","list","pending","fields","IOManager","load","dlRef","loadRef","filename","replace","formatData","formatted","formatArea","join","concat","f","console","error","csv","rows","split","strings","r","dictionaries","vals","newAreas","outStr","blob","Blob","dlUrl","URL","createObjectURL","setAttribute","revokeObjectURL","href","download","OptionSelector","updateOptions","ArrowUpward","App","file","videoSrc","setVideoSrc","video","quadList","setQuadList","setTool","setOptions","filteredList","every","index","notUpdated","videoWidth","undefined","videoHeight","name","arr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","main","blue","secondary","red","typography","button","fontWeight","overrides","MuiButton","outlined","border","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.4f87d561.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nimport \"./Video.css\";\n\ntype VideoProps = {\n  source: string;\n  setVideo: (video: HTMLVideoElement) => void;\n  setSlider: (value: number | undefined) => void;\n  value: number;\n};\n\nexport default function Video({\n  source,\n  setVideo,\n  setSlider,\n  value,\n}: VideoProps) {\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    if (videoRef.current && source) {\n      videoRef.current.src = source;\n      setVideo(videoRef.current);\n\n      const loader = () => {\n        setTimeout(() => {\n          if (videoRef.current?.duration) {\n            setVideoPos(1);\n          } else loader();\n        }, 10);\n      };\n\n      loader();\n    }\n  }, [source]);\n\n  const setVideoPos = (percentage: number) => {\n    if (!videoRef.current || !source || !percentage) {\n      return;\n    }\n    // force range 0 - 100\n    const value = percentage < 1 ? 1 : percentage > 100 ? 100 : percentage;\n    videoRef.current.currentTime = (value / 100) * videoRef.current.duration;\n    setSlider(value);\n  };\n\n  return (\n    <div className=\"VideoCanvas\">\n      <input\n        className=\"slider\"\n        type=\"range\"\n        min=\"1\"\n        max=\"100\"\n        onChange={(ev) => {\n          setVideoPos(+ev.target.value);\n        }}\n      />\n      <video ref={videoRef} hidden />\n    </div>\n  );\n}\n","import React, { useRef } from \"react\";\n\nimport \"./FilePicker.css\";\n\ntype FilePickerProps = {\n  setFile: (f: File | null) => void;\n  accept_types?: string;\n};\n\nfunction FilePicker({ setFile, accept_types = \"\" }: FilePickerProps) {\n  const ref = useRef<HTMLInputElement>(null);\n\n  return (\n    <div className=\"FilePicker\">\n      <button\n        className=\"btn contained primary\"\n        onClick={() => ref.current?.click()}\n      >\n        Select Video\n      </button>\n      <input\n        hidden\n        ref={ref}\n        type=\"file\"\n        accept={accept_types}\n        onChange={(_) => setFile(ref.current?.files?.item(0) ?? null)}\n      />\n    </div>\n  );\n}\n\nexport default FilePicker;\n","import { Shape } from './types';\n\nexport function order(s: Shape) {\n    const X = 0;\n    const Y = 1;\n\n    let lu = [...s].sort((a, b) => a[Y] < b[Y] ? -1 : 1).slice(0, 2).sort((a, b) => a[X] < b[X] ? -1 : 1)[0];\n    let i_lu = s.findIndex(p => p === lu);\n\n    const ordered: Shape = [];\n    const nextP = s[(i_lu + 1) % s.length];\n    const prevP = s[(i_lu + s.length - 1) % s.length];\n\n    if (nextP[Y] < prevP[Y]) {\n        for (let i = 0; i < s.length; i++) {\n            const p = s[(i_lu + i) % s.length];\n            ordered.push([...p]);\n        }\n    } else {\n        for (let i = 0; i < s.length; i++) {\n            const p = s[(i_lu + s.length - i) % s.length];\n            ordered.push([...p]);\n        }\n    }\n\n    return ordered; // force copy;\n}","import { order } from \"./data\";\nimport { AreaDictionary, Vector, Shape } from \"./types\";\n\nexport class Area {\n  private static counter = 0;\n\n  readonly id: number;\n  public shape: Shape;\n  public isCarWalkable = true;\n  public direction = {\n    left: true,\n    up: true,\n    right: true,\n    down: true,\n  };\n  public isParking = false;\n  public stop: string | null = null;\n  public isSelected = false;\n\n  constructor(quad?: Shape) {\n    this.id = Area.newId();\n    this.shape = quad ?? [\n      [-1, -1],\n      [-1, -1],\n      [-1, -1],\n      [-1, -1],\n    ];\n  }\n\n  static newId() {\n    return Area.counter++;\n  }\n\n  toAreaDictionary(): AreaDictionary {\n    const points = order(this.shape);\n    const dir = this.direction ?? [0, 0];\n    return {\n      id: this.id,\n      points: {\n        lu: points[0].map((x) => Math.round(x)) as Vector,\n        ru: points[1].map((x) => Math.round(x)) as Vector,\n        rb: points[2].map((x) => Math.round(x)) as Vector,\n        lb: points[3].map((x) => Math.round(x)) as Vector,\n      },\n      carWalk: this.isCarWalkable,\n      dir: { ...this.direction },\n      parking: this.isParking,\n      stop: `${this.stop ?? \"None\"}`,\n      ref: this,\n    };\n  }\n\n  fromAreaDictionary(ad: AreaDictionary) {\n    this.shape = Object.values(ad.points);\n    this.isCarWalkable = ad.carWalk;\n    const dirs = {\n      left: [-1, 0],\n      right: [1, 0],\n      up: [0, 1],\n      down: [0, -1],\n    };\n    this.direction = { ...ad.dir };\n\n    this.isParking = ad.parking;\n    this.stop = ad.stop;\n    ad.ref = this;\n    return this;\n  }\n}\n","import { Area } from \"./area\";\n\nexport type Vector = [number, number];\nexport type Shape = Vector[];\nexport enum Tool { ADD, SELECT, SET_DIRECTIONS, TOGGLE_TYPE };\n\nexport type DirKeys = \"left\" | \"right\" | \"up\" | \"down\";\n\nexport type AreaDictionary = {\n    id: number;\n    points: {\n        lu: Vector;\n        ru: Vector;\n        rb: Vector;\n        lb: Vector;\n    };\n    carWalk: boolean;\n    dir: {\n        left: boolean;\n        up: boolean;\n        right: boolean;\n        down: boolean;\n    };\n    parking: boolean;\n    stop: string;\n    changed?: boolean;\n    ref?: Area;\n};\n\nexport interface IIndexable<T = any> { [key: string]: T; }\n\nexport type Options = {\n    ids: boolean;\n    arrows: boolean;\n};\n\nexport { Area } from \"./area\";","import React from \"react\";\nimport { Tool } from \"../utilities/types\";\nimport \"./ToolSelector.scss\";\n\ntype ToolSelectorProps = {\n  value?: Tool;\n  onSelect?: () => void;\n  onAdd?: () => void;\n  onSetDirections?: () => void;\n  onToggleType?: () => void;\n};\n\nexport default function ToolSelector({\n  value,\n  onSelect,\n  onAdd,\n  onSetDirections,\n  onToggleType,\n}: ToolSelectorProps) {\n  return (\n    <div className=\"ToolSelector\">\n      {onAdd ? (\n        <button\n          className={`btn secondary ${\n            value === Tool.ADD ? \"contained\" : \"outlined\"\n          }`}\n          onClick={onAdd}\n        >\n          ADD\n        </button>\n      ) : (\n        \"\"\n      )}\n\n      {onSelect ? (\n        <button\n          className={`btn secondary ${\n            value === Tool.SELECT ? \"contained\" : \"outlined\"\n          }`}\n          onClick={onSelect}\n        >\n          SELECT\n        </button>\n      ) : (\n        \"\"\n      )}\n      {onSetDirections ? (\n        <button\n          className={`btn secondary ${\n            value === Tool.SET_DIRECTIONS ? \"contained\" : \"outlined\"\n          }`}\n          onClick={onSetDirections}\n        >\n          DIRECTIONS\n        </button>\n      ) : (\n        \"\"\n      )}\n\n      {onToggleType ? (\n        <button\n          className={`btn secondary ${\n            value === Tool.TOGGLE_TYPE ? \"contained\" : \"outlined\"\n          }`}\n          onClick={onToggleType}\n        >\n          TYPES\n        </button>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","import { Vector, Shape } from \"./types\";\n\nexport function findPointInShapeIndex(target: Vector, shapes: Shape[]) {\n  for (let i = 0; i < shapes.length; i++) {\n    if (isPointInShape(target, shapes[i])) return i;\n  }\n  return -1;\n}\n\nexport function isPointInShape(p: Vector, s: Shape) {\n  let res = false;\n  const X = 0;\n  const Y = 1;\n  for (let i = 0; i < s.length; i++) {\n    // https://www.eecs.umich.edu/courses/eecs380/HANDOUTS/PROJ2/InsidePoly.html\n    const edge = [s[i], s[(i + 1) % s.length]];\n    if (\n      // is the point in the Y range of the edge?\n      ((edge[0][Y] <= p[Y] && edge[1][Y] >= p[Y]) ||\n        (edge[1][Y] <= p[Y] && edge[0][Y] >= p[Y])) && // is our point to the left the line that our edge sits on at Y = point[Y]?\n      p[X] <\n        ((edge[0][X] - edge[1][X]) * (p[Y] - edge[1][Y])) /\n          (edge[0][Y] - edge[1][Y]) +\n          edge[1][X]\n    ) {\n      res = !res;\n    }\n  }\n  return res;\n}\n\nexport function distancePointToPoint(a: Vector, b: Vector) {\n  // Pitagora\n  return Math.hypot(a[0] - b[0], a[1] - b[1]);\n}\n\nexport function projectPointToSegment(\n  p: Vector,\n  l: [Vector, Vector]\n): Vector | null {\n  // WHY DO I ONLY THINK OF VECTORS IN MY FREE TIME AND NOT WHEN I'M ON THE CLOCK??????\n  const lineVec = vecSub(l[1], l[0]);\n  const lineLen = distancePointToPoint(l[0], l[1]);\n  const lineVecNormalized = vecScale(lineVec, 1 / lineLen);\n  const pointProjLen = dot(vecSub(p, l[0]), lineVecNormalized);\n  if (pointProjLen < 0 || pointProjLen > lineLen) return null; // proj outside the segment\n  const pointProj = vecSum(l[0], vecScale(lineVecNormalized, pointProjLen));\n  return pointProj;\n}\n\nexport function dot(vec1: Vector, vec2: Vector) {\n  return vec1[0] * vec2[0] + vec1[1] * vec2[1];\n}\n\nexport function vecSum(v1: Vector, v2: Vector): Vector {\n  return [v1[0] + v2[0], v1[1] + v2[1]];\n}\n\nexport function vecNegative(v: Vector): Vector {\n  return [-v[0], -v[1]];\n}\n\nexport function vecSub(v1: Vector, v2: Vector): Vector {\n  return vecSum(v1, vecNegative(v2));\n}\n\nexport function vecScale(v: Vector, n: number): Vector {\n  return [v[0] * n, v[1] * n];\n}\n\nexport function vecLen(v: Vector): number {\n  return distancePointToPoint([0, 0], v);\n}\n\nexport function vecFromCoordinateSystem(\n  v: Vector,\n  up: Vector,\n  right: Vector\n): Vector {\n  return vecSum(vecScale(right, v[0]), vecScale(up, v[1]));\n}\n\nexport function vecToCoordinateSystem(\n  v: Vector,\n  up: Vector,\n  right: Vector\n): Vector {\n  /* \n        x1 = rx * x + ux * y \n        y1 = ry * x + uy * y\n\n        x = (x1 - ux * y) / rx = (y1 - uy * y) / ry => \n        x1 * ry - ux * ry * y = y1 * rx - uy * rx * y =>\n        y = (x1 * ry - y1 * rx) / (ux * ry - uy * rx)\n     */\n  const y =\n    (v[0] * right[1] - v[1] * right[0]) / (up[0] * right[1] - up[1] * right[0]);\n  const x = (v[0] - up[0] * y) / right[0];\n  return [x, y];\n}\n\nexport function vecRotate(v: Vector, upRotated: Vector): Vector {\n  const up = vecScale(upRotated, 1 / vecLen(upRotated));\n  const right = [up[1], -up[0]] as Vector;\n  return vecFromCoordinateSystem(v, up, right);\n}\n\nexport function centroidOfShape(shape: Shape) {\n  const sum = shape.reduce((res, v) => vecSum(v, res));\n  return vecScale(sum, 1 / shape.length);\n}\n\nexport function dirShapeToShape(s1: Shape, s2: Shape) {\n  const center1 = centroidOfShape(s1);\n  const center2 = centroidOfShape(s2);\n  const lineC1toC2 = vecSub(center2, center1);\n  const distance = distancePointToPoint([0, 0], lineC1toC2);\n  return vecScale(lineC1toC2, 1 / distance);\n}\n","import React, { useRef, useState, useEffect } from \"react\";\nimport \"./Canvas.scss\";\nimport {\n  Area,\n  Vector,\n  Shape,\n  Tool,\n  DirKeys,\n  Options,\n} from \"../utilities/types\";\nimport {\n  distancePointToPoint,\n  projectPointToSegment,\n  findPointInShapeIndex,\n  vecSum,\n  vecScale,\n  isPointInShape,\n  vecRotate,\n  vecSub,\n  centroidOfShape,\n  vecNegative,\n} from \"../utilities/shapes\";\nimport { order } from \"../utilities/data\";\n\nconst CANVAS_W = 1920;\nconst CANVAS_H = 1080;\nconst POINT_RADIUS = 5;\nconst SNAP_DISTANCE = 25;\n// const ARROW_SCALE = .1;\nconst ARROW_SIZE = 16;\nconst ID_SIZE = 48;\n\nconst alpha = 0.25;\n\nconst style1 = {\n  width: 2,\n  stroke: `rgb(255, 50, 50)`,\n  fill: `rgba(255, 50, 50, ${alpha})`,\n  arrow: `rgba(255, 50, 50, ${alpha * 2})`,\n  selected: {\n    width: 2,\n    stroke: `rgb(255, 200, 50)`,\n    fill: `rgba(255, 200, 50, ${alpha})`,\n    arrow: `rgba(255, 200, 50, ${alpha * 2})`,\n  },\n};\n\nconst style2 = {\n  width: 2,\n  stroke: `rgb(50, 50, 250)`,\n  fill: `rgba(50, 50, 250, ${alpha})`,\n  arrow: `rgba(50, 50, 250, ${alpha * 2})`,\n  selected: {\n    width: 2,\n    stroke: `rgb(50, 250, 250)`,\n    fill: `rgba(50, 250, 250, ${alpha})`,\n    arrow: `rgba(50, 250, 250, ${alpha * 2})`,\n  },\n};\n\nexport interface CanvasProps {\n  img: CanvasImageSource | null;\n  quads: Area[];\n  newQuad: (quad: Area) => void;\n  tool: Tool;\n  setSelected: (index: number) => void;\n  updateQuads: (arr: Area[]) => void;\n  deleteQuads: (arr: Area[]) => void;\n  slider?: number;\n  width?: number;\n  height?: number;\n  options?: Options;\n}\n\nexport default function Canvas({\n  img,\n  quads,\n  newQuad,\n  tool,\n  setSelected,\n  updateQuads,\n  deleteQuads,\n  slider,\n  width,\n  height,\n  options = { ids: true, arrows: true },\n}: CanvasProps) {\n  const [points, setPoints] = useState<Shape>([]);\n  const [dragging, setDragging] = useState<boolean>(false);\n  const [modifier, setModifier] = useState<boolean>(false);\n  const [oldMouse, setOldMouse] = useState<Vector | null>(null);\n  const [dragIndexes, setDragIndexes] = useState<number[] | null>(null);\n\n  const ref = useRef<HTMLCanvasElement>(null);\n  const [mouse, setMouse] = useState<{ x: number; y: number }>({ x: 0, y: 0 });\n\n  let canvasH = CANVAS_H;\n  let canvasW = CANVAS_W;\n\n  useEffect(() => {\n    const canvas = ref.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    // Background\n    try {\n      if (!img) throw Error;\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    } catch (e) {\n      context.fillStyle = \"#fff\";\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    // Finished Quads\n    for (const quad of quads) {\n      drawArea(context, quad);\n    }\n\n    if (mouse.x && mouse.y) {\n      // New Quad\n      if (points && tool === Tool.ADD) {\n        let close = false;\n        const pos = snapToShapes(\n          [mouse.x, mouse.y],\n          quads.map((a) => a.shape)\n        );\n        let path = [pos, ...points];\n        if (points.length === 3) {\n          close = true;\n        }\n        context.lineWidth = style1.width;\n        context.strokeStyle = style1.stroke;\n        context.fillStyle = style1.fill;\n        drawPath(context, path, true, close);\n      }\n    }\n  }, [img, quads, tool, mouse, modifier, points, slider, width, options]);\n\n  const snapToShapes = (pos: Vector, shapes: Shape[]) => {\n    if (modifier) return pos;\n\n    // give priority to points instead of edges\n    // find the closest point\n    shapes.push([\n      [0, 0],\n      [canvasW, 0],\n      [canvasW, canvasH],\n      [0, canvasH],\n    ]); // add boundaries\n    let [minDist, newPoint] = shapes.flat().reduce(\n      ([dist, point]: [number, Vector | null], p) => {\n        const d = distancePointToPoint(pos, p);\n        if (d < dist || dist === -1) return [d, p];\n        else return [dist, point];\n      },\n      [-1, null]\n    );\n\n    if (newPoint && minDist < SNAP_DISTANCE) {\n      pos = newPoint;\n    } else {\n      [minDist, newPoint] = shapes.reduce(\n        ([dist, point]: [number, Vector | null], s) => {\n          // find the closest point in the edges\n          let [d, p] = s.reduce(\n            ([dist, point]: [number, Vector | null], p1, i, s) => {\n              const p2 = s[(i + 1) % s.length];\n              let proj = projectPointToSegment(pos, [p1, p2]);\n              let d, p;\n              // if we found a projection it is the closest point\n              if (proj) {\n                d = distancePointToPoint(pos, proj);\n                p = proj;\n                // confront it with the previous results\n                if (d < dist || dist === -1) return [d, p];\n              }\n              return [dist, point];\n            },\n            [-1, null]\n          );\n\n          // confront it with the previous results\n          if ((p && d < dist) || dist === -1) return [d, p];\n          return [dist, point];\n        },\n        [-1, null]\n      );\n\n      if (newPoint && minDist < SNAP_DISTANCE) {\n        pos = newPoint;\n      }\n    }\n\n    return pos;\n  };\n\n  const addPoint = () => {\n    if (!mouse.x || !mouse.y) {\n      return;\n    }\n\n    let pos: Vector = [mouse.x, mouse.y];\n\n    pos = snapToShapes(\n      pos,\n      quads.map((a) => a.shape)\n    );\n\n    const updatedShape = [pos, ...points];\n\n    if (updatedShape.length === 4) {\n      const newArea = new Area(order(updatedShape));\n      newArea.isSelected = true;\n      setSelected(-1);\n      newQuad(newArea);\n      setPoints([]);\n    } else {\n      setPoints(updatedShape);\n    }\n  };\n\n  const drawPath = (\n    canvasCtx: CanvasRenderingContext2D,\n    points: [number, number][],\n    f_drawPoints = false,\n    close = true\n  ) => {\n    if (points[0]) canvasCtx.moveTo(points[0][0], points[0][1]);\n    canvasCtx.beginPath();\n    for (const p of points) {\n      canvasCtx.lineTo(p[0], p[1]);\n    }\n\n    if (close) {\n      canvasCtx.closePath();\n      canvasCtx.fill();\n    }\n    canvasCtx.stroke();\n\n    if (f_drawPoints) {\n      for (const p of points) drawPoint(canvasCtx, p);\n    }\n  };\n\n  const drawPoint = (canvasCtx: CanvasRenderingContext2D, point: Vector) => {\n    const tmpFill = canvasCtx.fillStyle;\n    const tmpStroke = canvasCtx.strokeStyle;\n    canvasCtx.fillStyle = \"#5f5\";\n    canvasCtx.strokeStyle = \"#000\";\n    canvasCtx.beginPath();\n    canvasCtx.arc(point[0], point[1], POINT_RADIUS, 0, 2 * 3.15);\n    canvasCtx.closePath();\n    canvasCtx.fill();\n    canvasCtx.stroke();\n    canvasCtx.fillStyle = tmpFill;\n    canvasCtx.strokeStyle = tmpStroke;\n  };\n\n  const drawParking = (\n    canvasCtx: CanvasRenderingContext2D,\n    quad: Vector[],\n    color = \"#000\"\n  ) => {\n    if (quad.length !== 4) return;\n\n    const tmpStroke = canvasCtx.strokeStyle;\n    const tmpWidth = canvasCtx.lineWidth;\n    canvasCtx.strokeStyle = color;\n    canvasCtx.lineWidth = 3;\n\n    drawPath(canvasCtx, [quad[0], quad[2]], false, false);\n    drawPath(canvasCtx, [quad[1], quad[3]], false, false);\n\n    canvasCtx.strokeStyle = tmpStroke;\n    canvasCtx.lineWidth = tmpWidth;\n  };\n\n  const drawArrows = (\n    canvasCtx: CanvasRenderingContext2D,\n    quad: Vector[],\n    directions: { left: boolean; up: boolean; right: boolean; down: boolean },\n    color = \"#000\",\n    f_close = false\n  ) => {\n    let arrow: Shape = [\n      [-0.7, -1],\n      [0, 1],\n      [0.7, -1],\n    ];\n    arrow = arrow.map((vec) => vecScale(vec, ARROW_SIZE));\n\n    const topMid = centroidOfShape([quad[0], quad[1]]);\n    const botMid = centroidOfShape([quad[2], quad[3]]);\n    const rightMid = centroidOfShape([quad[1], quad[2]]);\n    const leftMid = centroidOfShape([quad[3], quad[0]]);\n\n    const up = vecSub(topMid, botMid);\n    const right = vecSub(rightMid, leftMid);\n\n    const arrows = Object.entries(directions).map(([k, v]) => {\n      if (!v) return null;\n      let dir: Vector, anchor: Vector;\n      switch (k) {\n        case \"up\":\n          dir = up;\n          anchor = topMid;\n          break;\n        case \"down\":\n          dir = vecNegative(up);\n          anchor = botMid;\n          break;\n        case \"right\":\n          dir = right;\n          anchor = rightMid;\n          break;\n        case \"left\":\n          dir = vecNegative(right);\n          anchor = leftMid;\n          break;\n        default:\n          return null;\n      }\n\n      const rotated = arrow.map((vec) => vecRotate(vec, dir));\n      const translation = vecSub(anchor, rotated[1]);\n      return rotated.map((vec) => vecSum(vec, translation));\n    });\n\n    const tmpStroke = canvasCtx.strokeStyle;\n    const tmpFill = canvasCtx.fillStyle;\n    const tmpWidth = canvasCtx.lineWidth;\n\n    if (f_close) canvasCtx.strokeStyle = \"#000\";\n    else canvasCtx.strokeStyle = color;\n\n    canvasCtx.fillStyle = color;\n    canvasCtx.lineWidth = 2;\n\n    for (const arrow of arrows) {\n      if (!arrow) continue;\n      drawPath(canvasCtx, arrow, false, f_close);\n    }\n\n    canvasCtx.strokeStyle = tmpStroke;\n    canvasCtx.fillStyle = tmpFill;\n    canvasCtx.lineWidth = tmpWidth;\n  };\n\n  const drawArea = (canvasCtx: CanvasRenderingContext2D, area: Area) => {\n    let movement: Vector = [0, 0];\n    // Drag\n    if (dragging && oldMouse) {\n      movement = [mouse.x! - oldMouse[0], mouse.y! - oldMouse[1]] as Vector;\n    }\n\n    const shape = area.isSelected\n      ? area.shape.map((p, i) => {\n        if (dragIndexes && dragIndexes.some((n) => n === i))\n          return snapToShapes(\n            vecSum(p, movement),\n            quads.filter((a) => a.id !== area.id).map((a) => a.shape)\n          );\n        else return p;\n      })\n      : area.shape;\n\n    const center = centroidOfShape(shape);\n\n    let style;\n    if (area.isCarWalkable) {\n      style = style1;\n    } else {\n      style = style2;\n    }\n    if (area.isSelected) style = style.selected;\n\n    const tmp = {\n      lw: canvasCtx.lineWidth,\n      ss: canvasCtx.strokeStyle,\n      fs: canvasCtx.fillStyle,\n    };\n    canvasCtx.lineWidth = style.width;\n    canvasCtx.strokeStyle = style.stroke;\n    canvasCtx.fillStyle = style.fill;\n\n    drawPath(canvasCtx, shape, area.isSelected, true);\n    if (options.ids)\n      drawText(canvasCtx, area.id.toString(), center, ID_SIZE, style.stroke);\n\n    if (tool === Tool.SET_DIRECTIONS)\n      drawArrows(canvasCtx, shape, area.direction, \"#3e3\", true);\n    else if (options.arrows)\n      drawArrows(canvasCtx, shape, area.direction, style.stroke);\n\n    if (area.isParking) drawParking(canvasCtx, shape, style.stroke);\n\n    canvasCtx.lineWidth = tmp.lw;\n    canvasCtx.strokeStyle = tmp.ss;\n    canvasCtx.fillStyle = tmp.fs;\n  };\n\n  const drawText = (\n    canvasCtx: CanvasRenderingContext2D,\n    text: string,\n    center: Vector,\n    size = 12,\n    color = \"#000\"\n  ) => {\n    const tmp = {\n      font: canvasCtx.font,\n      ta: canvasCtx.textAlign,\n      tb: canvasCtx.textBaseline,\n      fs: canvasCtx.fillStyle,\n      ss: canvasCtx.strokeStyle,\n    };\n\n    canvasCtx.font = `${size}px sans-serif`;\n    canvasCtx.textAlign = \"center\";\n    canvasCtx.textBaseline = \"middle\";\n    canvasCtx.fillStyle = color;\n    canvasCtx.strokeStyle = \"#000\";\n\n    canvasCtx.fillText(text, center[0], center[1]);\n    canvasCtx.strokeText(text, center[0], center[1]);\n\n    canvasCtx.font = tmp.font;\n    canvasCtx.textAlign = tmp.ta;\n    canvasCtx.textBaseline = tmp.tb;\n    canvasCtx.fillStyle = tmp.fs;\n  };\n\n  const handleSelect = () => {\n    // check if we have a selected area\n    const selected = quads.find((a) => a.isSelected);\n    let indexes: number[] | null = null;\n    if (selected) {\n      // check its closest points and edges to drag them\n      const points = selected.shape;\n      let distance: number;\n      indexes = [-1];\n      // find the closest point to the mouse pointer\n      [distance, indexes[0]] = points.reduce(\n        ([res_d, res_i], p, i) => {\n          const d = distancePointToPoint([mouse.x!, mouse.y!], p);\n          return d < res_d ? [d, i] : [res_d, res_i];\n        },\n        [999, -1]\n      );\n      // if it's too far check if one of the edges is close enough\n      if (distance > SNAP_DISTANCE) {\n        [distance, indexes] = points.reduce(\n          ([res_d, res_is], p, i, points) => {\n            const j = (i + 1) % points.length;\n            const p1 = points[j];\n            const proj = projectPointToSegment([mouse.x!, mouse.y!], [p, p1]);\n            if (!proj) return [res_d, res_is];\n            const dist = distancePointToPoint([mouse.x!, mouse.y!], proj);\n            return dist < res_d ? [dist, [i, j]] : [res_d, res_is];\n          },\n          [999, [-1]]\n        );\n      }\n      // if it's not check if we clicked it and drag the entire shape\n      if (distance > SNAP_DISTANCE) {\n        if (isPointInShape([mouse.x, mouse.y], selected.shape)) {\n          indexes = [0, 1, 2, 3];\n        } else {\n          indexes = null;\n        }\n      }\n    }\n\n    if (indexes) {\n      // update the state\n      setDragIndexes(indexes);\n      setDragging(true);\n      setOldMouse([mouse.x!, mouse.y!]);\n    } else {\n      // check if we clicked an area and select it\n      const target = findPointInShapeIndex(\n        [mouse.x, mouse.y],\n        quads.map((a) => a.shape)\n      );\n      setSelected(target);\n    }\n  };\n\n  const handleSetDirections = () => {\n    const pos = [mouse.x, mouse.y] as Vector;\n    const targetArea = quads.find((q) => isPointInShape(pos, q.shape));\n    if (!targetArea) return;\n\n    const shape = targetArea.shape;\n    const center = centroidOfShape(shape);\n    const sectors = {\n      up: [shape[0], shape[1], center] as Shape,\n      down: [shape[2], shape[3], center] as Shape,\n      right: [shape[1], shape[2], center] as Shape,\n      left: [shape[3], shape[0], center] as Shape,\n    };\n\n    const selectedDir: DirKeys | null = (() => {\n      for (const [k, v] of Object.entries(sectors)) {\n        if (isPointInShape(pos, v)) return k as DirKeys;\n      }\n      return null;\n    })();\n\n    if (!selectedDir) return;\n\n    targetArea.direction[selectedDir] = !targetArea.direction[selectedDir];\n\n    updateQuads([targetArea]);\n  };\n\n  const handleToggleType = () => {\n    const pos = [mouse.x, mouse.y] as Vector;\n    const targetArea = quads.find((q) => isPointInShape(pos, q.shape));\n    if (!targetArea) return;\n\n    if (targetArea.isCarWalkable) {\n      targetArea.isCarWalkable = false;\n      targetArea.direction = {\n        up: false,\n        right: false,\n        left: false,\n        down: false,\n      };\n    } else {\n      targetArea.isCarWalkable = true;\n      targetArea.direction = { up: true, right: true, left: true, down: true };\n    }\n\n    updateQuads([targetArea]);\n  };\n\n  const onMouseDown = () => {\n    switch (tool) {\n      case Tool.ADD:\n        addPoint();\n        break;\n      case Tool.SELECT:\n        handleSelect();\n        break;\n      case Tool.SET_DIRECTIONS:\n        handleSetDirections();\n        break;\n      case Tool.TOGGLE_TYPE:\n        handleToggleType();\n        break;\n      default:\n        throw Error(\"Tool not implemented\");\n    }\n  };\n\n  const stopDragging = () => {\n    if (dragging && oldMouse) {\n      const selectedAreas = quads.filter((a) => a.isSelected);\n      const movement: Vector = [mouse.x! - oldMouse[0], mouse.y! - oldMouse[1]];\n      const updated = selectedAreas.map((a) => {\n        a.shape = a.shape.map((p, i) => {\n          if (dragIndexes && dragIndexes.some((n) => n === i))\n            return snapToShapes(\n              vecSum(p, movement),\n              quads.filter((b) => b.id !== a.id).map((b) => b.shape)\n            );\n          else return p;\n        });\n        return a;\n      });\n      updateQuads(updated);\n      setDragging(false);\n      setDragIndexes(null);\n      setOldMouse(null);\n    }\n  };\n\n  const onMouseUp = () => {\n    stopDragging();\n  };\n\n  const onMouseLeave = () => {\n    if (dragging && dragIndexes?.length === 4) {\n      setDragging(false);\n      setDragIndexes(null);\n      setOldMouse(null);\n      deleteQuads(quads.filter((q) => q.isSelected));\n    } else {\n      stopDragging();\n    }\n  };\n  const onMouseMove = (e: React.MouseEvent) => {\n    const canvas = ref.current;\n    if (canvas) {\n      const ratio = canvas.clientWidth / canvas.width;\n      const topLeft = [canvas.offsetLeft, canvas.offsetTop];\n      setMouse({\n        x: (e.pageX - topLeft[0]) / ratio,\n        y: (e.pageY - topLeft[1]) / ratio,\n      });\n    }\n  };\n\n  return (\n    <div className=\"Canvas\">\n      <canvas\n        ref={ref}\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onMouseLeave={onMouseLeave}\n        onMouseMove={(e) => onMouseMove(e)}\n        width={CANVAS_W}\n        height={CANVAS_H}\n        onKeyDown={(e) => {\n          if (e.key === \"Control\") setModifier(true);\n        }}\n        onKeyUp={(e) => {\n          if (e.key === \"Control\") setModifier(false);\n        }}\n        tabIndex={0}\n        onMouseEnter={() => ref.current?.focus()}\n        onBlur={() => setPoints([])}\n      />\n    </div>\n  );\n}\n","import { Check, Clear, Delete } from '@material-ui/icons';\nimport React, { useEffect, useState } from \"react\";\nimport { Area, AreaDictionary, IIndexable, Vector } from \"../utilities/types\";\n\nimport \"./Inspector.scss\";\n\ntype InspectorProps = {\n  target: Area[];\n  update: (updated: Area[]) => void;\n  selectById: (id: number) => void;\n  deleteById: (id: number) => void;\n};\n\nexport default function Inspector({\n  target,\n  update,\n  selectById,\n  deleteById,\n}: InspectorProps) {\n  const [inspected, setInspected] = useState<AreaDictionary[]>();\n  const updateInspected = (updated: AreaDictionary, changed = true) => {\n    updated.changed = changed;\n    if (!inspected) return;\n    const unchanged = inspected?.filter((a) => a.id !== updated.id);\n    setInspected(\n      [updated, ...unchanged].sort((a, b) => (a.id < b.id ? -1 : 1))\n    );\n  };\n\n  useEffect(() => {\n    const selected = target;\n\n    let list = selected.map((a) => a.toAreaDictionary());\n\n    const pending = inspected?.filter((t) => t.changed);\n    list = list.map((a) => {\n      const t = pending?.find((t) => t.id === a.id);\n      return t ? t : a;\n    });\n\n    list = list.sort((a, b) => (a.id < b.id ? -1 : 1));\n\n    setInspected(list);\n  }, [target]);\n\n  function renderAD(a: AreaDictionary) {\n    const renderPoint = (p: Vector, key: string, ref: AreaDictionary) => {\n      return p.map((val, i) => {\n        return (\n          <td key={`${key}${i}`}>\n            <input\n              type=\"number\"\n              value={Math.round(val)}\n              onChange={(e) => {\n                (ref.points as IIndexable)[key][i] = +e.target.value;\n                updateInspected(ref);\n              }}\n            />\n          </td>\n        );\n      });\n    };\n\n    const renderedPoints = Object.entries(a.points).flatMap(([k, v]) =>\n      renderPoint(v, k, a)\n    );\n\n    const renderedDirection = Object.entries(a.dir).map(([k, v]) => {\n      return (\n        <td key={k}>\n          <input\n            type=\"checkbox\"\n            checked={v}\n            onChange={() => {\n              (a.dir as IIndexable)[k] = !(a.dir as IIndexable)[k];\n              updateInspected(a);\n            }}\n          />\n        </td>\n      );\n    });\n\n    return (\n      <tr\n        key={a.id}\n        onClick={() => selectById(a.id)}\n        className={a.ref?.isSelected ? \"selected\" : \"\"}\n      >\n        <td key=\"delete\" className=\"delete\">\n          <button\n            className=\"btn contained secondary\"\n            onClick={(e) => {\n              e.stopPropagation();\n              deleteById(a.id);\n            }}\n          >\n            <Delete />\n          </button>\n        </td>\n        <td key=\"id\">\n          <div className=\"id\"> {a.id} </div>\n        </td>\n        {renderedPoints}\n        <td key=\"iscarwalkable\">\n          <input\n            type=\"checkbox\"\n            checked={a.carWalk}\n            onChange={() => {\n              a.carWalk = !a.carWalk;\n              updateInspected(a);\n            }}\n          />\n        </td>\n        {renderedDirection}\n        <td key=\"isparking\">\n          <input\n            type=\"checkbox\"\n            checked={a.parking}\n            onChange={() => {\n              a.parking = !a.parking;\n              updateInspected(a);\n            }}\n          />\n        </td>\n        <td key=\"isstop\">\n          <input\n            type=\"text\"\n            value={a.stop ?? \"None\"}\n            onChange={(e) => {\n              a.stop = e.target.value;\n              updateInspected(a);\n            }}\n          />\n        </td>\n        <td className={!a.changed ? \"hide\" : \"space\"} />\n        <td key=\"update\" className={!a.changed ? \"hide\" : \"\"}>\n          <button\n            className=\"btn contained primary\"\n            onClick={() => {\n              updateInspected(a, false);\n              update([\n                target.find((t) => t.id === a.id)!.fromAreaDictionary(a),\n              ]);\n            }}\n          >\n            <Check />\n          </button>\n        </td>\n        <td key=\"discard\" className={!a.changed ? \"hide\" : \"\"}>\n          <button\n            className={`btn contained secondary ${!a.changed ? \"hide\" : \"\"}`}\n            onClick={() => {\n              a = target.find((t) => t.id === a.id)!.toAreaDictionary();\n              updateInspected(a, false);\n            }}\n          >\n            <Clear />\n          </button>\n        </td>\n      </tr>\n    );\n  }\n\n  return (\n    <div className=\"Inspector\">\n      <table>\n        <thead>\n          <tr>\n            <th />\n            <th>ID </th>\n            <th>luX </th>\n            <th>luY </th>\n            <th>ruX </th>\n            <th>ruY </th>\n            <th>rbX </th>\n            <th>rbY </th>\n            <th>lbX </th>\n            <th>lbY </th>\n            <th>CarWalk </th>\n            <th>Left </th>\n            <th>Up </th>\n            <th>Right </th>\n            <th>Down </th>\n            <th>Parking </th>\n            <th>Stop </th>\n          </tr>\n        </thead>\n        <tbody>{inspected?.map((a) => renderAD(a))}</tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { useRef } from \"react\";\nimport { Area, AreaDictionary, Vector } from \"../utilities/types\";\n\nimport \"./IOManager.css\";\n\nconst fields = [\n  \"luX\",\n  \"luY\",\n  \"ruX\",\n  \"ruY\",\n  \"rbX\",\n  \"rbY\",\n  \"lbX\",\n  \"lbY\",\n  \"CarWalk\",\n  \"Left\",\n  \"Up\",\n  \"Right\",\n  \"Down\",\n  \"Parking\",\n  \"Stop\",\n];\n\ntype IOMangerProps = {\n  target: Area[];\n  source?: string;\n  load: (arr: Area[]) => void;\n};\n\nexport function IOManager({ target, source, load }: IOMangerProps) {\n  const dlRef = useRef<HTMLAnchorElement>(null);\n  const loadRef = useRef<HTMLInputElement>(null);\n\n  const filename = source ? source.replace(\".mp4\", \"_areas.csv\") : \"areas.csv\";\n\n  const download = () => {\n    const outStr = formatData(target);\n    const blob = new Blob([outStr], { type: \"text/csv;charset=utf-8;\" });\n    const dlUrl = URL.createObjectURL(blob);\n    dlRef.current?.setAttribute(\"href\", dlUrl);\n    dlRef.current?.click();\n    URL.revokeObjectURL(dlUrl);\n  };\n\n  const formatData = (target: Area[]) => {\n    const formatted = target.map(formatArea);\n    return [fields.join(\",\")].concat(formatted).join(\"\\n\");\n  };\n\n  const formatArea = (area: Area) => {\n    const ad = area.toAreaDictionary();\n\n    const points = [ad.points.lu, ad.points.ru, ad.points.rb, ad.points.lb]\n      .map((p) => p.join(\",\"))\n      .join(\",\");\n    const carWalk = ad.carWalk ? 1 : 0;\n    const parking = ad.parking ? 1 : 0;\n    const stop = ad.stop;\n    const direction = [ad.dir.left, ad.dir.up, ad.dir.right, ad.dir.down]\n      .map((f) => (f ? 1 : 0))\n      .join(\",\");\n\n    return [points, carWalk, direction, parking, stop].join(\",\");\n  };\n\n  const loader = async (f: File | null) => {\n    if (!f) {\n      console.error(\"Unable to load file!\");\n      return;\n    }\n    const csv = await f.text();\n    const rows = csv.split(\"\\n\").filter((s) => s !== \"\");\n    const strings = rows.slice(1).map((r) => r.split(\",\"));\n    const dictionaries = strings.map((r) => {\n      let ad: any = { points: {}, dir: {} };\n      const vals: number[] = r.map((v) => +v);\n      ad.points.lu = vals.slice(0, 2) as Vector;\n      ad.points.ru = vals.slice(2, 4) as Vector;\n      ad.points.rb = vals.slice(4, 6) as Vector;\n      ad.points.lb = vals.slice(6, 8) as Vector;\n      ad.carWalk = vals[8] > 0;\n      ad.dir.left = vals[9] > 0;\n      ad.dir.up = vals[10] > 0;\n      ad.dir.right = vals[11] > 0;\n      ad.dir.down = vals[12] > 0;\n      ad.parking = vals[13] > 0;\n      ad.stop = r[14];\n      return ad as AreaDictionary;\n    });\n    const newAreas = dictionaries.map((ad) =>\n      new Area().fromAreaDictionary(ad)\n    );\n    load(newAreas);\n  };\n\n  return (\n    <div className=\"IOManager\">\n      <button\n        className=\"btn contained primary\"\n        onClick={() => loadRef.current?.click()}\n      >\n        Load CSV\n      </button>\n      <input\n        hidden\n        type=\"file\"\n        ref={loadRef}\n        accept=\".csv\"\n        onChange={() => loader(loadRef.current?.files?.item(0) ?? null)}\n      />\n\n      <button className=\"btn contained primary\" onClick={download}>\n        Download\n      </button>\n      <a ref={dlRef} href=\".\" download={filename} hidden>\n        hidden download link\n      </a>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Options } from \"../utilities/types\";\nimport \"./OptionSelector.scss\";\nimport { ArrowUpward } from \"@material-ui/icons\";\n\ntype OptionSelectorProps = {\n  options: Options;\n  updateOptions: (o: Options) => void;\n};\n\nexport default function OptionSelector({\n  options,\n  updateOptions,\n}: OptionSelectorProps) {\n  return (\n    <div className=\"OptionSelector\">\n      <button\n        className={`btn ${options.ids ? \"contained\" : \"outlined\"}`}\n        onClick={() => updateOptions({ ...options, ids: !options.ids })}\n      >\n        IDs\n      </button>\n\n      <button\n        className={`btn ${options.arrows ? \"contained\" : \"outlined\"}`}\n        onClick={() => updateOptions({ ...options, arrows: !options.arrows })}\n      >\n        <ArrowUpward />\n      </button>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport Video from './components/Video';\nimport FilePicker from './components/FilePicker';\nimport { Area, Tool, Options } from './utilities/types';\nimport ToolSelector from './components/ToolSelector';\nimport Canvas from './components/Canvas';\nimport Inspector from './components/Inspector';\nimport { IOManager } from './components/IOManager';\nimport OptionSelector from './components/OptionSelector';\n\n\nexport default function App() {\n\n    const [file, setFile] = useState<File | null>(null);\n    const [videoSrc, setVideoSrc] = useState<string>(\"\");\n    const [video, setVideo] = useState<HTMLVideoElement | null>(null);\n    const [slider, setSlider] = useState<number | undefined>();\n    const [quadList, setQuadList] = useState<Area[]>([]);\n    const [tool, setTool] = useState<Tool>(Tool.ADD);\n    const [options, setOptions] = useState<Options>({ ids: true, arrows: false, });\n\n    useEffect(() => {\n        if (file) {\n            const source = URL.createObjectURL(file);\n            setVideoSrc(source);\n        }\n    }, [file]);\n\n    const deleteQuads = (quads: Area[]) => {\n        const filteredList = quadList.filter(a => quads.every(b => b.id !== a.id));\n        setQuadList(filteredList);\n    };\n\n    const setSelected = (index: number) => {\n        quadList.map(a => a.isSelected = false);\n        if (index >= 0 && index < quadList.length) {\n            quadList[index].isSelected = true;\n        }\n        setQuadList([...quadList]);\n    };\n\n    const setSelectedById = (id: number) => {\n        setSelected(quadList.findIndex(a => a.id === id));\n    };\n\n    const updateQuads = (quads: Area[]) => {\n        const notUpdated = quadList.filter(a => quads.every(b => b.id !== a.id));\n        setQuadList([...quads, ...notUpdated]);\n    };\n\n    return (\n        <div className=\"App\">\n            <div>\n                <div className=\"BlockButtons\">\n                    <OptionSelector\n                        options={options}\n                        updateOptions={setOptions}\n                    />\n                </div>\n                <div className=\"BlockCanvas\">\n                    <Canvas\n                        img={video}\n                        quads={quadList}\n                        newQuad={(quad: Area) => setQuadList([quad, ...quadList])}\n                        tool={tool}\n                        setSelected={setSelected}\n                        updateQuads={updateQuads}\n                        deleteQuads={deleteQuads}\n                        slider={slider}\n                        width={video?.videoWidth || undefined}\n                        height={video?.videoHeight || undefined}\n                        options={options}\n                    />\n                    <Video\n                        source={videoSrc}\n                        setVideo={v => { setVideo(v); setQuadList([]); }}\n                        setSlider={setSlider}\n                        value={slider ?? 0}\n                    />\n                </div>\n                <div className=\"BlockButtons\">\n                    <ToolSelector\n                        value={tool}\n                        onAdd={() => { setTool(Tool.ADD); setSelected(-1); }}\n                        onSelect={() => { setTool(Tool.SELECT); setSelected(-1); }}\n                        onSetDirections={() => { setTool(Tool.SET_DIRECTIONS); setSelected(-1); }}\n                        onToggleType={() => { setTool(Tool.TOGGLE_TYPE); setSelected(-1); }}\n                    />\n                    <FilePicker setFile={setFile} accept_types=\"video/*\" />\n                    <IOManager\n                        target={quadList}\n                        source={file?.name}\n                        load={arr => setQuadList(arr)}\n                    />\n                </div>\n            </div>\n            <div>\n                <Inspector\n                    target={quadList}\n                    update={updateQuads}\n                    selectById={setSelectedById}\n                    deleteById={(id) => deleteQuads(quadList.filter(q => q.id === id))}\n                />\n            </div>\n        </div>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { blue, red } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: blue[400],\n    },\n    secondary: {\n      main: red[400],\n    },\n  },\n  typography: {\n    button: {\n      fontWeight: \"bold\",\n    },\n  },\n  overrides: {\n    MuiButton: {\n      outlined: {\n        border: \"2px solid !important\",\n      }\n    }\n  }\n\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}