{"version":3,"sources":["components/Video.tsx","components/FilePicker.tsx","utilities/data.ts","utilities/area.ts","utilities/types.ts","components/ToolSelector.tsx","utilities/shapes.ts","components/Canvas.tsx","components/Inspector.tsx","components/IOManager.tsx","components/OptionSelector.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Video","source","setVideo","setSlider","videoRef","value","useRef","useEffect","current","src","loader","setTimeout","duration","setVideoPos","percentage","currentTime","className","type","min","max","onChange","ev","target","ref","hidden","FilePicker","setFile","accept_types","onClick","click","accept","_","files","item","order","s","lu","sort","a","b","slice","i_lu","findIndex","p","ordered","nextP","length","prevP","i","push","Tool","Area","quad","id","shape","isCarWalkable","direction","left","up","right","down","isParking","stop","isSelected","this","newId","points","map","x","Math","round","ru","rb","lb","carWalk","dir","parking","ad","Object","values","counter","ToolSelector","onSelect","onAdd","onSetDirections","onToggleType","ADD","SELECT","SET_DIRECTIONS","TOGGLE_TYPE","isPointInShape","res","edge","distancePointToPoint","hypot","projectPointToSegment","l","vec1","vec2","lineVec","vecSub","lineLen","lineVecNormalized","vecScale","pointProjLen","vecSum","v1","v2","vecNegative","v","n","vecRotate","upRotated","vecLen","vecFromCoordinateSystem","centroidOfShape","reduce","alpha","style1","width","stroke","fill","arrow","selected","style2","Canvas","img","quads","newQuad","tool","setSelected","updateQuads","deleteQuads","slider","height","options","ids","arrows","useState","setPoints","dragging","setDragging","modifier","setModifier","oldMouse","setOldMouse","dragIndexes","setDragIndexes","y","mouse","setMouse","canvasH","canvasW","canvas","context","getContext","Error","drawImage","e","fillStyle","fillRect","drawArea","close","path","snapToShapes","lineWidth","strokeStyle","drawPath","pos","shapes","flat","dist","point","d","minDist","newPoint","p1","p2","proj","canvasCtx","f_drawPoints","moveTo","beginPath","lineTo","closePath","drawPoint","tmpFill","tmpStroke","arc","drawArrows","directions","color","f_close","vec","topMid","botMid","rightMid","leftMid","entries","anchor","k","rotated","translation","tmpWidth","area","movement","style","some","filter","center","tmp","lw","ss","fs","drawText","toString","drawParking","text","size","font","ta","textAlign","tb","textBaseline","fillText","strokeText","handleSelect","find","indexes","distance","res_d","res_i","res_is","j","findPointInShapeIndex","stopDragging","selectedAreas","updated","onMouseDown","updatedShape","newArea","addPoint","targetArea","q","sectors","selectedDir","handleSetDirections","handleToggleType","onMouseUp","onMouseLeave","onMouseMove","ratio","clientWidth","topLeft","offsetLeft","offsetTop","pageX","pageY","onKeyDown","key","onKeyUp","tabIndex","onMouseEnter","focus","onBlur","Inspector","update","selectById","deleteById","inspected","setInspected","updateInspected","changed","unchanged","renderAD","renderedPoints","flatMap","val","renderedDirection","checked","stopPropagation","Delete","t","fromAreaDictionary","Check","toAreaDictionary","Clear","list","pending","fields","IOManager","load","dlRef","loadRef","filename","replace","formatData","formatted","formatArea","join","concat","f","console","error","csv","rows","split","strings","r","dictionaries","vals","newAreas","outStr","blob","Blob","dlUrl","URL","createObjectURL","setAttribute","revokeObjectURL","href","download","OptionSelector","updateOptions","ArrowUpward","App","file","videoSrc","setVideoSrc","video","quadList","setQuadList","setTool","setOptions","filteredList","every","index","notUpdated","videoWidth","undefined","videoHeight","name","arr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","main","blue","secondary","red","typography","button","fontWeight","overrides","MuiButton","outlined","border","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.b3aea32d.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\n\r\nimport \"./Video.css\";\r\n\r\ntype VideoProps = {\r\n  source: string;\r\n  setVideo: (video: HTMLVideoElement) => void;\r\n  setSlider: (value: number | undefined) => void;\r\n  value: number;\r\n};\r\n\r\nexport default function Video({\r\n  source,\r\n  setVideo,\r\n  setSlider,\r\n  value,\r\n}: VideoProps) {\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (videoRef.current && source) {\r\n      videoRef.current.src = source;\r\n      setVideo(videoRef.current);\r\n\r\n      const loader = () => {\r\n        setTimeout(() => {\r\n          if (videoRef.current?.duration) {\r\n            setVideoPos(1);\r\n          } else loader();\r\n        }, 10);\r\n      };\r\n\r\n      loader();\r\n    }\r\n  }, [source]);\r\n\r\n  const setVideoPos = (percentage: number) => {\r\n    if (!videoRef.current || !source || !percentage) {\r\n      return;\r\n    }\r\n    // force range 0 - 100\r\n    const value = percentage < 1 ? 1 : percentage > 100 ? 100 : percentage;\r\n    videoRef.current.currentTime = (value / 100) * videoRef.current.duration;\r\n    setSlider(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"VideoCanvas\">\r\n      <input\r\n        className=\"slider\"\r\n        type=\"range\"\r\n        min=\"1\"\r\n        max=\"100\"\r\n        onChange={(ev) => {\r\n          setVideoPos(+ev.target.value);\r\n        }}\r\n      />\r\n      <video ref={videoRef} hidden />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from \"react\";\r\n\r\nimport \"./FilePicker.css\";\r\n\r\ntype FilePickerProps = {\r\n  setFile: (f: File | null) => void;\r\n  accept_types?: string;\r\n};\r\n\r\nfunction FilePicker({ setFile, accept_types = \"\" }: FilePickerProps) {\r\n  const ref = useRef<HTMLInputElement>(null);\r\n\r\n  return (\r\n    <div className=\"FilePicker\">\r\n      <button\r\n        className=\"btn contained primary\"\r\n        onClick={() => ref.current?.click()}\r\n      >\r\n        Select Video\r\n      </button>\r\n      <input\r\n        hidden\r\n        ref={ref}\r\n        type=\"file\"\r\n        accept={accept_types}\r\n        onChange={(_) => setFile(ref.current?.files?.item(0) ?? null)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilePicker;\r\n","import { Shape } from './types';\r\n\r\nexport function order(s: Shape) {\r\n    const X = 0;\r\n    const Y = 1;\r\n\r\n    let lu = [...s].sort((a, b) => a[Y] < b[Y] ? -1 : 1).slice(0, 2).sort((a, b) => a[X] < b[X] ? -1 : 1)[0];\r\n    let i_lu = s.findIndex(p => p === lu);\r\n\r\n    const ordered: Shape = [];\r\n    const nextP = s[(i_lu + 1) % s.length];\r\n    const prevP = s[(i_lu + s.length - 1) % s.length];\r\n\r\n    if (nextP[Y] < prevP[Y]) {\r\n        for (let i = 0; i < s.length; i++) {\r\n            const p = s[(i_lu + i) % s.length];\r\n            ordered.push([...p]);\r\n        }\r\n    } else {\r\n        for (let i = 0; i < s.length; i++) {\r\n            const p = s[(i_lu + s.length - i) % s.length];\r\n            ordered.push([...p]);\r\n        }\r\n    }\r\n\r\n    return ordered; // force copy;\r\n}","import { order } from \"./data\";\r\nimport { AreaDictionary, Vector, Shape } from \"./types\";\r\n\r\nexport class Area {\r\n  private static counter = 0;\r\n\r\n  readonly id: number;\r\n  public shape: Shape;\r\n  public isCarWalkable = true;\r\n  public direction = {\r\n    left: true,\r\n    up: true,\r\n    right: true,\r\n    down: true,\r\n  };\r\n  public isParking = false;\r\n  public stop: string | null = null;\r\n  public isSelected = false;\r\n\r\n  constructor(quad?: Shape) {\r\n    this.id = Area.newId();\r\n    this.shape = quad ?? [\r\n      [-1, -1],\r\n      [-1, -1],\r\n      [-1, -1],\r\n      [-1, -1],\r\n    ];\r\n  }\r\n\r\n  static newId() {\r\n    return Area.counter++;\r\n  }\r\n\r\n  toAreaDictionary(): AreaDictionary {\r\n    const points = order(this.shape);\r\n    const dir = this.direction ?? [0, 0];\r\n    return {\r\n      id: this.id,\r\n      points: {\r\n        lu: points[0].map((x) => Math.round(x)) as Vector,\r\n        ru: points[1].map((x) => Math.round(x)) as Vector,\r\n        rb: points[2].map((x) => Math.round(x)) as Vector,\r\n        lb: points[3].map((x) => Math.round(x)) as Vector,\r\n      },\r\n      carWalk: this.isCarWalkable,\r\n      dir: { ...this.direction },\r\n      parking: this.isParking,\r\n      stop: `${this.stop ?? \"None\"}`,\r\n      ref: this,\r\n    };\r\n  }\r\n\r\n  fromAreaDictionary(ad: AreaDictionary) {\r\n    this.shape = Object.values(ad.points);\r\n    this.isCarWalkable = ad.carWalk;\r\n    const dirs = {\r\n      left: [-1, 0],\r\n      right: [1, 0],\r\n      up: [0, 1],\r\n      down: [0, -1],\r\n    };\r\n    this.direction = { ...ad.dir };\r\n\r\n    this.isParking = ad.parking;\r\n    this.stop = ad.stop;\r\n    ad.ref = this;\r\n    return this;\r\n  }\r\n}\r\n","import { Area } from \"./area\";\r\n\r\nexport type Vector = [number, number];\r\nexport type Shape = Vector[];\r\nexport enum Tool { ADD, SELECT, SET_DIRECTIONS, TOGGLE_TYPE };\r\n\r\nexport type DirKeys = \"left\" | \"right\" | \"up\" | \"down\";\r\n\r\nexport type AreaDictionary = {\r\n    id: number;\r\n    points: {\r\n        lu: Vector;\r\n        ru: Vector;\r\n        rb: Vector;\r\n        lb: Vector;\r\n    };\r\n    carWalk: boolean;\r\n    dir: {\r\n        left: boolean;\r\n        up: boolean;\r\n        right: boolean;\r\n        down: boolean;\r\n    };\r\n    parking: boolean;\r\n    stop: string;\r\n    changed?: boolean;\r\n    ref?: Area;\r\n};\r\n\r\nexport interface IIndexable<T = any> { [key: string]: T; }\r\n\r\nexport type Options = {\r\n    ids: boolean;\r\n    arrows: boolean;\r\n};\r\n\r\nexport { Area } from \"./area\";","import React from \"react\";\r\nimport { Tool } from \"../utilities/types\";\r\nimport \"./ToolSelector.scss\";\r\n\r\ntype ToolSelectorProps = {\r\n  value?: Tool;\r\n  onSelect?: () => void;\r\n  onAdd?: () => void;\r\n  onSetDirections?: () => void;\r\n  onToggleType?: () => void;\r\n};\r\n\r\nexport default function ToolSelector({\r\n  value,\r\n  onSelect,\r\n  onAdd,\r\n  onSetDirections,\r\n  onToggleType,\r\n}: ToolSelectorProps) {\r\n  return (\r\n    <div className=\"ToolSelector\">\r\n      {onAdd ? (\r\n        <button\r\n          className={`btn secondary ${\r\n            value === Tool.ADD ? \"contained\" : \"outlined\"\r\n          }`}\r\n          onClick={onAdd}\r\n        >\r\n          ADD\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {onSelect ? (\r\n        <button\r\n          className={`btn secondary ${\r\n            value === Tool.SELECT ? \"contained\" : \"outlined\"\r\n          }`}\r\n          onClick={onSelect}\r\n        >\r\n          SELECT\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {onSetDirections ? (\r\n        <button\r\n          className={`btn secondary ${\r\n            value === Tool.SET_DIRECTIONS ? \"contained\" : \"outlined\"\r\n          }`}\r\n          onClick={onSetDirections}\r\n        >\r\n          DIRECTIONS\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {onToggleType ? (\r\n        <button\r\n          className={`btn secondary ${\r\n            value === Tool.TOGGLE_TYPE ? \"contained\" : \"outlined\"\r\n          }`}\r\n          onClick={onToggleType}\r\n        >\r\n          TYPES\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Vector, Shape } from \"./types\";\r\n\r\nexport function findPointInShapeIndex(target: Vector, shapes: Shape[]) {\r\n  for (let i = 0; i < shapes.length; i++) {\r\n    if (isPointInShape(target, shapes[i])) return i;\r\n  }\r\n  return -1;\r\n}\r\n\r\nexport function isPointInShape(p: Vector, s: Shape) {\r\n  let res = false;\r\n  const X = 0;\r\n  const Y = 1;\r\n  for (let i = 0; i < s.length; i++) {\r\n    // https://www.eecs.umich.edu/courses/eecs380/HANDOUTS/PROJ2/InsidePoly.html\r\n    const edge = [s[i], s[(i + 1) % s.length]];\r\n    if (\r\n      // is the point in the Y range of the edge?\r\n      ((edge[0][Y] <= p[Y] && edge[1][Y] >= p[Y]) ||\r\n        (edge[1][Y] <= p[Y] && edge[0][Y] >= p[Y])) && // is our point to the left the line that our edge sits on at Y = point[Y]?\r\n      p[X] <\r\n        ((edge[0][X] - edge[1][X]) * (p[Y] - edge[1][Y])) /\r\n          (edge[0][Y] - edge[1][Y]) +\r\n          edge[1][X]\r\n    ) {\r\n      res = !res;\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\nexport function distancePointToPoint(a: Vector, b: Vector) {\r\n  // Pitagora\r\n  return Math.hypot(a[0] - b[0], a[1] - b[1]);\r\n}\r\n\r\nexport function projectPointToSegment(\r\n  p: Vector,\r\n  l: [Vector, Vector]\r\n): Vector | null {\r\n  // WHY DO I ONLY THINK OF VECTORS IN MY FREE TIME AND NOT WHEN I'M ON THE CLOCK??????\r\n  const lineVec = vecSub(l[1], l[0]);\r\n  const lineLen = distancePointToPoint(l[0], l[1]);\r\n  const lineVecNormalized = vecScale(lineVec, 1 / lineLen);\r\n  const pointProjLen = dot(vecSub(p, l[0]), lineVecNormalized);\r\n  if (pointProjLen < 0 || pointProjLen > lineLen) return null; // proj outside the segment\r\n  const pointProj = vecSum(l[0], vecScale(lineVecNormalized, pointProjLen));\r\n  return pointProj;\r\n}\r\n\r\nexport function dot(vec1: Vector, vec2: Vector) {\r\n  return vec1[0] * vec2[0] + vec1[1] * vec2[1];\r\n}\r\n\r\nexport function vecSum(v1: Vector, v2: Vector): Vector {\r\n  return [v1[0] + v2[0], v1[1] + v2[1]];\r\n}\r\n\r\nexport function vecNegative(v: Vector): Vector {\r\n  return [-v[0], -v[1]];\r\n}\r\n\r\nexport function vecSub(v1: Vector, v2: Vector): Vector {\r\n  return vecSum(v1, vecNegative(v2));\r\n}\r\n\r\nexport function vecScale(v: Vector, n: number): Vector {\r\n  return [v[0] * n, v[1] * n];\r\n}\r\n\r\nexport function vecLen(v: Vector): number {\r\n  return distancePointToPoint([0, 0], v);\r\n}\r\n\r\nexport function vecFromCoordinateSystem(\r\n  v: Vector,\r\n  up: Vector,\r\n  right: Vector\r\n): Vector {\r\n  return vecSum(vecScale(right, v[0]), vecScale(up, v[1]));\r\n}\r\n\r\nexport function vecToCoordinateSystem(\r\n  v: Vector,\r\n  up: Vector,\r\n  right: Vector\r\n): Vector {\r\n  /* \r\n        x1 = rx * x + ux * y \r\n        y1 = ry * x + uy * y\r\n\r\n        x = (x1 - ux * y) / rx = (y1 - uy * y) / ry => \r\n        x1 * ry - ux * ry * y = y1 * rx - uy * rx * y =>\r\n        y = (x1 * ry - y1 * rx) / (ux * ry - uy * rx)\r\n     */\r\n  const y =\r\n    (v[0] * right[1] - v[1] * right[0]) / (up[0] * right[1] - up[1] * right[0]);\r\n  const x = (v[0] - up[0] * y) / right[0];\r\n  return [x, y];\r\n}\r\n\r\nexport function vecRotate(v: Vector, upRotated: Vector): Vector {\r\n  const up = vecScale(upRotated, 1 / vecLen(upRotated));\r\n  const right = [up[1], -up[0]] as Vector;\r\n  return vecFromCoordinateSystem(v, up, right);\r\n}\r\n\r\nexport function centroidOfShape(shape: Shape) {\r\n  const sum = shape.reduce((res, v) => vecSum(v, res));\r\n  return vecScale(sum, 1 / shape.length);\r\n}\r\n\r\nexport function dirShapeToShape(s1: Shape, s2: Shape) {\r\n  const center1 = centroidOfShape(s1);\r\n  const center2 = centroidOfShape(s2);\r\n  const lineC1toC2 = vecSub(center2, center1);\r\n  const distance = distancePointToPoint([0, 0], lineC1toC2);\r\n  return vecScale(lineC1toC2, 1 / distance);\r\n}\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./Canvas.scss\";\r\nimport {\r\n  Area,\r\n  Vector,\r\n  Shape,\r\n  Tool,\r\n  DirKeys,\r\n  Options,\r\n} from \"../utilities/types\";\r\nimport {\r\n  distancePointToPoint,\r\n  projectPointToSegment,\r\n  findPointInShapeIndex,\r\n  vecSum,\r\n  vecScale,\r\n  isPointInShape,\r\n  vecRotate,\r\n  vecSub,\r\n  centroidOfShape,\r\n  vecNegative,\r\n} from \"../utilities/shapes\";\r\nimport { order } from \"../utilities/data\";\r\n\r\nconst CANVAS_W = 1920;\r\nconst CANVAS_H = 1080;\r\nconst POINT_RADIUS = 5;\r\nconst SNAP_DISTANCE = 25;\r\n// const ARROW_SCALE = .1;\r\nconst ARROW_SIZE = 16;\r\nconst ID_SIZE = 48;\r\n\r\nconst alpha = 0.25;\r\n\r\nconst style1 = {\r\n  width: 2,\r\n  stroke: `rgb(255, 50, 50)`,\r\n  fill: `rgba(255, 50, 50, ${alpha})`,\r\n  arrow: `rgba(255, 50, 50, ${alpha * 2})`,\r\n  selected: {\r\n    width: 2,\r\n    stroke: `rgb(255, 200, 50)`,\r\n    fill: `rgba(255, 200, 50, ${alpha})`,\r\n    arrow: `rgba(255, 200, 50, ${alpha * 2})`,\r\n  },\r\n};\r\n\r\nconst style2 = {\r\n  width: 2,\r\n  stroke: `rgb(50, 50, 250)`,\r\n  fill: `rgba(50, 50, 250, ${alpha})`,\r\n  arrow: `rgba(50, 50, 250, ${alpha * 2})`,\r\n  selected: {\r\n    width: 2,\r\n    stroke: `rgb(50, 250, 250)`,\r\n    fill: `rgba(50, 250, 250, ${alpha})`,\r\n    arrow: `rgba(50, 250, 250, ${alpha * 2})`,\r\n  },\r\n};\r\n\r\nexport interface CanvasProps {\r\n  img: CanvasImageSource | null;\r\n  quads: Area[];\r\n  newQuad: (quad: Area) => void;\r\n  tool: Tool;\r\n  setSelected: (index: number) => void;\r\n  updateQuads: (arr: Area[]) => void;\r\n  deleteQuads: (arr: Area[]) => void;\r\n  slider?: number;\r\n  width?: number;\r\n  height?: number;\r\n  options?: Options;\r\n}\r\n\r\nexport default function Canvas({\r\n  img,\r\n  quads,\r\n  newQuad,\r\n  tool,\r\n  setSelected,\r\n  updateQuads,\r\n  deleteQuads,\r\n  slider,\r\n  width,\r\n  height,\r\n  options = { ids: true, arrows: true },\r\n}: CanvasProps) {\r\n  const [points, setPoints] = useState<Shape>([]);\r\n  const [dragging, setDragging] = useState<boolean>(false);\r\n  const [modifier, setModifier] = useState<boolean>(false);\r\n  const [oldMouse, setOldMouse] = useState<Vector | null>(null);\r\n  const [dragIndexes, setDragIndexes] = useState<number[] | null>(null);\r\n\r\n  const ref = useRef<HTMLCanvasElement>(null);\r\n  const [mouse, setMouse] = useState<{ x: number; y: number }>({ x: 0, y: 0 });\r\n\r\n  let canvasH = CANVAS_H;\r\n  let canvasW = CANVAS_W;\r\n\r\n  useEffect(() => {\r\n    const canvas = ref.current;\r\n    const context = canvas?.getContext(\"2d\");\r\n    if (!canvas || !context) {\r\n      return;\r\n    }\r\n\r\n    canvasH = canvas.height;\r\n    canvasW = canvas.width;\r\n\r\n    // Background\r\n    try {\r\n      if (!img) throw Error;\r\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n    } catch (e) {\r\n      context.fillStyle = \"#fff\";\r\n      context.fillRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n\r\n    // Finished Quads\r\n    for (const quad of quads) {\r\n      drawArea(context, quad);\r\n    }\r\n\r\n    if (mouse.x && mouse.y) {\r\n      // New Quad\r\n      if (points && tool === Tool.ADD) {\r\n        let close = false;\r\n        const pos = snapToShapes(\r\n          [mouse.x, mouse.y],\r\n          quads.map((a) => a.shape)\r\n        );\r\n        let path = [pos, ...points];\r\n        if (points.length === 3) {\r\n          close = true;\r\n        }\r\n        context.lineWidth = style1.width;\r\n        context.strokeStyle = style1.stroke;\r\n        context.fillStyle = style1.fill;\r\n        drawPath(context, path, true, close);\r\n      }\r\n    }\r\n  }, [img, quads, tool, mouse, modifier, points, slider, width, options]);\r\n\r\n  const snapToShapes = (pos: Vector, shapes: Shape[]) => {\r\n    if (modifier) return pos;\r\n\r\n    // give priority to points instead of edges\r\n    // find the closest point\r\n    shapes.push([\r\n      [0, 0],\r\n      [canvasW, 0],\r\n      [canvasW, canvasH],\r\n      [0, canvasH],\r\n    ]); // add boundaries\r\n    let [minDist, newPoint] = shapes.flat().reduce(\r\n      ([dist, point]: [number, Vector | null], p) => {\r\n        const d = distancePointToPoint(pos, p);\r\n        if (d < dist || dist === -1) return [d, p];\r\n        else return [dist, point];\r\n      },\r\n      [-1, null]\r\n    );\r\n\r\n    if (newPoint && minDist < SNAP_DISTANCE) {\r\n      pos = newPoint;\r\n    } else {\r\n      [minDist, newPoint] = shapes.reduce(\r\n        ([dist, point]: [number, Vector | null], s) => {\r\n          // find the closest point in the edges\r\n          let [d, p] = s.reduce(\r\n            ([dist, point]: [number, Vector | null], p1, i, s) => {\r\n              const p2 = s[(i + 1) % s.length];\r\n              let proj = projectPointToSegment(pos, [p1, p2]);\r\n              let d, p;\r\n              // if we found a projection it is the closest point\r\n              if (proj) {\r\n                d = distancePointToPoint(pos, proj);\r\n                p = proj;\r\n                // confront it with the previous results\r\n                if (d < dist || dist === -1) return [d, p];\r\n              }\r\n              return [dist, point];\r\n            },\r\n            [-1, null]\r\n          );\r\n\r\n          // confront it with the previous results\r\n          if ((p && d < dist) || dist === -1) return [d, p];\r\n          return [dist, point];\r\n        },\r\n        [-1, null]\r\n      );\r\n\r\n      if (newPoint && minDist < SNAP_DISTANCE) {\r\n        pos = newPoint;\r\n      }\r\n    }\r\n\r\n    return pos;\r\n  };\r\n\r\n  const addPoint = () => {\r\n    if (!mouse.x || !mouse.y) {\r\n      return;\r\n    }\r\n\r\n    let pos: Vector = [mouse.x, mouse.y];\r\n\r\n    pos = snapToShapes(\r\n      pos,\r\n      quads.map((a) => a.shape)\r\n    );\r\n\r\n    const updatedShape = [pos, ...points];\r\n\r\n    if (updatedShape.length === 4) {\r\n      const newArea = new Area(order(updatedShape));\r\n      newArea.isSelected = true;\r\n      setSelected(-1);\r\n      newQuad(newArea);\r\n      setPoints([]);\r\n    } else {\r\n      setPoints(updatedShape);\r\n    }\r\n  };\r\n\r\n  const drawPath = (\r\n    canvasCtx: CanvasRenderingContext2D,\r\n    points: [number, number][],\r\n    f_drawPoints = false,\r\n    close = true\r\n  ) => {\r\n    if (points[0]) canvasCtx.moveTo(points[0][0], points[0][1]);\r\n    canvasCtx.beginPath();\r\n    for (const p of points) {\r\n      canvasCtx.lineTo(p[0], p[1]);\r\n    }\r\n\r\n    if (close) {\r\n      canvasCtx.closePath();\r\n      canvasCtx.fill();\r\n    }\r\n    canvasCtx.stroke();\r\n\r\n    if (f_drawPoints) {\r\n      for (const p of points) drawPoint(canvasCtx, p);\r\n    }\r\n  };\r\n\r\n  const drawPoint = (canvasCtx: CanvasRenderingContext2D, point: Vector) => {\r\n    const tmpFill = canvasCtx.fillStyle;\r\n    const tmpStroke = canvasCtx.strokeStyle;\r\n    canvasCtx.fillStyle = \"#5f5\";\r\n    canvasCtx.strokeStyle = \"#000\";\r\n    canvasCtx.beginPath();\r\n    canvasCtx.arc(point[0], point[1], POINT_RADIUS, 0, 2 * 3.15);\r\n    canvasCtx.closePath();\r\n    canvasCtx.fill();\r\n    canvasCtx.stroke();\r\n    canvasCtx.fillStyle = tmpFill;\r\n    canvasCtx.strokeStyle = tmpStroke;\r\n  };\r\n\r\n  const drawParking = (\r\n    canvasCtx: CanvasRenderingContext2D,\r\n    quad: Vector[],\r\n    color = \"#000\"\r\n  ) => {\r\n    if (quad.length !== 4) return;\r\n\r\n    const tmpStroke = canvasCtx.strokeStyle;\r\n    const tmpWidth = canvasCtx.lineWidth;\r\n    canvasCtx.strokeStyle = color;\r\n    canvasCtx.lineWidth = 3;\r\n\r\n    drawPath(canvasCtx, [quad[0], quad[2]], false, false);\r\n    drawPath(canvasCtx, [quad[1], quad[3]], false, false);\r\n\r\n    canvasCtx.strokeStyle = tmpStroke;\r\n    canvasCtx.lineWidth = tmpWidth;\r\n  };\r\n\r\n  const drawArrows = (\r\n    canvasCtx: CanvasRenderingContext2D,\r\n    quad: Vector[],\r\n    directions: { left: boolean; up: boolean; right: boolean; down: boolean },\r\n    color = \"#000\",\r\n    f_close = false\r\n  ) => {\r\n    let arrow: Shape = [\r\n      [-0.7, -1],\r\n      [0, 1],\r\n      [0.7, -1],\r\n    ];\r\n    arrow = arrow.map((vec) => vecScale(vec, ARROW_SIZE));\r\n\r\n    const topMid = centroidOfShape([quad[0], quad[1]]);\r\n    const botMid = centroidOfShape([quad[2], quad[3]]);\r\n    const rightMid = centroidOfShape([quad[1], quad[2]]);\r\n    const leftMid = centroidOfShape([quad[3], quad[0]]);\r\n\r\n    const up = vecSub(topMid, botMid);\r\n    const right = vecSub(rightMid, leftMid);\r\n\r\n    const arrows = Object.entries(directions).map(([k, v]) => {\r\n      if (!v) return null;\r\n      let dir: Vector, anchor: Vector;\r\n      switch (k) {\r\n        case \"up\":\r\n          dir = up;\r\n          anchor = topMid;\r\n          break;\r\n        case \"down\":\r\n          dir = vecNegative(up);\r\n          anchor = botMid;\r\n          break;\r\n        case \"right\":\r\n          dir = right;\r\n          anchor = rightMid;\r\n          break;\r\n        case \"left\":\r\n          dir = vecNegative(right);\r\n          anchor = leftMid;\r\n          break;\r\n        default:\r\n          return null;\r\n      }\r\n\r\n      const rotated = arrow.map((vec) => vecRotate(vec, dir));\r\n      const translation = vecSub(anchor, rotated[1]);\r\n      return rotated.map((vec) => vecSum(vec, translation));\r\n    });\r\n\r\n    const tmpStroke = canvasCtx.strokeStyle;\r\n    const tmpFill = canvasCtx.fillStyle;\r\n    const tmpWidth = canvasCtx.lineWidth;\r\n\r\n    if (f_close) canvasCtx.strokeStyle = \"#000\";\r\n    else canvasCtx.strokeStyle = color;\r\n\r\n    canvasCtx.fillStyle = color;\r\n    canvasCtx.lineWidth = 2;\r\n\r\n    for (const arrow of arrows) {\r\n      if (!arrow) continue;\r\n      drawPath(canvasCtx, arrow, false, f_close);\r\n    }\r\n\r\n    canvasCtx.strokeStyle = tmpStroke;\r\n    canvasCtx.fillStyle = tmpFill;\r\n    canvasCtx.lineWidth = tmpWidth;\r\n  };\r\n\r\n  const drawArea = (canvasCtx: CanvasRenderingContext2D, area: Area) => {\r\n    let movement: Vector = [0, 0];\r\n    // Drag\r\n    if (dragging && oldMouse) {\r\n      movement = [mouse.x! - oldMouse[0], mouse.y! - oldMouse[1]] as Vector;\r\n    }\r\n\r\n    const shape = area.isSelected\r\n      ? area.shape.map((p, i) => {\r\n        if (dragIndexes && dragIndexes.some((n) => n === i))\r\n          return snapToShapes(\r\n            vecSum(p, movement),\r\n            quads.filter((a) => a.id !== area.id).map((a) => a.shape)\r\n          );\r\n        else return p;\r\n      })\r\n      : area.shape;\r\n\r\n    const center = centroidOfShape(shape);\r\n\r\n    let style;\r\n    if (area.isCarWalkable) {\r\n      style = style1;\r\n    } else {\r\n      style = style2;\r\n    }\r\n    if (area.isSelected) style = style.selected;\r\n\r\n    const tmp = {\r\n      lw: canvasCtx.lineWidth,\r\n      ss: canvasCtx.strokeStyle,\r\n      fs: canvasCtx.fillStyle,\r\n    };\r\n    canvasCtx.lineWidth = style.width;\r\n    canvasCtx.strokeStyle = style.stroke;\r\n    canvasCtx.fillStyle = style.fill;\r\n\r\n    drawPath(canvasCtx, shape, area.isSelected, true);\r\n    if (options.ids)\r\n      drawText(canvasCtx, area.id.toString(), center, ID_SIZE, style.stroke);\r\n\r\n    if (tool === Tool.SET_DIRECTIONS)\r\n      drawArrows(canvasCtx, shape, area.direction, \"#3e3\", true);\r\n    else if (options.arrows)\r\n      drawArrows(canvasCtx, shape, area.direction, style.stroke);\r\n\r\n    if (area.isParking) drawParking(canvasCtx, shape, style.stroke);\r\n\r\n    canvasCtx.lineWidth = tmp.lw;\r\n    canvasCtx.strokeStyle = tmp.ss;\r\n    canvasCtx.fillStyle = tmp.fs;\r\n  };\r\n\r\n  const drawText = (\r\n    canvasCtx: CanvasRenderingContext2D,\r\n    text: string,\r\n    center: Vector,\r\n    size = 12,\r\n    color = \"#000\"\r\n  ) => {\r\n    const tmp = {\r\n      font: canvasCtx.font,\r\n      ta: canvasCtx.textAlign,\r\n      tb: canvasCtx.textBaseline,\r\n      fs: canvasCtx.fillStyle,\r\n      ss: canvasCtx.strokeStyle,\r\n    };\r\n\r\n    canvasCtx.font = `${size}px sans-serif`;\r\n    canvasCtx.textAlign = \"center\";\r\n    canvasCtx.textBaseline = \"middle\";\r\n    canvasCtx.fillStyle = color;\r\n    canvasCtx.strokeStyle = \"#000\";\r\n\r\n    canvasCtx.fillText(text, center[0], center[1]);\r\n    canvasCtx.strokeText(text, center[0], center[1]);\r\n\r\n    canvasCtx.font = tmp.font;\r\n    canvasCtx.textAlign = tmp.ta;\r\n    canvasCtx.textBaseline = tmp.tb;\r\n    canvasCtx.fillStyle = tmp.fs;\r\n  };\r\n\r\n  const handleSelect = () => {\r\n    // check if we have a selected area\r\n    const selected = quads.find((a) => a.isSelected);\r\n    let indexes: number[] | null = null;\r\n    if (selected) {\r\n      // check its closest points and edges to drag them\r\n      const points = selected.shape;\r\n      let distance: number;\r\n      indexes = [-1];\r\n      // find the closest point to the mouse pointer\r\n      [distance, indexes[0]] = points.reduce(\r\n        ([res_d, res_i], p, i) => {\r\n          const d = distancePointToPoint([mouse.x!, mouse.y!], p);\r\n          return d < res_d ? [d, i] : [res_d, res_i];\r\n        },\r\n        [999, -1]\r\n      );\r\n      // if it's too far check if one of the edges is close enough\r\n      if (distance > SNAP_DISTANCE) {\r\n        [distance, indexes] = points.reduce(\r\n          ([res_d, res_is], p, i, points) => {\r\n            const j = (i + 1) % points.length;\r\n            const p1 = points[j];\r\n            const proj = projectPointToSegment([mouse.x!, mouse.y!], [p, p1]);\r\n            if (!proj) return [res_d, res_is];\r\n            const dist = distancePointToPoint([mouse.x!, mouse.y!], proj);\r\n            return dist < res_d ? [dist, [i, j]] : [res_d, res_is];\r\n          },\r\n          [999, [-1]]\r\n        );\r\n      }\r\n      // if it's not check if we clicked it and drag the entire shape\r\n      if (distance > SNAP_DISTANCE) {\r\n        if (isPointInShape([mouse.x, mouse.y], selected.shape)) {\r\n          indexes = [0, 1, 2, 3];\r\n        } else {\r\n          indexes = null;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (indexes) {\r\n      // update the state\r\n      setDragIndexes(indexes);\r\n      setDragging(true);\r\n      setOldMouse([mouse.x!, mouse.y!]);\r\n    } else {\r\n      // check if we clicked an area and select it\r\n      const target = findPointInShapeIndex(\r\n        [mouse.x, mouse.y],\r\n        quads.map((a) => a.shape)\r\n      );\r\n      setSelected(target);\r\n    }\r\n  };\r\n\r\n  const handleSetDirections = () => {\r\n    const pos = [mouse.x, mouse.y] as Vector;\r\n    const targetArea = quads.find((q) => isPointInShape(pos, q.shape));\r\n    if (!targetArea) return;\r\n\r\n    const shape = targetArea.shape;\r\n    const center = centroidOfShape(shape);\r\n    const sectors = {\r\n      up: [shape[0], shape[1], center] as Shape,\r\n      down: [shape[2], shape[3], center] as Shape,\r\n      right: [shape[1], shape[2], center] as Shape,\r\n      left: [shape[3], shape[0], center] as Shape,\r\n    };\r\n\r\n    const selectedDir: DirKeys | null = (() => {\r\n      for (const [k, v] of Object.entries(sectors)) {\r\n        if (isPointInShape(pos, v)) return k as DirKeys;\r\n      }\r\n      return null;\r\n    })();\r\n\r\n    if (!selectedDir) return;\r\n\r\n    targetArea.direction[selectedDir] = !targetArea.direction[selectedDir];\r\n\r\n    updateQuads([targetArea]);\r\n  };\r\n\r\n  const handleToggleType = () => {\r\n    const pos = [mouse.x, mouse.y] as Vector;\r\n    const targetArea = quads.find((q) => isPointInShape(pos, q.shape));\r\n    if (!targetArea) return;\r\n\r\n    if (targetArea.isCarWalkable) {\r\n      targetArea.isCarWalkable = false;\r\n      targetArea.direction = {\r\n        up: false,\r\n        right: false,\r\n        left: false,\r\n        down: false,\r\n      };\r\n    } else {\r\n      targetArea.isCarWalkable = true;\r\n      targetArea.direction = { up: true, right: true, left: true, down: true };\r\n    }\r\n\r\n    updateQuads([targetArea]);\r\n  };\r\n\r\n  const onMouseDown = () => {\r\n    switch (tool) {\r\n      case Tool.ADD:\r\n        addPoint();\r\n        break;\r\n      case Tool.SELECT:\r\n        handleSelect();\r\n        break;\r\n      case Tool.SET_DIRECTIONS:\r\n        handleSetDirections();\r\n        break;\r\n      case Tool.TOGGLE_TYPE:\r\n        handleToggleType();\r\n        break;\r\n      default:\r\n        throw Error(\"Tool not implemented\");\r\n    }\r\n  };\r\n\r\n  const stopDragging = () => {\r\n    if (dragging && oldMouse) {\r\n      const selectedAreas = quads.filter((a) => a.isSelected);\r\n      const movement: Vector = [mouse.x! - oldMouse[0], mouse.y! - oldMouse[1]];\r\n      const updated = selectedAreas.map((a) => {\r\n        a.shape = a.shape.map((p, i) => {\r\n          if (dragIndexes && dragIndexes.some((n) => n === i))\r\n            return snapToShapes(\r\n              vecSum(p, movement),\r\n              quads.filter((b) => b.id !== a.id).map((b) => b.shape)\r\n            );\r\n          else return p;\r\n        });\r\n        return a;\r\n      });\r\n      updateQuads(updated);\r\n      setDragging(false);\r\n      setDragIndexes(null);\r\n      setOldMouse(null);\r\n    }\r\n  };\r\n\r\n  const onMouseUp = () => {\r\n    stopDragging();\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    if (dragging && dragIndexes?.length === 4) {\r\n      setDragging(false);\r\n      setDragIndexes(null);\r\n      setOldMouse(null);\r\n      deleteQuads(quads.filter((q) => q.isSelected));\r\n    } else {\r\n      stopDragging();\r\n    }\r\n  };\r\n  const onMouseMove = (e: React.MouseEvent) => {\r\n    const canvas = ref.current;\r\n    if (canvas) {\r\n      const ratio = canvas.clientWidth / canvas.width;\r\n      const topLeft = [canvas.offsetLeft, canvas.offsetTop];\r\n      setMouse({\r\n        x: (e.pageX - topLeft[0]) / ratio,\r\n        y: (e.pageY - topLeft[1]) / ratio,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Canvas\">\r\n      <canvas\r\n        ref={ref}\r\n        onMouseDown={onMouseDown}\r\n        onMouseUp={onMouseUp}\r\n        onMouseLeave={onMouseLeave}\r\n        onMouseMove={(e) => onMouseMove(e)}\r\n        width={width ?? CANVAS_W}\r\n        height={height ?? CANVAS_H}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Control\") setModifier(true);\r\n        }}\r\n        onKeyUp={(e) => {\r\n          if (e.key === \"Control\") setModifier(false);\r\n        }}\r\n        tabIndex={0}\r\n        onMouseEnter={() => ref.current?.focus()}\r\n        onBlur={() => setPoints([])}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { Check, Clear, Delete } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Area, AreaDictionary, IIndexable, Vector } from \"../utilities/types\";\r\n\r\nimport \"./Inspector.scss\";\r\n\r\ntype InspectorProps = {\r\n  target: Area[];\r\n  update: (updated: Area[]) => void;\r\n  selectById: (id: number) => void;\r\n  deleteById: (id: number) => void;\r\n};\r\n\r\nexport default function Inspector({\r\n  target,\r\n  update,\r\n  selectById,\r\n  deleteById,\r\n}: InspectorProps) {\r\n  const [inspected, setInspected] = useState<AreaDictionary[]>();\r\n  const updateInspected = (updated: AreaDictionary, changed = true) => {\r\n    updated.changed = changed;\r\n    if (!inspected) return;\r\n    const unchanged = inspected?.filter((a) => a.id !== updated.id);\r\n    setInspected(\r\n      [updated, ...unchanged].sort((a, b) => (a.id < b.id ? -1 : 1))\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selected = target;\r\n\r\n    let list = selected.map((a) => a.toAreaDictionary());\r\n\r\n    const pending = inspected?.filter((t) => t.changed);\r\n    list = list.map((a) => {\r\n      const t = pending?.find((t) => t.id === a.id);\r\n      return t ? t : a;\r\n    });\r\n\r\n    list = list.sort((a, b) => (a.id < b.id ? -1 : 1));\r\n\r\n    setInspected(list);\r\n  }, [target]);\r\n\r\n  function renderAD(a: AreaDictionary) {\r\n    const renderPoint = (p: Vector, key: string, ref: AreaDictionary) => {\r\n      return p.map((val, i) => {\r\n        return (\r\n          <td key={`${key}${i}`}>\r\n            <input\r\n              type=\"number\"\r\n              value={Math.round(val)}\r\n              onChange={(e) => {\r\n                (ref.points as IIndexable)[key][i] = +e.target.value;\r\n                updateInspected(ref);\r\n              }}\r\n            />\r\n          </td>\r\n        );\r\n      });\r\n    };\r\n\r\n    const renderedPoints = Object.entries(a.points).flatMap(([k, v]) =>\r\n      renderPoint(v, k, a)\r\n    );\r\n\r\n    const renderedDirection = Object.entries(a.dir).map(([k, v]) => {\r\n      return (\r\n        <td key={k}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={v}\r\n            onChange={() => {\r\n              (a.dir as IIndexable)[k] = !(a.dir as IIndexable)[k];\r\n              updateInspected(a);\r\n            }}\r\n          />\r\n        </td>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <tr\r\n        key={a.id}\r\n        onClick={() => selectById(a.id)}\r\n        className={a.ref?.isSelected ? \"selected\" : \"\"}\r\n      >\r\n        <td key=\"delete\" className=\"delete\">\r\n          <button\r\n            className=\"btn contained secondary\"\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              deleteById(a.id);\r\n            }}\r\n          >\r\n            <Delete />\r\n          </button>\r\n        </td>\r\n        <td key=\"id\">\r\n          <div className=\"id\"> {a.id} </div>\r\n        </td>\r\n        {renderedPoints}\r\n        <td key=\"iscarwalkable\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={a.carWalk}\r\n            onChange={() => {\r\n              a.carWalk = !a.carWalk;\r\n              updateInspected(a);\r\n            }}\r\n          />\r\n        </td>\r\n        {renderedDirection}\r\n        <td key=\"isparking\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={a.parking}\r\n            onChange={() => {\r\n              a.parking = !a.parking;\r\n              updateInspected(a);\r\n            }}\r\n          />\r\n        </td>\r\n        <td key=\"isstop\">\r\n          <input\r\n            type=\"text\"\r\n            value={a.stop ?? \"None\"}\r\n            onChange={(e) => {\r\n              a.stop = e.target.value;\r\n              updateInspected(a);\r\n            }}\r\n          />\r\n        </td>\r\n        <td className={!a.changed ? \"hide\" : \"space\"} />\r\n        <td key=\"update\" className={!a.changed ? \"hide\" : \"\"}>\r\n          <button\r\n            className=\"btn contained primary\"\r\n            onClick={() => {\r\n              updateInspected(a, false);\r\n              update([\r\n                target.find((t) => t.id === a.id)!.fromAreaDictionary(a),\r\n              ]);\r\n            }}\r\n          >\r\n            <Check />\r\n          </button>\r\n        </td>\r\n        <td key=\"discard\" className={!a.changed ? \"hide\" : \"\"}>\r\n          <button\r\n            className={`btn contained secondary ${!a.changed ? \"hide\" : \"\"}`}\r\n            onClick={() => {\r\n              a = target.find((t) => t.id === a.id)!.toAreaDictionary();\r\n              updateInspected(a, false);\r\n            }}\r\n          >\r\n            <Clear />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"Inspector\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th />\r\n            <th>ID </th>\r\n            <th>luX </th>\r\n            <th>luY </th>\r\n            <th>ruX </th>\r\n            <th>ruY </th>\r\n            <th>rbX </th>\r\n            <th>rbY </th>\r\n            <th>lbX </th>\r\n            <th>lbY </th>\r\n            <th>CarWalk </th>\r\n            <th>Left </th>\r\n            <th>Up </th>\r\n            <th>Right </th>\r\n            <th>Down </th>\r\n            <th>Parking </th>\r\n            <th>Stop </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{inspected?.map((a) => renderAD(a))}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { Area, AreaDictionary, Vector } from \"../utilities/types\";\r\n\r\nimport \"./IOManager.css\";\r\n\r\nconst fields = [\r\n  \"luX\",\r\n  \"luY\",\r\n  \"ruX\",\r\n  \"ruY\",\r\n  \"rbX\",\r\n  \"rbY\",\r\n  \"lbX\",\r\n  \"lbY\",\r\n  \"CarWalk\",\r\n  \"Left\",\r\n  \"Up\",\r\n  \"Right\",\r\n  \"Down\",\r\n  \"Parking\",\r\n  \"Stop\",\r\n];\r\n\r\ntype IOMangerProps = {\r\n  target: Area[];\r\n  source?: string;\r\n  load: (arr: Area[]) => void;\r\n};\r\n\r\nexport function IOManager({ target, source, load }: IOMangerProps) {\r\n  const dlRef = useRef<HTMLAnchorElement>(null);\r\n  const loadRef = useRef<HTMLInputElement>(null);\r\n\r\n  const filename = source ? source.replace(\".mp4\", \"_areas.csv\") : \"areas.csv\";\r\n\r\n  const download = () => {\r\n    const outStr = formatData(target);\r\n    const blob = new Blob([outStr], { type: \"text/csv;charset=utf-8;\" });\r\n    const dlUrl = URL.createObjectURL(blob);\r\n    dlRef.current?.setAttribute(\"href\", dlUrl);\r\n    dlRef.current?.click();\r\n    URL.revokeObjectURL(dlUrl);\r\n  };\r\n\r\n  const formatData = (target: Area[]) => {\r\n    const formatted = target.map(formatArea);\r\n    return [fields.join(\",\")].concat(formatted).join(\"\\n\");\r\n  };\r\n\r\n  const formatArea = (area: Area) => {\r\n    const ad = area.toAreaDictionary();\r\n\r\n    const points = [ad.points.lu, ad.points.ru, ad.points.rb, ad.points.lb]\r\n      .map((p) => p.join(\",\"))\r\n      .join(\",\");\r\n    const carWalk = ad.carWalk ? 1 : 0;\r\n    const parking = ad.parking ? 1 : 0;\r\n    const stop = ad.stop;\r\n    const direction = [ad.dir.left, ad.dir.up, ad.dir.right, ad.dir.down]\r\n      .map((f) => (f ? 1 : 0))\r\n      .join(\",\");\r\n\r\n    return [points, carWalk, direction, parking, stop].join(\",\");\r\n  };\r\n\r\n  const loader = async (f: File | null) => {\r\n    if (!f) {\r\n      console.error(\"Unable to load file!\");\r\n      return;\r\n    }\r\n    const csv = await f.text();\r\n    const rows = csv.split(\"\\n\").filter((s) => s !== \"\");\r\n    const strings = rows.slice(1).map((r) => r.split(\",\"));\r\n    const dictionaries = strings.map((r) => {\r\n      let ad: any = { points: {}, dir: {} };\r\n      const vals: number[] = r.map((v) => +v);\r\n      ad.points.lu = vals.slice(0, 2) as Vector;\r\n      ad.points.ru = vals.slice(2, 4) as Vector;\r\n      ad.points.rb = vals.slice(4, 6) as Vector;\r\n      ad.points.lb = vals.slice(6, 8) as Vector;\r\n      ad.carWalk = vals[8] > 0;\r\n      ad.dir.left = vals[9] > 0;\r\n      ad.dir.up = vals[10] > 0;\r\n      ad.dir.right = vals[11] > 0;\r\n      ad.dir.down = vals[12] > 0;\r\n      ad.parking = vals[13] > 0;\r\n      ad.stop = r[14];\r\n      return ad as AreaDictionary;\r\n    });\r\n    const newAreas = dictionaries.map((ad) =>\r\n      new Area().fromAreaDictionary(ad)\r\n    );\r\n    load(newAreas);\r\n  };\r\n\r\n  return (\r\n    <div className=\"IOManager\">\r\n      <button\r\n        className=\"btn contained primary\"\r\n        onClick={() => loadRef.current?.click()}\r\n      >\r\n        Load CSV\r\n      </button>\r\n      <input\r\n        hidden\r\n        type=\"file\"\r\n        ref={loadRef}\r\n        accept=\".csv\"\r\n        onChange={() => loader(loadRef.current?.files?.item(0) ?? null)}\r\n      />\r\n\r\n      <button className=\"btn contained primary\" onClick={download}>\r\n        Download\r\n      </button>\r\n      <a ref={dlRef} href=\".\" download={filename} hidden>\r\n        hidden download link\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Options } from \"../utilities/types\";\r\nimport \"./OptionSelector.scss\";\r\nimport { ArrowUpward } from \"@material-ui/icons\";\r\n\r\ntype OptionSelectorProps = {\r\n  options: Options;\r\n  updateOptions: (o: Options) => void;\r\n};\r\n\r\nexport default function OptionSelector({\r\n  options,\r\n  updateOptions,\r\n}: OptionSelectorProps) {\r\n  return (\r\n    <div className=\"OptionSelector\">\r\n      <button\r\n        className={`btn ${options.ids ? \"contained\" : \"outlined\"}`}\r\n        onClick={() => updateOptions({ ...options, ids: !options.ids })}\r\n      >\r\n        IDs\r\n      </button>\r\n\r\n      <button\r\n        className={`btn ${options.arrows ? \"contained\" : \"outlined\"}`}\r\n        onClick={() => updateOptions({ ...options, arrows: !options.arrows })}\r\n      >\r\n        <ArrowUpward />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport './App.scss';\r\nimport Video from './components/Video';\r\nimport FilePicker from './components/FilePicker';\r\nimport { Area, Tool, Options } from './utilities/types';\r\nimport ToolSelector from './components/ToolSelector';\r\nimport Canvas from './components/Canvas';\r\nimport Inspector from './components/Inspector';\r\nimport { IOManager } from './components/IOManager';\r\nimport OptionSelector from './components/OptionSelector';\r\n\r\n\r\nexport default function App() {\r\n\r\n    const [file, setFile] = useState<File | null>(null);\r\n    const [videoSrc, setVideoSrc] = useState<string>(\"\");\r\n    const [video, setVideo] = useState<HTMLVideoElement | null>(null);\r\n    const [slider, setSlider] = useState<number | undefined>();\r\n    const [quadList, setQuadList] = useState<Area[]>([]);\r\n    const [tool, setTool] = useState<Tool>(Tool.ADD);\r\n    const [options, setOptions] = useState<Options>({ ids: true, arrows: false, });\r\n\r\n    useEffect(() => {\r\n        if (file) {\r\n            const source = URL.createObjectURL(file);\r\n            setVideoSrc(source);\r\n        }\r\n    }, [file]);\r\n\r\n    const deleteQuads = (quads: Area[]) => {\r\n        const filteredList = quadList.filter(a => quads.every(b => b.id !== a.id));\r\n        setQuadList(filteredList);\r\n    };\r\n\r\n    const setSelected = (index: number) => {\r\n        quadList.map(a => a.isSelected = false);\r\n        if (index >= 0 && index < quadList.length) {\r\n            quadList[index].isSelected = true;\r\n        }\r\n        setQuadList([...quadList]);\r\n    };\r\n\r\n    const setSelectedById = (id: number) => {\r\n        setSelected(quadList.findIndex(a => a.id === id));\r\n    };\r\n\r\n    const updateQuads = (quads: Area[]) => {\r\n        const notUpdated = quadList.filter(a => quads.every(b => b.id !== a.id));\r\n        setQuadList([...quads, ...notUpdated]);\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div>\r\n                <div className=\"BlockButtons\">\r\n                    <OptionSelector\r\n                        options={options}\r\n                        updateOptions={setOptions}\r\n                    />\r\n                </div>\r\n                <div className=\"BlockCanvas\">\r\n                    <Canvas\r\n                        img={video}\r\n                        quads={quadList}\r\n                        newQuad={(quad: Area) => setQuadList([quad, ...quadList])}\r\n                        tool={tool}\r\n                        setSelected={setSelected}\r\n                        updateQuads={updateQuads}\r\n                        deleteQuads={deleteQuads}\r\n                        slider={slider}\r\n                        width={video?.videoWidth || undefined}\r\n                        height={video?.videoHeight || undefined}\r\n                        options={options}\r\n                    />\r\n                    <Video\r\n                        source={videoSrc}\r\n                        setVideo={v => { setVideo(v); setQuadList([]); }}\r\n                        setSlider={setSlider}\r\n                        value={slider ?? 0}\r\n                    />\r\n                </div>\r\n                <div className=\"BlockButtons\">\r\n                    <ToolSelector\r\n                        value={tool}\r\n                        onAdd={() => { setTool(Tool.ADD); setSelected(-1); }}\r\n                        onSelect={() => { setTool(Tool.SELECT); setSelected(-1); }}\r\n                        onSetDirections={() => { setTool(Tool.SET_DIRECTIONS); setSelected(-1); }}\r\n                        onToggleType={() => { setTool(Tool.TOGGLE_TYPE); setSelected(-1); }}\r\n                    />\r\n                    <FilePicker setFile={setFile} accept_types=\"video/*\" />\r\n                    <IOManager\r\n                        target={quadList}\r\n                        source={file?.name}\r\n                        load={arr => setQuadList(arr)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <Inspector\r\n                    target={quadList}\r\n                    update={updateQuads}\r\n                    selectById={setSelectedById}\r\n                    deleteById={(id) => deleteQuads(quadList.filter(q => q.id === id))}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { blue, red } from '@material-ui/core/colors';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: blue[400],\r\n    },\r\n    secondary: {\r\n      main: red[400],\r\n    },\r\n  },\r\n  typography: {\r\n    button: {\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiButton: {\r\n      outlined: {\r\n        border: \"2px solid !important\",\r\n      }\r\n    }\r\n  }\r\n\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}