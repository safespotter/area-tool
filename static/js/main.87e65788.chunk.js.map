{"version":3,"sources":["components/Video.tsx","components/FilePicker.tsx","utilities/shapes.ts","utilities/area.ts","utilities/types.ts","utilities/data.ts","components/ToolSelector.tsx","components/Canvas.tsx","components/Inspector.tsx","components/IOManager.tsx","components/OptionSelector.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Video","source","setVideo","setSlider","videoRef","value","useRef","useEffect","current","src","loader","setTimeout","duration","setVideoPos","percentage","currentTime","className","type","min","max","onChange","ev","target","ref","hidden","FilePicker","setFile","accept_types","onClick","click","accept","_","files","item","isPointInShape","p","s","res","i","length","edge","distancePointToPoint","a","b","Math","hypot","projectPointToSegment","l","lineVec","vecSub","lineLen","lineVecNormalized","vecScale","pointProjLen","dot","vecSum","vec1","vec2","v1","v2","vecNegative","v","n","vecRotate","upRotated","up","vecLen","right","vecFromCoordinateSystem","centroidOfShape","shape","reduce","Tool","Area","quad","id","isCarWalkable","direction","left","down","isParking","stop","isSelected","this","newId","firstP","rightP","leftP","opposite","rightDir","tmp","order","points","lu","map","x","round","ru","rb","lb","carWalk","dir","parking","ad","Object","values","counter","ToolSelector","onSelect","onAdd","onSetDirections","onToggleType","ADD","SELECT","SET_DIRECTIONS","TOGGLE_TYPE","alpha","styleRoad","width","stroke","fill","arrow","selected","styleSidewalk","styleParking","styleSidewalkParking","styleZebra","Canvas","img","quads","newQuad","tool","setSelected","updateQuads","deleteQuads","slider","height","options","ids","arrows","useState","setPoints","dragging","setDragging","modifier","setModifier","oldMouse","setOldMouse","dragIndexes","setDragIndexes","y","mouse","setMouse","canvas","context","getContext","Error","drawImage","e","fillStyle","fillRect","drawArea","close","path","snapToShapes","lineWidth","strokeStyle","drawPath","pos","shapes","push","flat","dist","point","d","minDist","newPoint","p1","p2","proj","canvasCtx","f_drawPoints","moveTo","beginPath","lineTo","closePath","forEach","drawPoint","index","tmpFill","tmpStroke","fillStyles","arc","drawArrows","directions","color","f_highlight","vec","topMid","botMid","rightMid","leftMid","entries","anchor","k","rotated","translation","tmpWidth","area","movement","style","some","filter","center","lw","ss","fs","drawText","toString","text","size","font","ta","textAlign","tb","textBaseline","fillText","strokeText","handleSelect","find","indexes","distance","res_d","res_i","res_is","j","findPointInShapeIndex","handleSetDirections","all","targetArea","q","newState","every","keys","key","sectors","selectedDir","handleToggleType","version","stopDragging","selectedAreas","updated","onMouseDown","button","updatedShape","newArea","addPoint","onMouseUp","onMouseLeave","onMouseMove","ratio","clientWidth","topLeft","offsetLeft","offsetTop","pageX","pageY","onContextMenu","preventDefault","onKeyDown","onKeyUp","tabIndex","onMouseEnter","focus","onBlur","Inspector","update","selectById","deleteById","inspected","setInspected","updateInspected","changed","unchanged","sort","renderAD","renderedPoints","flatMap","val","renderedDirection","checked","stopPropagation","Delete","t","fromAreaDictionary","Check","toAreaDictionary","Clear","list","pending","fields","IOManager","load","dlRef","loadRef","filename","replace","formatData","formatted","formatArea","join","concat","f","console","error","csv","rows","split","strings","slice","r","dictionaries","vals","newAreas","outStr","blob","Blob","dlUrl","URL","createObjectURL","setAttribute","revokeObjectURL","href","download","OptionSelector","updateOptions","ArrowUpward","App","file","videoSrc","setVideoSrc","video","quadList","setQuadList","setTool","setOptions","filteredList","notUpdated","videoWidth","undefined","videoHeight","name","arr","findIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","main","blue","secondary","red","typography","fontWeight","overrides","MuiButton","outlined","border","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.87e65788.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nimport \"./Video.css\";\n\ntype VideoProps = {\n  source: string;\n  setVideo: (video: HTMLVideoElement) => void;\n  setSlider: (value: number | undefined) => void;\n  value: number;\n};\n\nexport default function Video({\n  source,\n  setVideo,\n  setSlider,\n  value,\n}: VideoProps) {\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    if (videoRef.current && source) {\n      videoRef.current.src = source;\n      setVideo(videoRef.current);\n\n      const loader = () => {\n        setTimeout(() => {\n          if (videoRef.current?.duration) {\n            setVideoPos(1);\n          } else loader();\n        }, 10);\n      };\n\n      loader();\n    }\n  }, [source]);\n\n  const setVideoPos = (percentage: number) => {\n    if (!videoRef.current || !source || !percentage) {\n      return;\n    }\n    // force range 0 - 100\n    const value = percentage < 1 ? 1 : percentage > 100 ? 100 : percentage;\n    videoRef.current.currentTime = (value / 100) * videoRef.current.duration;\n    setSlider(value);\n  };\n\n  return (\n    <div className=\"VideoCanvas\">\n      <input\n        className=\"slider\"\n        type=\"range\"\n        min=\"1\"\n        max=\"100\"\n        onChange={(ev) => {\n          setVideoPos(+ev.target.value);\n        }}\n      />\n      <video ref={videoRef} hidden />\n    </div>\n  );\n}\n","import React, { useRef } from \"react\";\n\nimport \"./FilePicker.css\";\n\ntype FilePickerProps = {\n  setFile: (f: File | null) => void;\n  accept_types?: string;\n};\n\nfunction FilePicker({ setFile, accept_types = \"\" }: FilePickerProps) {\n  const ref = useRef<HTMLInputElement>(null);\n\n  return (\n    <div className=\"FilePicker\">\n      <button\n        className=\"btn contained primary\"\n        onClick={() => ref.current?.click()}\n      >\n        Select Video\n      </button>\n      <input\n        hidden\n        ref={ref}\n        type=\"file\"\n        accept={accept_types}\n        onChange={(_) => setFile(ref.current?.files?.item(0) ?? null)}\n      />\n    </div>\n  );\n}\n\nexport default FilePicker;\n","import { Vector, Shape } from \"./types\";\n\nexport function findPointInShapeIndex(target: Vector, shapes: Shape[]) {\n  for (let i = 0; i < shapes.length; i++) {\n    if (isPointInShape(target, shapes[i])) return i;\n  }\n  return -1;\n}\n\nexport function isPointInShape(p: Vector, s: Shape) {\n  let res = false;\n  const X = 0;\n  const Y = 1;\n  for (let i = 0; i < s.length; i++) {\n    // https://www.eecs.umich.edu/courses/eecs380/HANDOUTS/PROJ2/InsidePoly.html\n    const edge = [s[i], s[(i + 1) % s.length]];\n    if (\n      // is the point in the Y range of the edge?\n      ((edge[0][Y] <= p[Y] && edge[1][Y] >= p[Y]) ||\n        (edge[1][Y] <= p[Y] && edge[0][Y] >= p[Y])) && // is our point to the left the line that our edge sits on at Y = point[Y]?\n      p[X] <\n        ((edge[0][X] - edge[1][X]) * (p[Y] - edge[1][Y])) /\n          (edge[0][Y] - edge[1][Y]) +\n          edge[1][X]\n    ) {\n      res = !res;\n    }\n  }\n  return res;\n}\n\nexport function distancePointToPoint(a: Vector, b: Vector) {\n  // Pitagora\n  return Math.hypot(a[0] - b[0], a[1] - b[1]);\n}\n\nexport function projectPointToSegment(\n  p: Vector,\n  l: [Vector, Vector]\n): Vector | null {\n  // WHY DO I ONLY THINK OF VECTORS IN MY FREE TIME AND NOT WHEN I'M ON THE CLOCK??????\n  const lineVec = vecSub(l[1], l[0]);\n  const lineLen = distancePointToPoint(l[0], l[1]);\n  const lineVecNormalized = vecScale(lineVec, 1 / lineLen);\n  const pointProjLen = dot(vecSub(p, l[0]), lineVecNormalized);\n  if (pointProjLen < 0 || pointProjLen > lineLen) return null; // proj outside the segment\n  const pointProj = vecSum(l[0], vecScale(lineVecNormalized, pointProjLen));\n  return pointProj;\n}\n\nexport function dot(vec1: Vector, vec2: Vector) {\n  return vec1[0] * vec2[0] + vec1[1] * vec2[1];\n}\n\nexport function vecSum(v1: Vector, v2: Vector): Vector {\n  return [v1[0] + v2[0], v1[1] + v2[1]];\n}\n\nexport function vecNegative(v: Vector): Vector {\n  return [-v[0], -v[1]];\n}\n\nexport function vecSub(v1: Vector, v2: Vector): Vector {\n  return vecSum(v1, vecNegative(v2));\n}\n\nexport function vecScale(v: Vector, n: number): Vector {\n  return [v[0] * n, v[1] * n];\n}\n\nexport function vecLen(v: Vector): number {\n  return distancePointToPoint([0, 0], v);\n}\n\nexport function vecFromCoordinateSystem(\n  v: Vector,\n  up: Vector,\n  right: Vector\n): Vector {\n  return vecSum(vecScale(right, v[0]), vecScale(up, v[1]));\n}\n\nexport function vecToCoordinateSystem(\n  v: Vector,\n  up: Vector,\n  right: Vector\n): Vector {\n  /* \n        x1 = rx * x + ux * y \n        y1 = ry * x + uy * y\n\n        x = (x1 - ux * y) / rx = (y1 - uy * y) / ry => \n        x1 * ry - ux * ry * y = y1 * rx - uy * rx * y =>\n        y = (x1 * ry - y1 * rx) / (ux * ry - uy * rx)\n     */\n  const y =\n    (v[0] * right[1] - v[1] * right[0]) / (up[0] * right[1] - up[1] * right[0]);\n  const x = (v[0] - up[0] * y) / right[0];\n  return [x, y];\n}\n\nexport function vecRotate(v: Vector, upRotated: Vector): Vector {\n  const up = vecScale(upRotated, 1 / vecLen(upRotated));\n  const right = [up[1], -up[0]] as Vector;\n  return vecFromCoordinateSystem(v, up, right);\n}\n\nexport function centroidOfShape(shape: Shape) {\n  const sum = shape.reduce((res, v) => vecSum(v, res));\n  return vecScale(sum, 1 / shape.length);\n}\n\nexport function dirShapeToShape(s1: Shape, s2: Shape) {\n  const center1 = centroidOfShape(s1);\n  const center2 = centroidOfShape(s2);\n  const lineC1toC2 = vecSub(center2, center1);\n  const distance = distancePointToPoint([0, 0], lineC1toC2);\n  return vecScale(lineC1toC2, 1 / distance);\n}\n","import { order } from \"./data\";\nimport { AreaDictionary, Vector, Shape } from \"./types\";\n\nexport class Area {\n  private static counter = 0;\n\n  readonly id: number;\n  public shape: Shape;\n  public isCarWalkable = true;\n  public direction = {\n    left: false,\n    up: false,\n    right: false,\n    down: false,\n  };\n  public isParking = false;\n  public stop: string | null = null;\n  public isSelected = false;\n\n  constructor(quad?: Shape) {\n    this.id = Area.newId();\n    this.shape = quad ?? [\n      [-1, -1],\n      [-1, -1],\n      [-1, -1],\n      [-1, -1],\n    ];\n  }\n\n  static newId() {\n    return Area.counter++;\n  }\n\n  order(): void {\n    const order_changed = order(this.shape);\n    if (order_changed) {\n      let tmp = this.direction.left;\n      this.direction.left = this.direction.up;\n      this.direction.up = tmp;\n\n      tmp = this.direction.right;\n      this.direction.right = this.direction.down;\n      this.direction.down = tmp;\n    }\n  }\n\n  toAreaDictionary(): AreaDictionary {\n    this.order();\n    const dir = this.direction ?? [0, 0];\n    return {\n      id: this.id,\n      points: {\n        lu: this.shape[0].map((x) => Math.round(x)) as Vector,\n        ru: this.shape[1].map((x) => Math.round(x)) as Vector,\n        rb: this.shape[2].map((x) => Math.round(x)) as Vector,\n        lb: this.shape[3].map((x) => Math.round(x)) as Vector,\n      },\n      carWalk: this.isCarWalkable,\n      dir: { ...this.direction },\n      parking: this.isParking,\n      stop: `${this.stop ?? \"None\"}`,\n      ref: this,\n    };\n  }\n\n  fromAreaDictionary(ad: AreaDictionary) {\n    this.shape = Object.values(ad.points);\n    this.isCarWalkable = ad.carWalk;\n    const dirs = {\n      left: [-1, 0],\n      right: [1, 0],\n      up: [0, 1],\n      down: [0, -1],\n    };\n    this.direction = { ...ad.dir };\n\n    this.isParking = ad.parking;\n    this.stop = ad.stop;\n    ad.ref = this;\n    return this;\n  }\n}\n","import { Area } from \"./area\";\n\nexport type Vector = [number, number];\nexport type Shape = Vector[];\nexport enum Tool { ADD, SELECT, SET_DIRECTIONS, TOGGLE_TYPE };\n\nexport type DirKeys = \"left\" | \"right\" | \"up\" | \"down\";\n\nexport type AreaDictionary = {\n    id: number;\n    points: {\n        lu: Vector;\n        ru: Vector;\n        rb: Vector;\n        lb: Vector;\n    };\n    carWalk: boolean;\n    dir: {\n        left: boolean;\n        up: boolean;\n        right: boolean;\n        down: boolean;\n    };\n    parking: boolean;\n    stop: string;\n    changed?: boolean;\n    ref?: Area;\n};\n\nexport interface IIndexable<T = any> { [key: string]: T; }\n\nexport type Options = {\n    ids: boolean;\n    arrows: boolean;\n};\n\nexport { Area } from \"./area\";","import { Shape, Vector } from \"./types\";\nimport { dot, vecSum, vecScale, vecSub } from \"./shapes\";\n\nexport function order(s: Shape) {\n  const X = 0;\n  const Y = 1;\n\n  const firstP = s[0];\n  const rightP = s[1];\n  const leftP = s[3];\n\n  const opposite = s[2];\n\n  // y axis is inverted in images, so this formula is inverted too\n  const rightDir: Vector = [\n    -(firstP[Y] - opposite[Y]),\n    firstP[X] - opposite[X],\n  ];\n\n  if (\n    dot(vecSub(rightP, opposite), rightDir) <\n    dot(vecSub(leftP, opposite), rightDir)\n  ) {\n    const tmp = s[1];\n    s[1] = s[3];\n    s[3] = tmp;\n    return true;\n  }\n\n  return false;\n}\n","import React from \"react\";\nimport { Tool } from \"../utilities/types\";\nimport \"./ToolSelector.scss\";\n\ntype ToolSelectorProps = {\n  value?: Tool;\n  onSelect?: () => void;\n  onAdd?: () => void;\n  onSetDirections?: () => void;\n  onToggleType?: () => void;\n};\n\nexport default function ToolSelector({\n  value,\n  onSelect,\n  onAdd,\n  onSetDirections,\n  onToggleType,\n}: ToolSelectorProps) {\n  return (\n    <div className=\"ToolSelector\">\n      {onAdd ? (\n        <button\n          className={`btn secondary ${\n            value === Tool.ADD ? \"contained\" : \"outlined\"\n          }`}\n          onClick={onAdd}\n        >\n          ADD\n        </button>\n      ) : (\n        \"\"\n      )}\n\n      {onSelect ? (\n        <button\n          className={`btn secondary ${\n            value === Tool.SELECT ? \"contained\" : \"outlined\"\n          }`}\n          onClick={onSelect}\n        >\n          SELECT\n        </button>\n      ) : (\n        \"\"\n      )}\n      {onSetDirections ? (\n        <button\n          className={`btn secondary ${\n            value === Tool.SET_DIRECTIONS ? \"contained\" : \"outlined\"\n          }`}\n          onClick={onSetDirections}\n        >\n          DIRECTIONS\n        </button>\n      ) : (\n        \"\"\n      )}\n\n      {onToggleType ? (\n        <button\n          className={`btn secondary ${\n            value === Tool.TOGGLE_TYPE ? \"contained\" : \"outlined\"\n          }`}\n          onClick={onToggleType}\n        >\n          TYPES\n        </button>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","import React, { useRef, useState, useEffect } from \"react\";\nimport \"./Canvas.scss\";\nimport {\n  Area,\n  Vector,\n  Shape,\n  Tool,\n  DirKeys,\n  Options,\n} from \"../utilities/types\";\nimport {\n  distancePointToPoint,\n  projectPointToSegment,\n  findPointInShapeIndex,\n  vecSum,\n  vecScale,\n  isPointInShape,\n  vecRotate,\n  vecSub,\n  centroidOfShape,\n  vecNegative,\n} from \"../utilities/shapes\";\n\nconst TOGGLE_SIDEWALK = 0;\nconst TOGGLE_PARK = 1;\nconst CANVAS_W = 1920;\nconst CANVAS_H = 1080;\nconst POINT_RADIUS = 5;\nconst SNAP_DISTANCE = 25;\n// const ARROW_SCALE = .1;\nconst ARROW_SIZE = 16;\nconst ARROW_SIZE_SMALL = 10;\nconst ID_SIZE = 48;\n\nconst alpha = 0.25;\n\nconst styleRoad = {\n  width: 2,\n  stroke: `rgb(220, 80, 80)`,\n  fill: `rgba(220, 80, 80, ${alpha})`,\n  arrow: `rgba(220, 80, 80, ${alpha * 2})`,\n  selected: {\n    width: 2,\n    stroke: `rgb(255, 130, 130)`,\n    fill: `rgba(255, 130, 130, ${alpha})`,\n    arrow: `rgba(255, 130, 130, ${alpha * 2})`,\n  },\n};\n\nconst styleSidewalk = {\n  width: 2,\n  stroke: `rgb(50, 100, 250)`,\n  fill: `rgba(50, 100, 250, ${alpha})`,\n  arrow: `rgba(50, 100, 250, ${alpha * 2})`,\n  selected: {\n    width: 2,\n    stroke: `rgb(50, 200, 250)`,\n    fill: `rgba(50, 200, 250, ${alpha})`,\n    arrow: `rgba(50, 200, 250, ${alpha * 2})`,\n  },\n};\n\nconst styleParking = {\n  width: 2,\n  stroke: `rgb(200, 170, 0)`,\n  fill: `rgba(240, 190, 0, ${alpha})`,\n  arrow: `rgba(200, 170, 0, ${alpha * 2})`,\n  selected: {\n    width: 2,\n    stroke: `rgb(255, 215, 50)`,\n    fill: `rgba(255, 250, 50, ${alpha})`,\n    arrow: `rgba(255, 215, 50, ${alpha * 2})`,\n  },\n};\n\nconst styleSidewalkParking = {\n  width: 2,\n  stroke: `rgb(50, 200, 50)`,\n  fill: `rgba(50, 200, 50, ${alpha})`,\n  arrow: `rgba(50, 200, 50, ${alpha * 2})`,\n  selected: {\n    width: 2,\n    stroke: `rgb(100, 240, 100)`,\n    fill: `rgba(100, 255, 100, ${alpha})`,\n    arrow: `rgba(100, 240, 100, ${alpha * 2})`,\n  },\n};\n\nconst styleZebra = {\n  width: 2,\n  stroke: `rgb(150, 150, 150)`,\n  fill: `rgba(150, 150, 150, ${alpha})`,\n  arrow: `rgba(150, 150, 150, ${alpha * 2})`,\n  selected: {\n    width: 2,\n    stroke: `rgb(230, 230, 230)`,\n    fill: `rgba(230, 230, 230, ${alpha})`,\n    arrow: `rgba(230, 230, 230, ${alpha * 2})`,\n  },\n};\n\nexport interface CanvasProps {\n  img: CanvasImageSource | null;\n  quads: Area[];\n  newQuad: (quad: Area) => void;\n  tool: Tool;\n  setSelected: (index: number) => void;\n  updateQuads: (arr: Area[]) => void;\n  deleteQuads: (arr: Area[]) => void;\n  slider?: number;\n  width?: number;\n  height?: number;\n  options?: Options;\n}\n\nexport default function Canvas({\n  img,\n  quads,\n  newQuad,\n  tool,\n  setSelected,\n  updateQuads,\n  deleteQuads,\n  slider,\n  width,\n  height,\n  options = { ids: true, arrows: true },\n}: CanvasProps) {\n  const [points, setPoints] = useState<Shape>([]);\n  const [dragging, setDragging] = useState<boolean>(false);\n  const [modifier, setModifier] = useState<boolean>(false);\n  const [oldMouse, setOldMouse] = useState<Vector | null>(null);\n  const [dragIndexes, setDragIndexes] = useState<number[] | null>(null);\n\n  const ref = useRef<HTMLCanvasElement>(null);\n  const [mouse, setMouse] = useState<{ x: number; y: number }>({ x: 0, y: 0 });\n\n  let canvasH = CANVAS_H;\n  let canvasW = CANVAS_W;\n\n  useEffect(() => {\n    const canvas = ref.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    // Background\n    try {\n      if (!img) throw Error;\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    } catch (e) {\n      context.fillStyle = \"#fff\";\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    // Finished Quads\n    for (let i = quads.length - 1; i >= 0; i--) {\n      const quad = quads[i];\n      drawArea(context, quad);\n    }\n\n    if (mouse.x && mouse.y) {\n      // New Quad\n      if (points && tool === Tool.ADD) {\n        let close = false;\n        const pos = snapToShapes(\n          [mouse.x, mouse.y],\n          quads.map((a) => a.shape)\n        );\n        let path = [pos, ...points];\n        if (points.length === 3) {\n          close = true;\n        }\n        context.lineWidth = styleRoad.width;\n        context.strokeStyle = styleRoad.stroke;\n        context.fillStyle = styleRoad.fill;\n        drawPath(context, path, true, close);\n      }\n    }\n  }, [img, quads, tool, mouse, modifier, points, slider, width, options]);\n\n  const snapToShapes = (pos: Vector, shapes: Shape[]) => {\n    if (modifier) return pos;\n\n    // give priority to points instead of edges\n    // find the closest point\n    shapes.push([\n      [0, 0],\n      [canvasW, 0],\n      [canvasW, canvasH],\n      [0, canvasH],\n    ]); // add boundaries\n    let [minDist, newPoint] = shapes.flat().reduce(\n      ([dist, point]: [number, Vector | null], p) => {\n        const d = distancePointToPoint(pos, p);\n        if (d < dist || dist === -1) return [d, p];\n        else return [dist, point];\n      },\n      [-1, null]\n    );\n\n    if (newPoint && minDist < SNAP_DISTANCE) {\n      pos = newPoint;\n    } else {\n      [minDist, newPoint] = shapes.reduce(\n        ([dist, point]: [number, Vector | null], s) => {\n          // find the closest point in the edges\n          let [d, p] = s.reduce(\n            ([dist, point]: [number, Vector | null], p1, i, s) => {\n              const p2 = s[(i + 1) % s.length];\n              let proj = projectPointToSegment(pos, [p1, p2]);\n              let d, p;\n              // if we found a projection it is the closest point\n              if (proj) {\n                d = distancePointToPoint(pos, proj);\n                p = proj;\n                // confront it with the previous results\n                if (d < dist || dist === -1) return [d, p];\n              }\n              return [dist, point];\n            },\n            [-1, null]\n          );\n\n          // confront it with the previous results\n          if ((p && d < dist) || dist === -1) return [d, p];\n          return [dist, point];\n        },\n        [-1, null]\n      );\n\n      if (newPoint && minDist < SNAP_DISTANCE) {\n        pos = newPoint;\n      }\n    }\n\n    return pos;\n  };\n\n  const addPoint = () => {\n    if (!mouse.x || !mouse.y) {\n      return;\n    }\n\n    let pos: Vector = [mouse.x, mouse.y];\n\n    pos = snapToShapes(\n      pos,\n      quads.map((a) => a.shape)\n    );\n\n    const updatedShape = [pos, ...points];\n\n    if (updatedShape.length === 4) {\n      const newArea = new Area(updatedShape);\n      newArea.order();\n      newArea.isSelected = true;\n      setSelected(-1);\n      newQuad(newArea);\n      setPoints([]);\n    } else {\n      setPoints(updatedShape);\n    }\n  };\n\n  const drawPath = (\n    canvasCtx: CanvasRenderingContext2D,\n    points: [number, number][],\n    f_drawPoints = false,\n    close = true\n  ) => {\n    if (points[0]) canvasCtx.moveTo(points[0][0], points[0][1]);\n    canvasCtx.beginPath();\n    for (const p of points) {\n      canvasCtx.lineTo(p[0], p[1]);\n    }\n\n    if (close) {\n      canvasCtx.closePath();\n      canvasCtx.fill();\n    }\n    canvasCtx.stroke();\n\n    if (f_drawPoints) {\n      points.forEach((p, i) => drawPoint(canvasCtx, p, i));\n    }\n  };\n\n  const drawPoint = (\n    canvasCtx: CanvasRenderingContext2D,\n    point: Vector,\n    index = 2\n  ) => {\n    const tmpFill = canvasCtx.fillStyle;\n    const tmpStroke = canvasCtx.strokeStyle;\n    const fillStyles = [\"#fff\", \"#f55\", \"#5f5\", \"#55f\"];\n    canvasCtx.fillStyle = fillStyles[index];\n    canvasCtx.strokeStyle = \"#000\";\n    canvasCtx.beginPath();\n    canvasCtx.arc(point[0], point[1], POINT_RADIUS, 0, 2 * 3.15);\n    canvasCtx.closePath();\n    canvasCtx.fill();\n    canvasCtx.stroke();\n    canvasCtx.fillStyle = tmpFill;\n    canvasCtx.strokeStyle = tmpStroke;\n  };\n\n  const drawArrows = (\n    canvasCtx: CanvasRenderingContext2D,\n    quad: Vector[],\n    directions: { left: boolean; up: boolean; right: boolean; down: boolean },\n    color = \"#000\",\n    f_highlight = false\n  ) => {\n    let arrow: Shape = [\n      [-0.7, -1],\n      [0, 1],\n      [0.7, -1],\n    ];\n    arrow = arrow.map((vec) =>\n      vecScale(vec, f_highlight ? ARROW_SIZE : ARROW_SIZE_SMALL)\n    );\n\n    const topMid = centroidOfShape([quad[0], quad[1]]);\n    const botMid = centroidOfShape([quad[2], quad[3]]);\n    const rightMid = centroidOfShape([quad[1], quad[2]]);\n    const leftMid = centroidOfShape([quad[3], quad[0]]);\n\n    const up = vecSub(topMid, botMid);\n    const right = vecSub(rightMid, leftMid);\n\n    const arrows = Object.entries(directions).map(([k, v]) => {\n      if (!v) return null;\n      let dir: Vector, anchor: Vector;\n      switch (k) {\n        case \"up\":\n          dir = up;\n          anchor = topMid;\n          break;\n        case \"down\":\n          dir = vecNegative(up);\n          anchor = botMid;\n          break;\n        case \"right\":\n          dir = right;\n          anchor = rightMid;\n          break;\n        case \"left\":\n          dir = vecNegative(right);\n          anchor = leftMid;\n          break;\n        default:\n          return null;\n      }\n\n      const rotated = arrow.map((vec) => vecRotate(vec, dir));\n      const translation = vecSub(anchor, rotated[1]);\n      return rotated.map((vec) => vecSum(vec, translation));\n    });\n\n    const tmpStroke = canvasCtx.strokeStyle;\n    const tmpFill = canvasCtx.fillStyle;\n    const tmpWidth = canvasCtx.lineWidth;\n\n    if (f_highlight) canvasCtx.strokeStyle = \"#000\";\n    else canvasCtx.strokeStyle = color;\n\n    canvasCtx.fillStyle = color;\n    canvasCtx.lineWidth = 2;\n\n    for (const arrow of arrows) {\n      if (!arrow) continue;\n      drawPath(canvasCtx, arrow, false, true);\n    }\n\n    canvasCtx.strokeStyle = tmpStroke;\n    canvasCtx.fillStyle = tmpFill;\n    canvasCtx.lineWidth = tmpWidth;\n  };\n\n  const drawArea = (canvasCtx: CanvasRenderingContext2D, area: Area) => {\n    let movement: Vector = [0, 0];\n    // Drag\n    if (dragging && oldMouse) {\n      movement = [mouse.x! - oldMouse[0], mouse.y! - oldMouse[1]] as Vector;\n    }\n\n    const shape = area.isSelected\n      ? area.shape.map((p, i) => {\n          if (dragIndexes && dragIndexes.some((n) => n === i))\n            return snapToShapes(\n              vecSum(p, movement),\n              quads.filter((a) => a.id !== area.id).map((a) => a.shape)\n            );\n          else return p;\n        })\n      : area.shape;\n\n    const center = centroidOfShape(shape);\n\n    let style;\n    if (area.isCarWalkable) {\n      if (area.isParking) style = styleParking;\n      else style = styleRoad;\n    } else {\n      if (area.isParking) style = styleSidewalkParking;\n      else if (\n        area.direction.up ||\n        area.direction.left ||\n        area.direction.right ||\n        area.direction.down\n      )\n        style = styleZebra;\n      else style = styleSidewalk;\n    }\n    if (area.isSelected) style = style.selected;\n\n    const tmp = {\n      lw: canvasCtx.lineWidth,\n      ss: canvasCtx.strokeStyle,\n      fs: canvasCtx.fillStyle,\n    };\n    canvasCtx.lineWidth = style.width;\n    canvasCtx.strokeStyle = style.stroke;\n    canvasCtx.fillStyle = style.fill;\n\n    drawPath(canvasCtx, shape, area.isSelected, true);\n    if (options.ids)\n      drawText(canvasCtx, area.id.toString(), center, ID_SIZE, style.stroke);\n\n    if (tool === Tool.SET_DIRECTIONS)\n      drawArrows(canvasCtx, shape, area.direction, \"#3e3\", true);\n    else if (options.arrows)\n      drawArrows(canvasCtx, shape, area.direction, style.stroke);\n\n    // if (area.isParking) drawParking(canvasCtx, shape, style.stroke);\n\n    canvasCtx.lineWidth = tmp.lw;\n    canvasCtx.strokeStyle = tmp.ss;\n    canvasCtx.fillStyle = tmp.fs;\n  };\n\n  const drawText = (\n    canvasCtx: CanvasRenderingContext2D,\n    text: string,\n    center: Vector,\n    size = 12,\n    color = \"#000\"\n  ) => {\n    const tmp = {\n      font: canvasCtx.font,\n      ta: canvasCtx.textAlign,\n      tb: canvasCtx.textBaseline,\n      fs: canvasCtx.fillStyle,\n      ss: canvasCtx.strokeStyle,\n    };\n\n    canvasCtx.font = `${size}px sans-serif`;\n    canvasCtx.textAlign = \"center\";\n    canvasCtx.textBaseline = \"middle\";\n    canvasCtx.fillStyle = color;\n    canvasCtx.strokeStyle = \"#000\";\n\n    canvasCtx.fillText(text, center[0], center[1]);\n    canvasCtx.strokeText(text, center[0], center[1]);\n\n    canvasCtx.font = tmp.font;\n    canvasCtx.textAlign = tmp.ta;\n    canvasCtx.textBaseline = tmp.tb;\n    canvasCtx.fillStyle = tmp.fs;\n  };\n\n  const handleSelect = () => {\n    // check if we have a selected area\n    const selected = quads.find((a) => a.isSelected);\n    let indexes: number[] | null = null;\n    if (selected) {\n      // check its closest points and edges to drag them\n      const points = selected.shape;\n      let distance: number;\n      indexes = [-1];\n      // find the closest point to the mouse pointer\n      [distance, indexes[0]] = points.reduce(\n        ([res_d, res_i], p, i) => {\n          const d = distancePointToPoint([mouse.x!, mouse.y!], p);\n          return d < res_d ? [d, i] : [res_d, res_i];\n        },\n        [999, -1]\n      );\n      // if it's too far check if one of the edges is close enough\n      if (distance > SNAP_DISTANCE) {\n        [distance, indexes] = points.reduce(\n          ([res_d, res_is], p, i, points) => {\n            const j = (i + 1) % points.length;\n            const p1 = points[j];\n            const proj = projectPointToSegment([mouse.x!, mouse.y!], [p, p1]);\n            if (!proj) return [res_d, res_is];\n            const dist = distancePointToPoint([mouse.x!, mouse.y!], proj);\n            return dist < res_d ? [dist, [i, j]] : [res_d, res_is];\n          },\n          [999, [-1]]\n        );\n      }\n      // if it's not check if we clicked it and drag the entire shape\n      if (distance > SNAP_DISTANCE) {\n        if (isPointInShape([mouse.x, mouse.y], selected.shape)) {\n          indexes = [0, 1, 2, 3];\n        } else {\n          indexes = null;\n        }\n      }\n    }\n\n    if (indexes) {\n      // update the state\n      setDragIndexes(indexes);\n      setDragging(true);\n      setOldMouse([mouse.x!, mouse.y!]);\n    } else {\n      // check if we clicked an area and select it\n      const target = findPointInShapeIndex(\n        [mouse.x, mouse.y],\n        quads.map((a) => a.shape)\n      );\n      setSelected(target);\n    }\n  };\n\n  const handleSetDirections = (all = false) => {\n    const pos = [mouse.x, mouse.y] as Vector;\n    const targetArea = quads.find((q) => isPointInShape(pos, q.shape));\n    if (!targetArea) return;\n\n    if (all) {\n      const newState = !Object.values(targetArea.direction).every((x) => x);\n      for (const key of Object.keys(targetArea.direction)) {\n        targetArea.direction[key as DirKeys] = newState;\n      }\n    } else {\n      const shape = targetArea.shape;\n      const center = centroidOfShape(shape);\n      const sectors = {\n        up: [shape[0], shape[1], center] as Shape,\n        down: [shape[2], shape[3], center] as Shape,\n        right: [shape[1], shape[2], center] as Shape,\n        left: [shape[3], shape[0], center] as Shape,\n      };\n\n      const selectedDir: DirKeys | null = (() => {\n        for (const [k, v] of Object.entries(sectors)) {\n          if (isPointInShape(pos, v)) return k as DirKeys;\n        }\n        return null;\n      })();\n\n      if (!selectedDir) return;\n\n      targetArea.direction[selectedDir] = !targetArea.direction[selectedDir];\n    }\n\n    updateQuads([targetArea]);\n  };\n\n  const handleToggleType = (version = TOGGLE_SIDEWALK) => {\n    const pos = [mouse.x, mouse.y] as Vector;\n    const targetArea = quads.find((q) => isPointInShape(pos, q.shape));\n    if (!targetArea) return;\n\n    switch (version) {\n      case TOGGLE_SIDEWALK:\n        if (targetArea.isCarWalkable) {\n          targetArea.isCarWalkable = false;\n        } else {\n          targetArea.isCarWalkable = true;\n        }\n        break;\n      case TOGGLE_PARK:\n        if (targetArea.isParking) {\n          targetArea.isParking = false;\n        } else {\n          targetArea.isParking = true;\n        }\n        break;\n    }\n\n    updateQuads([targetArea]);\n  };\n\n  const onMouseDown = (e: React.MouseEvent) => {\n    switch (e.button) {\n      case 0:\n        switch (tool) {\n          case Tool.ADD:\n            addPoint();\n            break;\n          case Tool.SELECT:\n            handleSelect();\n            break;\n          case Tool.SET_DIRECTIONS:\n            handleSetDirections();\n            break;\n          case Tool.TOGGLE_TYPE:\n            handleToggleType(TOGGLE_SIDEWALK);\n            break;\n          default:\n            throw Error(\"Tool not implemented\");\n        }\n        break;\n      case 2:\n        switch (tool) {\n          case Tool.TOGGLE_TYPE:\n            handleToggleType(TOGGLE_PARK);\n            break;\n          case Tool.SET_DIRECTIONS:\n            handleSetDirections(true);\n            break;\n        }\n        break;\n    }\n  };\n\n  const stopDragging = () => {\n    if (dragging && oldMouse) {\n      const selectedAreas = quads.filter((a) => a.isSelected);\n      const movement: Vector = [mouse.x! - oldMouse[0], mouse.y! - oldMouse[1]];\n      const updated = selectedAreas.map((a) => {\n        a.shape = a.shape.map((p, i) => {\n          if (dragIndexes && dragIndexes.some((n) => n === i))\n            return snapToShapes(\n              vecSum(p, movement),\n              quads.filter((b) => b.id !== a.id).map((b) => b.shape)\n            );\n          else return p;\n        });\n        return a;\n      });\n      updated.forEach((a) => a.order());\n      updateQuads(updated);\n      setDragging(false);\n      setDragIndexes(null);\n      setOldMouse(null);\n    }\n  };\n\n  const onMouseUp = () => {\n    stopDragging();\n  };\n\n  const onMouseLeave = () => {\n    if (dragging && dragIndexes?.length === 4) {\n      setDragging(false);\n      setDragIndexes(null);\n      setOldMouse(null);\n      deleteQuads(quads.filter((q) => q.isSelected));\n    } else {\n      stopDragging();\n    }\n  };\n  const onMouseMove = (e: React.MouseEvent) => {\n    const canvas = ref.current;\n    if (canvas) {\n      const ratio = canvas.clientWidth / canvas.width;\n      const topLeft = [canvas.offsetLeft, canvas.offsetTop];\n      setMouse({\n        x: (e.pageX - topLeft[0]) / ratio,\n        y: (e.pageY - topLeft[1]) / ratio,\n      });\n    }\n  };\n\n  return (\n    <div className=\"Canvas\">\n      <canvas\n        ref={ref}\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onMouseLeave={onMouseLeave}\n        onMouseMove={onMouseMove}\n        onContextMenu={(e) => e.preventDefault()}\n        width={CANVAS_W}\n        height={CANVAS_H}\n        onKeyDown={(e) => {\n          if (e.key === \"Control\") setModifier(true);\n        }}\n        onKeyUp={(e) => {\n          if (e.key === \"Control\") setModifier(false);\n        }}\n        tabIndex={0}\n        onMouseEnter={() => ref.current?.focus()}\n        onBlur={() => setPoints([])}\n      />\n    </div>\n  );\n}\n","import { Check, Clear, Delete } from '@material-ui/icons';\nimport React, { useEffect, useState } from \"react\";\nimport { Area, AreaDictionary, IIndexable, Vector } from \"../utilities/types\";\n\nimport \"./Inspector.scss\";\n\ntype InspectorProps = {\n  target: Area[];\n  update: (updated: Area[]) => void;\n  selectById: (id: number) => void;\n  deleteById: (id: number) => void;\n};\n\nexport default function Inspector({\n  target,\n  update,\n  selectById,\n  deleteById,\n}: InspectorProps) {\n  const [inspected, setInspected] = useState<AreaDictionary[]>();\n  const updateInspected = (updated: AreaDictionary, changed = true) => {\n    updated.changed = changed;\n    if (!inspected) return;\n    const unchanged = inspected?.filter((a) => a.id !== updated.id);\n    setInspected(\n      [updated, ...unchanged].sort((a, b) => (a.id < b.id ? -1 : 1))\n    );\n  };\n\n  useEffect(() => {\n    const selected = target;\n\n    let list = selected.map((a) => a.toAreaDictionary());\n\n    const pending = inspected?.filter((t) => t.changed);\n    list = list.map((a) => {\n      const t = pending?.find((t) => t.id === a.id);\n      return t ? t : a;\n    });\n\n    list = list.sort((a, b) => (a.id < b.id ? -1 : 1));\n\n    setInspected(list);\n  }, [target]);\n\n  function renderAD(a: AreaDictionary) {\n    const renderPoint = (p: Vector, key: string, ref: AreaDictionary) => {\n      return p.map((val, i) => {\n        return (\n          <td key={`${key}${i}`}>\n            <input\n              type=\"number\"\n              value={Math.round(val)}\n              onChange={(e) => {\n                (ref.points as IIndexable)[key][i] = +e.target.value;\n                updateInspected(ref);\n              }}\n            />\n          </td>\n        );\n      });\n    };\n\n    const renderedPoints = Object.entries(a.points).flatMap(([k, v]) =>\n      renderPoint(v, k, a)\n    );\n\n    const renderedDirection = Object.entries(a.dir).map(([k, v]) => {\n      return (\n        <td key={k}>\n          <input\n            type=\"checkbox\"\n            checked={v}\n            onChange={() => {\n              (a.dir as IIndexable)[k] = !(a.dir as IIndexable)[k];\n              updateInspected(a);\n            }}\n          />\n        </td>\n      );\n    });\n\n    return (\n      <tr\n        key={a.id}\n        onClick={() => selectById(a.id)}\n        className={a.ref?.isSelected ? \"selected\" : \"\"}\n      >\n        <td key=\"delete\" className=\"delete\">\n          <button\n            className=\"btn contained secondary\"\n            onClick={(e) => {\n              e.stopPropagation();\n              deleteById(a.id);\n            }}\n          >\n            <Delete />\n          </button>\n        </td>\n        <td key=\"id\">\n          <div className=\"id\"> {a.id} </div>\n        </td>\n        {renderedPoints}\n        <td key=\"iscarwalkable\">\n          <input\n            type=\"checkbox\"\n            checked={a.carWalk}\n            onChange={() => {\n              a.carWalk = !a.carWalk;\n              updateInspected(a);\n            }}\n          />\n        </td>\n        {renderedDirection}\n        <td key=\"isparking\">\n          <input\n            type=\"checkbox\"\n            checked={a.parking}\n            onChange={() => {\n              a.parking = !a.parking;\n              updateInspected(a);\n            }}\n          />\n        </td>\n        <td key=\"isstop\">\n          <input\n            type=\"text\"\n            value={a.stop ?? \"None\"}\n            onChange={(e) => {\n              a.stop = e.target.value;\n              updateInspected(a);\n            }}\n          />\n        </td>\n        <td className={!a.changed ? \"hide\" : \"space\"} />\n        <td key=\"update\" className={!a.changed ? \"hide\" : \"\"}>\n          <button\n            className=\"btn contained primary\"\n            onClick={() => {\n              updateInspected(a, false);\n              update([\n                target.find((t) => t.id === a.id)!.fromAreaDictionary(a),\n              ]);\n            }}\n          >\n            <Check />\n          </button>\n        </td>\n        <td key=\"discard\" className={!a.changed ? \"hide\" : \"\"}>\n          <button\n            className={`btn contained secondary ${!a.changed ? \"hide\" : \"\"}`}\n            onClick={() => {\n              a = target.find((t) => t.id === a.id)!.toAreaDictionary();\n              updateInspected(a, false);\n            }}\n          >\n            <Clear />\n          </button>\n        </td>\n      </tr>\n    );\n  }\n\n  return (\n    <div className=\"Inspector\">\n      <table>\n        <thead>\n          <tr>\n            <th />\n            <th>ID </th>\n            <th>luX </th>\n            <th>luY </th>\n            <th>ruX </th>\n            <th>ruY </th>\n            <th>rbX </th>\n            <th>rbY </th>\n            <th>lbX </th>\n            <th>lbY </th>\n            <th>CarWalk </th>\n            <th>Left </th>\n            <th>Up </th>\n            <th>Right </th>\n            <th>Down </th>\n            <th>Parking </th>\n            <th>Stop </th>\n          </tr>\n        </thead>\n        <tbody>{inspected?.map((a) => renderAD(a))}</tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { useRef } from \"react\";\nimport { Area, AreaDictionary, Vector } from \"../utilities/types\";\n\nimport \"./IOManager.css\";\n\nconst fields = [\n  \"luX\",\n  \"luY\",\n  \"ruX\",\n  \"ruY\",\n  \"rbX\",\n  \"rbY\",\n  \"lbX\",\n  \"lbY\",\n  \"CarWalk\",\n  \"Left\",\n  \"Up\",\n  \"Right\",\n  \"Down\",\n  \"Parking\",\n  \"Stop\",\n];\n\ntype IOMangerProps = {\n  target: Area[];\n  source?: string;\n  load: (arr: Area[]) => void;\n};\n\nexport function IOManager({ target, source, load }: IOMangerProps) {\n  const dlRef = useRef<HTMLAnchorElement>(null);\n  const loadRef = useRef<HTMLInputElement>(null);\n\n  const filename = source ? source.replace(\".mp4\", \"_areas.csv\") : \"areas.csv\";\n\n  const download = () => {\n    const outStr = formatData(target);\n    const blob = new Blob([outStr], { type: \"text/csv;charset=utf-8;\" });\n    const dlUrl = URL.createObjectURL(blob);\n    dlRef.current?.setAttribute(\"href\", dlUrl);\n    dlRef.current?.click();\n    URL.revokeObjectURL(dlUrl);\n  };\n\n  const formatData = (target: Area[]) => {\n    const formatted = target.map(formatArea);\n    return [fields.join(\",\")].concat(formatted).join(\"\\n\");\n  };\n\n  const formatArea = (area: Area) => {\n    const ad = area.toAreaDictionary();\n\n    const points = [ad.points.lu, ad.points.ru, ad.points.rb, ad.points.lb]\n      .map((p) => p.join(\",\"))\n      .join(\",\");\n    const carWalk = ad.carWalk ? 1 : 0;\n    const parking = ad.parking ? 1 : 0;\n    const stop = ad.stop;\n    const direction = [ad.dir.left, ad.dir.up, ad.dir.right, ad.dir.down]\n      .map((f) => (f ? 1 : 0))\n      .join(\",\");\n\n    return [points, carWalk, direction, parking, stop].join(\",\");\n  };\n\n  const loader = async (f: File | null) => {\n    if (!f) {\n      console.error(\"Unable to load file!\");\n      return;\n    }\n    const csv = await f.text();\n    const rows = csv.split(\"\\n\").filter((s) => s !== \"\");\n    const strings = rows.slice(1).map((r) => r.split(\",\"));\n    const dictionaries = strings.map((r) => {\n      let ad: any = { points: {}, dir: {} };\n      const vals: number[] = r.map((v) => +v);\n      ad.points.lu = vals.slice(0, 2) as Vector;\n      ad.points.ru = vals.slice(2, 4) as Vector;\n      ad.points.rb = vals.slice(4, 6) as Vector;\n      ad.points.lb = vals.slice(6, 8) as Vector;\n      ad.carWalk = vals[8] > 0;\n      ad.dir.left = vals[9] > 0;\n      ad.dir.up = vals[10] > 0;\n      ad.dir.right = vals[11] > 0;\n      ad.dir.down = vals[12] > 0;\n      ad.parking = vals[13] > 0;\n      ad.stop = r[14];\n      return ad as AreaDictionary;\n    });\n    const newAreas = dictionaries.map((ad) =>\n      new Area().fromAreaDictionary(ad)\n    );\n    load(newAreas);\n  };\n\n  return (\n    <div className=\"IOManager\">\n      <button\n        className=\"btn contained primary\"\n        onClick={() => loadRef.current?.click()}\n      >\n        Load CSV\n      </button>\n      <input\n        hidden\n        type=\"file\"\n        ref={loadRef}\n        accept=\".csv\"\n        onChange={() => loader(loadRef.current?.files?.item(0) ?? null)}\n      />\n\n      <button className=\"btn contained primary\" onClick={download}>\n        Download\n      </button>\n      <a ref={dlRef} href=\".\" download={filename} hidden>\n        hidden download link\n      </a>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Options } from \"../utilities/types\";\nimport \"./OptionSelector.scss\";\nimport { ArrowUpward } from \"@material-ui/icons\";\n\ntype OptionSelectorProps = {\n  options: Options;\n  updateOptions: (o: Options) => void;\n};\n\nexport default function OptionSelector({\n  options,\n  updateOptions,\n}: OptionSelectorProps) {\n  return (\n    <div className=\"OptionSelector\">\n      <button\n        className={`btn ${options.ids ? \"contained\" : \"outlined\"}`}\n        onClick={() => updateOptions({ ...options, ids: !options.ids })}\n      >\n        IDs\n      </button>\n\n      <button\n        className={`btn ${options.arrows ? \"contained\" : \"outlined\"}`}\n        onClick={() => updateOptions({ ...options, arrows: !options.arrows })}\n      >\n        <ArrowUpward />\n      </button>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport Video from \"./components/Video\";\nimport FilePicker from \"./components/FilePicker\";\nimport { Area, Tool, Options } from \"./utilities/types\";\nimport ToolSelector from \"./components/ToolSelector\";\nimport Canvas from \"./components/Canvas\";\nimport Inspector from \"./components/Inspector\";\nimport { IOManager } from \"./components/IOManager\";\nimport OptionSelector from \"./components/OptionSelector\";\n\nexport default function App() {\n  const [file, setFile] = useState<File | null>(null);\n  const [videoSrc, setVideoSrc] = useState<string>(\"\");\n  const [video, setVideo] = useState<HTMLVideoElement | null>(null);\n  const [slider, setSlider] = useState<number | undefined>();\n  const [quadList, setQuadList] = useState<Area[]>([]);\n  const [tool, setTool] = useState<Tool>(Tool.ADD);\n  const [options, setOptions] = useState<Options>({ ids: true, arrows: true });\n\n  useEffect(() => {\n    if (file) {\n      const source = URL.createObjectURL(file);\n      setVideoSrc(source);\n    }\n  }, [file]);\n\n  const deleteQuads = (quads: Area[]) => {\n    const filteredList = quadList.filter((a) =>\n      quads.every((b) => b.id !== a.id)\n    );\n    setQuadList(filteredList);\n  };\n\n  const setSelected = (index: number) => {\n    quadList.map((a) => (a.isSelected = false));\n    if (index >= 0 && index < quadList.length) {\n      quadList[index].isSelected = true;\n    }\n    setQuadList([...quadList]);\n  };\n\n  const setSelectedById = (id: number) => {\n    setSelected(quadList.findIndex((a) => a.id === id));\n  };\n\n  const updateQuads = (quads: Area[]) => {\n    const notUpdated = quadList.filter((a) =>\n      quads.every((b) => b.id !== a.id)\n    );\n    setQuadList([...quads, ...notUpdated]);\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <div className=\"BlockButtons\">\n          <OptionSelector options={options} updateOptions={setOptions} />\n        </div>\n        <div className=\"BlockCanvas\">\n          <Canvas\n            img={video}\n            quads={quadList}\n            newQuad={(quad: Area) => setQuadList([quad, ...quadList])}\n            tool={tool}\n            setSelected={setSelected}\n            updateQuads={updateQuads}\n            deleteQuads={deleteQuads}\n            slider={slider}\n            width={video?.videoWidth || undefined}\n            height={video?.videoHeight || undefined}\n            options={options}\n          />\n          <Video\n            source={videoSrc}\n            setVideo={(v) => {\n              setVideo(v);\n              setQuadList([]);\n            }}\n            setSlider={setSlider}\n            value={slider ?? 0}\n          />\n        </div>\n        <div className=\"BlockButtons\">\n          <ToolSelector\n            value={tool}\n            onAdd={() => {\n              setTool(Tool.ADD);\n              setSelected(-1);\n            }}\n            onSelect={() => {\n              setTool(Tool.SELECT);\n              setSelected(-1);\n            }}\n            onSetDirections={() => {\n              setTool(Tool.SET_DIRECTIONS);\n              setSelected(-1);\n            }}\n            onToggleType={() => {\n              setTool(Tool.TOGGLE_TYPE);\n              setSelected(-1);\n            }}\n          />\n          <FilePicker setFile={setFile} accept_types=\"video/*\" />\n          <IOManager\n            target={quadList}\n            source={file?.name}\n            load={(arr) => setQuadList(arr)}\n          />\n        </div>\n      </div>\n      <div>\n        <Inspector\n          target={quadList}\n          update={updateQuads}\n          selectById={setSelectedById}\n          deleteById={(id) => deleteQuads(quadList.filter((q) => q.id === id))}\n        />\n      </div>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { blue, red } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: blue[400],\n    },\n    secondary: {\n      main: red[400],\n    },\n  },\n  typography: {\n    button: {\n      fontWeight: \"bold\",\n    },\n  },\n  overrides: {\n    MuiButton: {\n      outlined: {\n        border: \"2px solid !important\",\n      }\n    }\n  }\n\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}