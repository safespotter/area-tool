{"version":3,"sources":["components/Video.tsx","components/FilePicker.tsx","utilities/shapes.ts","utilities/data.ts","utilities/area.ts","utilities/types.ts","components/ToolSelector.tsx","components/Canvas.tsx","components/Inspector.tsx","components/IOManager.tsx","components/OptionSelector.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Video","source","setVideo","setSlider","videoRef","value","useRef","useEffect","current","src","loader","setTimeout","duration","setVideoPos","percentage","currentTime","className","type","min","max","onChange","ev","target","ref","hidden","FilePicker","setFile","accept_types","onClick","click","accept","_","files","item","isPointInShape","p","s","res","i","length","edge","distancePointToPoint","a","b","Math","hypot","projectPointToSegment","l","lineVec","vecSub","lineLen","lineVecNormalized","vecScale","pointProjLen","dot","vecSum","vec1","vec2","v1","v2","vecNegative","v","n","vecRotate","upRotated","up","vecLen","right","vecFromCoordinateSystem","centroidOfShape","shape","reduce","order","lu","sort","slice","i_lu","findIndex","ordered","firstP","nextP","prevP","center","clockwisePerpendicular","push","Tool","Area","quad","id","isCarWalkable","direction","left","down","isParking","stop","isSelected","this","newId","points","map","x","round","ru","rb","lb","carWalk","dir","parking","ad","Object","values","counter","ToolSelector","onSelect","onAdd","onSetDirections","onToggleType","ADD","SELECT","SET_DIRECTIONS","TOGGLE_TYPE","alpha","styleRoad","width","stroke","fill","arrow","selected","styleSidewalk","styleParking","styleSidewalkParking","styleZebra","Canvas","img","quads","newQuad","tool","setSelected","updateQuads","deleteQuads","slider","height","options","ids","arrows","useState","setPoints","dragging","setDragging","modifier","setModifier","oldMouse","setOldMouse","dragIndexes","setDragIndexes","y","mouse","setMouse","canvas","context","getContext","Error","drawImage","e","fillStyle","fillRect","drawArea","close","path","snapToShapes","lineWidth","strokeStyle","drawPath","pos","shapes","flat","dist","point","d","minDist","newPoint","p1","p2","proj","canvasCtx","f_drawPoints","moveTo","beginPath","lineTo","closePath","drawPoint","tmpFill","tmpStroke","arc","drawArrows","directions","color","f_highlight","vec","topMid","botMid","rightMid","leftMid","entries","anchor","k","rotated","translation","tmpWidth","area","movement","style","some","filter","tmp","lw","ss","fs","drawText","toString","text","size","font","ta","textAlign","tb","textBaseline","fillText","strokeText","handleSelect","find","indexes","distance","res_d","res_i","res_is","j","findPointInShapeIndex","handleSetDirections","all","targetArea","q","newState","every","keys","key","sectors","selectedDir","handleToggleType","version","stopDragging","selectedAreas","updated","onMouseDown","button","updatedShape","newArea","addPoint","onMouseUp","onMouseLeave","onMouseMove","ratio","clientWidth","topLeft","offsetLeft","offsetTop","pageX","pageY","onContextMenu","preventDefault","onKeyDown","onKeyUp","tabIndex","onMouseEnter","focus","onBlur","Inspector","update","selectById","deleteById","inspected","setInspected","updateInspected","changed","unchanged","renderAD","renderedPoints","flatMap","val","renderedDirection","checked","stopPropagation","Delete","t","fromAreaDictionary","Check","toAreaDictionary","Clear","list","pending","fields","IOManager","load","dlRef","loadRef","filename","replace","formatData","formatted","formatArea","join","concat","f","console","error","csv","rows","split","strings","r","dictionaries","vals","newAreas","outStr","blob","Blob","dlUrl","URL","createObjectURL","setAttribute","revokeObjectURL","href","download","OptionSelector","updateOptions","ArrowUpward","App","file","videoSrc","setVideoSrc","video","quadList","setQuadList","setTool","setOptions","filteredList","index","notUpdated","videoWidth","undefined","videoHeight","name","arr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","main","blue","secondary","red","typography","fontWeight","overrides","MuiButton","outlined","border","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.0681cce0.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\n\r\nimport \"./Video.css\";\r\n\r\ntype VideoProps = {\r\n  source: string;\r\n  setVideo: (video: HTMLVideoElement) => void;\r\n  setSlider: (value: number | undefined) => void;\r\n  value: number;\r\n};\r\n\r\nexport default function Video({\r\n  source,\r\n  setVideo,\r\n  setSlider,\r\n  value,\r\n}: VideoProps) {\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (videoRef.current && source) {\r\n      videoRef.current.src = source;\r\n      setVideo(videoRef.current);\r\n\r\n      const loader = () => {\r\n        setTimeout(() => {\r\n          if (videoRef.current?.duration) {\r\n            setVideoPos(1);\r\n          } else loader();\r\n        }, 10);\r\n      };\r\n\r\n      loader();\r\n    }\r\n  }, [source]);\r\n\r\n  const setVideoPos = (percentage: number) => {\r\n    if (!videoRef.current || !source || !percentage) {\r\n      return;\r\n    }\r\n    // force range 0 - 100\r\n    const value = percentage < 1 ? 1 : percentage > 100 ? 100 : percentage;\r\n    videoRef.current.currentTime = (value / 100) * videoRef.current.duration;\r\n    setSlider(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"VideoCanvas\">\r\n      <input\r\n        className=\"slider\"\r\n        type=\"range\"\r\n        min=\"1\"\r\n        max=\"100\"\r\n        onChange={(ev) => {\r\n          setVideoPos(+ev.target.value);\r\n        }}\r\n      />\r\n      <video ref={videoRef} hidden />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from \"react\";\r\n\r\nimport \"./FilePicker.css\";\r\n\r\ntype FilePickerProps = {\r\n  setFile: (f: File | null) => void;\r\n  accept_types?: string;\r\n};\r\n\r\nfunction FilePicker({ setFile, accept_types = \"\" }: FilePickerProps) {\r\n  const ref = useRef<HTMLInputElement>(null);\r\n\r\n  return (\r\n    <div className=\"FilePicker\">\r\n      <button\r\n        className=\"btn contained primary\"\r\n        onClick={() => ref.current?.click()}\r\n      >\r\n        Select Video\r\n      </button>\r\n      <input\r\n        hidden\r\n        ref={ref}\r\n        type=\"file\"\r\n        accept={accept_types}\r\n        onChange={(_) => setFile(ref.current?.files?.item(0) ?? null)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilePicker;\r\n","import { Vector, Shape } from \"./types\";\r\n\r\nexport function findPointInShapeIndex(target: Vector, shapes: Shape[]) {\r\n  for (let i = 0; i < shapes.length; i++) {\r\n    if (isPointInShape(target, shapes[i])) return i;\r\n  }\r\n  return -1;\r\n}\r\n\r\nexport function isPointInShape(p: Vector, s: Shape) {\r\n  let res = false;\r\n  const X = 0;\r\n  const Y = 1;\r\n  for (let i = 0; i < s.length; i++) {\r\n    // https://www.eecs.umich.edu/courses/eecs380/HANDOUTS/PROJ2/InsidePoly.html\r\n    const edge = [s[i], s[(i + 1) % s.length]];\r\n    if (\r\n      // is the point in the Y range of the edge?\r\n      ((edge[0][Y] <= p[Y] && edge[1][Y] >= p[Y]) ||\r\n        (edge[1][Y] <= p[Y] && edge[0][Y] >= p[Y])) && // is our point to the left the line that our edge sits on at Y = point[Y]?\r\n      p[X] <\r\n        ((edge[0][X] - edge[1][X]) * (p[Y] - edge[1][Y])) /\r\n          (edge[0][Y] - edge[1][Y]) +\r\n          edge[1][X]\r\n    ) {\r\n      res = !res;\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\nexport function distancePointToPoint(a: Vector, b: Vector) {\r\n  // Pitagora\r\n  return Math.hypot(a[0] - b[0], a[1] - b[1]);\r\n}\r\n\r\nexport function projectPointToSegment(\r\n  p: Vector,\r\n  l: [Vector, Vector]\r\n): Vector | null {\r\n  // WHY DO I ONLY THINK OF VECTORS IN MY FREE TIME AND NOT WHEN I'M ON THE CLOCK??????\r\n  const lineVec = vecSub(l[1], l[0]);\r\n  const lineLen = distancePointToPoint(l[0], l[1]);\r\n  const lineVecNormalized = vecScale(lineVec, 1 / lineLen);\r\n  const pointProjLen = dot(vecSub(p, l[0]), lineVecNormalized);\r\n  if (pointProjLen < 0 || pointProjLen > lineLen) return null; // proj outside the segment\r\n  const pointProj = vecSum(l[0], vecScale(lineVecNormalized, pointProjLen));\r\n  return pointProj;\r\n}\r\n\r\nexport function dot(vec1: Vector, vec2: Vector) {\r\n  return vec1[0] * vec2[0] + vec1[1] * vec2[1];\r\n}\r\n\r\nexport function vecSum(v1: Vector, v2: Vector): Vector {\r\n  return [v1[0] + v2[0], v1[1] + v2[1]];\r\n}\r\n\r\nexport function vecNegative(v: Vector): Vector {\r\n  return [-v[0], -v[1]];\r\n}\r\n\r\nexport function vecSub(v1: Vector, v2: Vector): Vector {\r\n  return vecSum(v1, vecNegative(v2));\r\n}\r\n\r\nexport function vecScale(v: Vector, n: number): Vector {\r\n  return [v[0] * n, v[1] * n];\r\n}\r\n\r\nexport function vecLen(v: Vector): number {\r\n  return distancePointToPoint([0, 0], v);\r\n}\r\n\r\nexport function vecFromCoordinateSystem(\r\n  v: Vector,\r\n  up: Vector,\r\n  right: Vector\r\n): Vector {\r\n  return vecSum(vecScale(right, v[0]), vecScale(up, v[1]));\r\n}\r\n\r\nexport function vecToCoordinateSystem(\r\n  v: Vector,\r\n  up: Vector,\r\n  right: Vector\r\n): Vector {\r\n  /* \r\n        x1 = rx * x + ux * y \r\n        y1 = ry * x + uy * y\r\n\r\n        x = (x1 - ux * y) / rx = (y1 - uy * y) / ry => \r\n        x1 * ry - ux * ry * y = y1 * rx - uy * rx * y =>\r\n        y = (x1 * ry - y1 * rx) / (ux * ry - uy * rx)\r\n     */\r\n  const y =\r\n    (v[0] * right[1] - v[1] * right[0]) / (up[0] * right[1] - up[1] * right[0]);\r\n  const x = (v[0] - up[0] * y) / right[0];\r\n  return [x, y];\r\n}\r\n\r\nexport function vecRotate(v: Vector, upRotated: Vector): Vector {\r\n  const up = vecScale(upRotated, 1 / vecLen(upRotated));\r\n  const right = [up[1], -up[0]] as Vector;\r\n  return vecFromCoordinateSystem(v, up, right);\r\n}\r\n\r\nexport function centroidOfShape(shape: Shape) {\r\n  const sum = shape.reduce((res, v) => vecSum(v, res));\r\n  return vecScale(sum, 1 / shape.length);\r\n}\r\n\r\nexport function dirShapeToShape(s1: Shape, s2: Shape) {\r\n  const center1 = centroidOfShape(s1);\r\n  const center2 = centroidOfShape(s2);\r\n  const lineC1toC2 = vecSub(center2, center1);\r\n  const distance = distancePointToPoint([0, 0], lineC1toC2);\r\n  return vecScale(lineC1toC2, 1 / distance);\r\n}\r\n","import { Shape, Vector } from \"./types\";\r\nimport { dot, vecSum, vecScale, vecSub } from \"./shapes\";\r\n\r\nexport function order(s: Shape) {\r\n  const X = 0;\r\n  const Y = 1;\r\n\r\n  let lu = [...s]\r\n    .sort((a, b) => (a[Y] < b[Y] ? -1 : 1))\r\n    .slice(0, 2)\r\n    .sort((a, b) => (a[X] < b[X] ? -1 : 1))[0];\r\n  let i_lu = s.findIndex((p) => p === lu);\r\n\r\n  const ordered: Shape = [];\r\n  const firstP = s[i_lu];\r\n  const nextP = s[(i_lu + 1) % s.length];\r\n  const prevP = s[(i_lu + s.length - 1) % s.length];\r\n\r\n  const center = vecScale(vecSum(vecSum(firstP, nextP), prevP), 1 / 3);\r\n\r\n  // y axis is inverted in images, so this formula is inverted too\r\n  const clockwisePerpendicular: Vector = [\r\n    -(firstP[Y] - center[Y]),\r\n    firstP[X] - center[X],\r\n  ];\r\n\r\n  if (\r\n    dot(vecSub(nextP, center), clockwisePerpendicular) >\r\n    dot(vecSub(prevP, center), clockwisePerpendicular)\r\n  ) {\r\n    for (let i = 0; i < s.length; i++) {\r\n      const p = s[(i_lu + i) % s.length];\r\n      ordered.push([...p]);\r\n    }\r\n  } else {\r\n    for (let i = 0; i < s.length; i++) {\r\n      const p = s[(i_lu + s.length - i) % s.length];\r\n      ordered.push([...p]);\r\n    }\r\n  }\r\n\r\n  return ordered;\r\n}\r\n","import { order } from \"./data\";\r\nimport { AreaDictionary, Vector, Shape } from \"./types\";\r\n\r\nexport class Area {\r\n  private static counter = 0;\r\n\r\n  readonly id: number;\r\n  public shape: Shape;\r\n  public isCarWalkable = true;\r\n  public direction = {\r\n    left: false,\r\n    up: false,\r\n    right: false,\r\n    down: false,\r\n  };\r\n  public isParking = false;\r\n  public stop: string | null = null;\r\n  public isSelected = false;\r\n\r\n  constructor(quad?: Shape) {\r\n    this.id = Area.newId();\r\n    this.shape = quad ?? [\r\n      [-1, -1],\r\n      [-1, -1],\r\n      [-1, -1],\r\n      [-1, -1],\r\n    ];\r\n  }\r\n\r\n  static newId() {\r\n    return Area.counter++;\r\n  }\r\n\r\n  toAreaDictionary(): AreaDictionary {\r\n    const points = order(this.shape);\r\n    const dir = this.direction ?? [0, 0];\r\n    return {\r\n      id: this.id,\r\n      points: {\r\n        lu: points[0].map((x) => Math.round(x)) as Vector,\r\n        ru: points[1].map((x) => Math.round(x)) as Vector,\r\n        rb: points[2].map((x) => Math.round(x)) as Vector,\r\n        lb: points[3].map((x) => Math.round(x)) as Vector,\r\n      },\r\n      carWalk: this.isCarWalkable,\r\n      dir: { ...this.direction },\r\n      parking: this.isParking,\r\n      stop: `${this.stop ?? \"None\"}`,\r\n      ref: this,\r\n    };\r\n  }\r\n\r\n  fromAreaDictionary(ad: AreaDictionary) {\r\n    this.shape = Object.values(ad.points);\r\n    this.isCarWalkable = ad.carWalk;\r\n    const dirs = {\r\n      left: [-1, 0],\r\n      right: [1, 0],\r\n      up: [0, 1],\r\n      down: [0, -1],\r\n    };\r\n    this.direction = { ...ad.dir };\r\n\r\n    this.isParking = ad.parking;\r\n    this.stop = ad.stop;\r\n    ad.ref = this;\r\n    return this;\r\n  }\r\n}\r\n","import { Area } from \"./area\";\r\n\r\nexport type Vector = [number, number];\r\nexport type Shape = Vector[];\r\nexport enum Tool { ADD, SELECT, SET_DIRECTIONS, TOGGLE_TYPE };\r\n\r\nexport type DirKeys = \"left\" | \"right\" | \"up\" | \"down\";\r\n\r\nexport type AreaDictionary = {\r\n    id: number;\r\n    points: {\r\n        lu: Vector;\r\n        ru: Vector;\r\n        rb: Vector;\r\n        lb: Vector;\r\n    };\r\n    carWalk: boolean;\r\n    dir: {\r\n        left: boolean;\r\n        up: boolean;\r\n        right: boolean;\r\n        down: boolean;\r\n    };\r\n    parking: boolean;\r\n    stop: string;\r\n    changed?: boolean;\r\n    ref?: Area;\r\n};\r\n\r\nexport interface IIndexable<T = any> { [key: string]: T; }\r\n\r\nexport type Options = {\r\n    ids: boolean;\r\n    arrows: boolean;\r\n};\r\n\r\nexport { Area } from \"./area\";","import React from \"react\";\r\nimport { Tool } from \"../utilities/types\";\r\nimport \"./ToolSelector.scss\";\r\n\r\ntype ToolSelectorProps = {\r\n  value?: Tool;\r\n  onSelect?: () => void;\r\n  onAdd?: () => void;\r\n  onSetDirections?: () => void;\r\n  onToggleType?: () => void;\r\n};\r\n\r\nexport default function ToolSelector({\r\n  value,\r\n  onSelect,\r\n  onAdd,\r\n  onSetDirections,\r\n  onToggleType,\r\n}: ToolSelectorProps) {\r\n  return (\r\n    <div className=\"ToolSelector\">\r\n      {onAdd ? (\r\n        <button\r\n          className={`btn secondary ${\r\n            value === Tool.ADD ? \"contained\" : \"outlined\"\r\n          }`}\r\n          onClick={onAdd}\r\n        >\r\n          ADD\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {onSelect ? (\r\n        <button\r\n          className={`btn secondary ${\r\n            value === Tool.SELECT ? \"contained\" : \"outlined\"\r\n          }`}\r\n          onClick={onSelect}\r\n        >\r\n          SELECT\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {onSetDirections ? (\r\n        <button\r\n          className={`btn secondary ${\r\n            value === Tool.SET_DIRECTIONS ? \"contained\" : \"outlined\"\r\n          }`}\r\n          onClick={onSetDirections}\r\n        >\r\n          DIRECTIONS\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {onToggleType ? (\r\n        <button\r\n          className={`btn secondary ${\r\n            value === Tool.TOGGLE_TYPE ? \"contained\" : \"outlined\"\r\n          }`}\r\n          onClick={onToggleType}\r\n        >\r\n          TYPES\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./Canvas.scss\";\r\nimport {\r\n  Area,\r\n  Vector,\r\n  Shape,\r\n  Tool,\r\n  DirKeys,\r\n  Options,\r\n} from \"../utilities/types\";\r\nimport {\r\n  distancePointToPoint,\r\n  projectPointToSegment,\r\n  findPointInShapeIndex,\r\n  vecSum,\r\n  vecScale,\r\n  isPointInShape,\r\n  vecRotate,\r\n  vecSub,\r\n  centroidOfShape,\r\n  vecNegative,\r\n} from \"../utilities/shapes\";\r\nimport { order } from \"../utilities/data\";\r\n\r\nconst TOGGLE_SIDEWALK = 0;\r\nconst TOGGLE_PARK = 1;\r\nconst CANVAS_W = 1920;\r\nconst CANVAS_H = 1080;\r\nconst POINT_RADIUS = 5;\r\nconst SNAP_DISTANCE = 25;\r\n// const ARROW_SCALE = .1;\r\nconst ARROW_SIZE = 16;\r\nconst ARROW_SIZE_SMALL = 10;\r\nconst ID_SIZE = 48;\r\n\r\nconst alpha = 0.25;\r\n\r\nconst styleRoad = {\r\n  width: 2,\r\n  stroke: `rgb(220, 80, 80)`,\r\n  fill: `rgba(220, 80, 80, ${alpha})`,\r\n  arrow: `rgba(220, 80, 80, ${alpha * 2})`,\r\n  selected: {\r\n    width: 2,\r\n    stroke: `rgb(255, 130, 130)`,\r\n    fill: `rgba(255, 130, 130, ${alpha})`,\r\n    arrow: `rgba(255, 130, 130, ${alpha * 2})`,\r\n  },\r\n};\r\n\r\nconst styleSidewalk = {\r\n  width: 2,\r\n  stroke: `rgb(50, 100, 250)`,\r\n  fill: `rgba(50, 100, 250, ${alpha})`,\r\n  arrow: `rgba(50, 100, 250, ${alpha * 2})`,\r\n  selected: {\r\n    width: 2,\r\n    stroke: `rgb(50, 200, 250)`,\r\n    fill: `rgba(50, 200, 250, ${alpha})`,\r\n    arrow: `rgba(50, 200, 250, ${alpha * 2})`,\r\n  },\r\n};\r\n\r\nconst styleParking = {\r\n  width: 2,\r\n  stroke: `rgb(200, 170, 0)`,\r\n  fill: `rgba(240, 190, 0, ${alpha})`,\r\n  arrow: `rgba(200, 170, 0, ${alpha * 2})`,\r\n  selected: {\r\n    width: 2,\r\n    stroke: `rgb(255, 215, 50)`,\r\n    fill: `rgba(255, 250, 50, ${alpha})`,\r\n    arrow: `rgba(255, 215, 50, ${alpha * 2})`,\r\n  },\r\n};\r\n\r\nconst styleSidewalkParking = {\r\n  width: 2,\r\n  stroke: `rgb(50, 200, 50)`,\r\n  fill: `rgba(50, 200, 50, ${alpha})`,\r\n  arrow: `rgba(50, 200, 50, ${alpha * 2})`,\r\n  selected: {\r\n    width: 2,\r\n    stroke: `rgb(100, 240, 100)`,\r\n    fill: `rgba(100, 255, 100, ${alpha})`,\r\n    arrow: `rgba(100, 240, 100, ${alpha * 2})`,\r\n  },\r\n};\r\n\r\nconst styleZebra = {\r\n  width: 2,\r\n  stroke: `rgb(150, 150, 150)`,\r\n  fill: `rgba(150, 150, 150, ${alpha})`,\r\n  arrow: `rgba(150, 150, 150, ${alpha * 2})`,\r\n  selected: {\r\n    width: 2,\r\n    stroke: `rgb(230, 230, 230)`,\r\n    fill: `rgba(230, 230, 230, ${alpha})`,\r\n    arrow: `rgba(230, 230, 230, ${alpha * 2})`,\r\n  },\r\n};\r\n\r\nexport interface CanvasProps {\r\n  img: CanvasImageSource | null;\r\n  quads: Area[];\r\n  newQuad: (quad: Area) => void;\r\n  tool: Tool;\r\n  setSelected: (index: number) => void;\r\n  updateQuads: (arr: Area[]) => void;\r\n  deleteQuads: (arr: Area[]) => void;\r\n  slider?: number;\r\n  width?: number;\r\n  height?: number;\r\n  options?: Options;\r\n}\r\n\r\nexport default function Canvas({\r\n  img,\r\n  quads,\r\n  newQuad,\r\n  tool,\r\n  setSelected,\r\n  updateQuads,\r\n  deleteQuads,\r\n  slider,\r\n  width,\r\n  height,\r\n  options = { ids: true, arrows: true },\r\n}: CanvasProps) {\r\n  const [points, setPoints] = useState<Shape>([]);\r\n  const [dragging, setDragging] = useState<boolean>(false);\r\n  const [modifier, setModifier] = useState<boolean>(false);\r\n  const [oldMouse, setOldMouse] = useState<Vector | null>(null);\r\n  const [dragIndexes, setDragIndexes] = useState<number[] | null>(null);\r\n\r\n  const ref = useRef<HTMLCanvasElement>(null);\r\n  const [mouse, setMouse] = useState<{ x: number; y: number }>({ x: 0, y: 0 });\r\n\r\n  let canvasH = CANVAS_H;\r\n  let canvasW = CANVAS_W;\r\n\r\n  useEffect(() => {\r\n    const canvas = ref.current;\r\n    const context = canvas?.getContext(\"2d\");\r\n    if (!canvas || !context) {\r\n      return;\r\n    }\r\n\r\n    // Background\r\n    try {\r\n      if (!img) throw Error;\r\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n    } catch (e) {\r\n      context.fillStyle = \"#fff\";\r\n      context.fillRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n\r\n    // Finished Quads\r\n    for (const quad of quads) {\r\n      drawArea(context, quad);\r\n    }\r\n\r\n    if (mouse.x && mouse.y) {\r\n      // New Quad\r\n      if (points && tool === Tool.ADD) {\r\n        let close = false;\r\n        const pos = snapToShapes(\r\n          [mouse.x, mouse.y],\r\n          quads.map((a) => a.shape)\r\n        );\r\n        let path = [pos, ...points];\r\n        if (points.length === 3) {\r\n          close = true;\r\n        }\r\n        context.lineWidth = styleRoad.width;\r\n        context.strokeStyle = styleRoad.stroke;\r\n        context.fillStyle = styleRoad.fill;\r\n        drawPath(context, path, true, close);\r\n      }\r\n    }\r\n  }, [img, quads, tool, mouse, modifier, points, slider, width, options]);\r\n\r\n  const snapToShapes = (pos: Vector, shapes: Shape[]) => {\r\n    if (modifier) return pos;\r\n\r\n    // give priority to points instead of edges\r\n    // find the closest point\r\n    shapes.push([\r\n      [0, 0],\r\n      [canvasW, 0],\r\n      [canvasW, canvasH],\r\n      [0, canvasH],\r\n    ]); // add boundaries\r\n    let [minDist, newPoint] = shapes.flat().reduce(\r\n      ([dist, point]: [number, Vector | null], p) => {\r\n        const d = distancePointToPoint(pos, p);\r\n        if (d < dist || dist === -1) return [d, p];\r\n        else return [dist, point];\r\n      },\r\n      [-1, null]\r\n    );\r\n\r\n    if (newPoint && minDist < SNAP_DISTANCE) {\r\n      pos = newPoint;\r\n    } else {\r\n      [minDist, newPoint] = shapes.reduce(\r\n        ([dist, point]: [number, Vector | null], s) => {\r\n          // find the closest point in the edges\r\n          let [d, p] = s.reduce(\r\n            ([dist, point]: [number, Vector | null], p1, i, s) => {\r\n              const p2 = s[(i + 1) % s.length];\r\n              let proj = projectPointToSegment(pos, [p1, p2]);\r\n              let d, p;\r\n              // if we found a projection it is the closest point\r\n              if (proj) {\r\n                d = distancePointToPoint(pos, proj);\r\n                p = proj;\r\n                // confront it with the previous results\r\n                if (d < dist || dist === -1) return [d, p];\r\n              }\r\n              return [dist, point];\r\n            },\r\n            [-1, null]\r\n          );\r\n\r\n          // confront it with the previous results\r\n          if ((p && d < dist) || dist === -1) return [d, p];\r\n          return [dist, point];\r\n        },\r\n        [-1, null]\r\n      );\r\n\r\n      if (newPoint && minDist < SNAP_DISTANCE) {\r\n        pos = newPoint;\r\n      }\r\n    }\r\n\r\n    return pos;\r\n  };\r\n\r\n  const addPoint = () => {\r\n    if (!mouse.x || !mouse.y) {\r\n      return;\r\n    }\r\n\r\n    let pos: Vector = [mouse.x, mouse.y];\r\n\r\n    pos = snapToShapes(\r\n      pos,\r\n      quads.map((a) => a.shape)\r\n    );\r\n\r\n    const updatedShape = [pos, ...points];\r\n\r\n    if (updatedShape.length === 4) {\r\n      const newArea = new Area(order(updatedShape));\r\n      newArea.isSelected = true;\r\n      setSelected(-1);\r\n      newQuad(newArea);\r\n      setPoints([]);\r\n    } else {\r\n      setPoints(updatedShape);\r\n    }\r\n  };\r\n\r\n  const drawPath = (\r\n    canvasCtx: CanvasRenderingContext2D,\r\n    points: [number, number][],\r\n    f_drawPoints = false,\r\n    close = true\r\n  ) => {\r\n    if (points[0]) canvasCtx.moveTo(points[0][0], points[0][1]);\r\n    canvasCtx.beginPath();\r\n    for (const p of points) {\r\n      canvasCtx.lineTo(p[0], p[1]);\r\n    }\r\n\r\n    if (close) {\r\n      canvasCtx.closePath();\r\n      canvasCtx.fill();\r\n    }\r\n    canvasCtx.stroke();\r\n\r\n    if (f_drawPoints) {\r\n      for (const p of points) drawPoint(canvasCtx, p);\r\n    }\r\n  };\r\n\r\n  const drawPoint = (canvasCtx: CanvasRenderingContext2D, point: Vector) => {\r\n    const tmpFill = canvasCtx.fillStyle;\r\n    const tmpStroke = canvasCtx.strokeStyle;\r\n    canvasCtx.fillStyle = \"#5f5\";\r\n    canvasCtx.strokeStyle = \"#000\";\r\n    canvasCtx.beginPath();\r\n    canvasCtx.arc(point[0], point[1], POINT_RADIUS, 0, 2 * 3.15);\r\n    canvasCtx.closePath();\r\n    canvasCtx.fill();\r\n    canvasCtx.stroke();\r\n    canvasCtx.fillStyle = tmpFill;\r\n    canvasCtx.strokeStyle = tmpStroke;\r\n  };\r\n\r\n  const drawArrows = (\r\n    canvasCtx: CanvasRenderingContext2D,\r\n    quad: Vector[],\r\n    directions: { left: boolean; up: boolean; right: boolean; down: boolean },\r\n    color = \"#000\",\r\n    f_highlight = false\r\n  ) => {\r\n    let arrow: Shape = [\r\n      [-0.7, -1],\r\n      [0, 1],\r\n      [0.7, -1],\r\n    ];\r\n    arrow = arrow.map((vec) =>\r\n      vecScale(vec, f_highlight ? ARROW_SIZE : ARROW_SIZE_SMALL)\r\n    );\r\n\r\n    const topMid = centroidOfShape([quad[0], quad[1]]);\r\n    const botMid = centroidOfShape([quad[2], quad[3]]);\r\n    const rightMid = centroidOfShape([quad[1], quad[2]]);\r\n    const leftMid = centroidOfShape([quad[3], quad[0]]);\r\n\r\n    const up = vecSub(topMid, botMid);\r\n    const right = vecSub(rightMid, leftMid);\r\n\r\n    const arrows = Object.entries(directions).map(([k, v]) => {\r\n      if (!v) return null;\r\n      let dir: Vector, anchor: Vector;\r\n      switch (k) {\r\n        case \"up\":\r\n          dir = up;\r\n          anchor = topMid;\r\n          break;\r\n        case \"down\":\r\n          dir = vecNegative(up);\r\n          anchor = botMid;\r\n          break;\r\n        case \"right\":\r\n          dir = right;\r\n          anchor = rightMid;\r\n          break;\r\n        case \"left\":\r\n          dir = vecNegative(right);\r\n          anchor = leftMid;\r\n          break;\r\n        default:\r\n          return null;\r\n      }\r\n\r\n      const rotated = arrow.map((vec) => vecRotate(vec, dir));\r\n      const translation = vecSub(anchor, rotated[1]);\r\n      return rotated.map((vec) => vecSum(vec, translation));\r\n    });\r\n\r\n    const tmpStroke = canvasCtx.strokeStyle;\r\n    const tmpFill = canvasCtx.fillStyle;\r\n    const tmpWidth = canvasCtx.lineWidth;\r\n\r\n    if (f_highlight) canvasCtx.strokeStyle = \"#000\";\r\n    else canvasCtx.strokeStyle = color;\r\n\r\n    canvasCtx.fillStyle = color;\r\n    canvasCtx.lineWidth = 2;\r\n\r\n    for (const arrow of arrows) {\r\n      if (!arrow) continue;\r\n      drawPath(canvasCtx, arrow, false, true);\r\n    }\r\n\r\n    canvasCtx.strokeStyle = tmpStroke;\r\n    canvasCtx.fillStyle = tmpFill;\r\n    canvasCtx.lineWidth = tmpWidth;\r\n  };\r\n\r\n  const drawArea = (canvasCtx: CanvasRenderingContext2D, area: Area) => {\r\n    let movement: Vector = [0, 0];\r\n    // Drag\r\n    if (dragging && oldMouse) {\r\n      movement = [mouse.x! - oldMouse[0], mouse.y! - oldMouse[1]] as Vector;\r\n    }\r\n\r\n    const shape = area.isSelected\r\n      ? area.shape.map((p, i) => {\r\n          if (dragIndexes && dragIndexes.some((n) => n === i))\r\n            return snapToShapes(\r\n              vecSum(p, movement),\r\n              quads.filter((a) => a.id !== area.id).map((a) => a.shape)\r\n            );\r\n          else return p;\r\n        })\r\n      : area.shape;\r\n\r\n    const center = centroidOfShape(shape);\r\n\r\n    let style;\r\n    if (area.isCarWalkable) {\r\n      if (area.isParking) style = styleParking;\r\n      else style = styleRoad;\r\n    } else {\r\n      if (area.isParking) style = styleSidewalkParking;\r\n      else if (\r\n        area.direction.up ||\r\n        area.direction.left ||\r\n        area.direction.right ||\r\n        area.direction.down\r\n      )\r\n        style = styleZebra;\r\n      else style = styleSidewalk;\r\n    }\r\n    if (area.isSelected) style = style.selected;\r\n\r\n    const tmp = {\r\n      lw: canvasCtx.lineWidth,\r\n      ss: canvasCtx.strokeStyle,\r\n      fs: canvasCtx.fillStyle,\r\n    };\r\n    canvasCtx.lineWidth = style.width;\r\n    canvasCtx.strokeStyle = style.stroke;\r\n    canvasCtx.fillStyle = style.fill;\r\n\r\n    drawPath(canvasCtx, shape, area.isSelected, true);\r\n    if (options.ids)\r\n      drawText(canvasCtx, area.id.toString(), center, ID_SIZE, style.stroke);\r\n\r\n    if (tool === Tool.SET_DIRECTIONS)\r\n      drawArrows(canvasCtx, shape, area.direction, \"#3e3\", true);\r\n    else if (options.arrows)\r\n      drawArrows(canvasCtx, shape, area.direction, style.stroke);\r\n\r\n    // if (area.isParking) drawParking(canvasCtx, shape, style.stroke);\r\n\r\n    canvasCtx.lineWidth = tmp.lw;\r\n    canvasCtx.strokeStyle = tmp.ss;\r\n    canvasCtx.fillStyle = tmp.fs;\r\n  };\r\n\r\n  const drawText = (\r\n    canvasCtx: CanvasRenderingContext2D,\r\n    text: string,\r\n    center: Vector,\r\n    size = 12,\r\n    color = \"#000\"\r\n  ) => {\r\n    const tmp = {\r\n      font: canvasCtx.font,\r\n      ta: canvasCtx.textAlign,\r\n      tb: canvasCtx.textBaseline,\r\n      fs: canvasCtx.fillStyle,\r\n      ss: canvasCtx.strokeStyle,\r\n    };\r\n\r\n    canvasCtx.font = `${size}px sans-serif`;\r\n    canvasCtx.textAlign = \"center\";\r\n    canvasCtx.textBaseline = \"middle\";\r\n    canvasCtx.fillStyle = color;\r\n    canvasCtx.strokeStyle = \"#000\";\r\n\r\n    canvasCtx.fillText(text, center[0], center[1]);\r\n    canvasCtx.strokeText(text, center[0], center[1]);\r\n\r\n    canvasCtx.font = tmp.font;\r\n    canvasCtx.textAlign = tmp.ta;\r\n    canvasCtx.textBaseline = tmp.tb;\r\n    canvasCtx.fillStyle = tmp.fs;\r\n  };\r\n\r\n  const handleSelect = () => {\r\n    // check if we have a selected area\r\n    const selected = quads.find((a) => a.isSelected);\r\n    let indexes: number[] | null = null;\r\n    if (selected) {\r\n      // check its closest points and edges to drag them\r\n      const points = selected.shape;\r\n      let distance: number;\r\n      indexes = [-1];\r\n      // find the closest point to the mouse pointer\r\n      [distance, indexes[0]] = points.reduce(\r\n        ([res_d, res_i], p, i) => {\r\n          const d = distancePointToPoint([mouse.x!, mouse.y!], p);\r\n          return d < res_d ? [d, i] : [res_d, res_i];\r\n        },\r\n        [999, -1]\r\n      );\r\n      // if it's too far check if one of the edges is close enough\r\n      if (distance > SNAP_DISTANCE) {\r\n        [distance, indexes] = points.reduce(\r\n          ([res_d, res_is], p, i, points) => {\r\n            const j = (i + 1) % points.length;\r\n            const p1 = points[j];\r\n            const proj = projectPointToSegment([mouse.x!, mouse.y!], [p, p1]);\r\n            if (!proj) return [res_d, res_is];\r\n            const dist = distancePointToPoint([mouse.x!, mouse.y!], proj);\r\n            return dist < res_d ? [dist, [i, j]] : [res_d, res_is];\r\n          },\r\n          [999, [-1]]\r\n        );\r\n      }\r\n      // if it's not check if we clicked it and drag the entire shape\r\n      if (distance > SNAP_DISTANCE) {\r\n        if (isPointInShape([mouse.x, mouse.y], selected.shape)) {\r\n          indexes = [0, 1, 2, 3];\r\n        } else {\r\n          indexes = null;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (indexes) {\r\n      // update the state\r\n      setDragIndexes(indexes);\r\n      setDragging(true);\r\n      setOldMouse([mouse.x!, mouse.y!]);\r\n    } else {\r\n      // check if we clicked an area and select it\r\n      const target = findPointInShapeIndex(\r\n        [mouse.x, mouse.y],\r\n        quads.map((a) => a.shape)\r\n      );\r\n      setSelected(target);\r\n    }\r\n  };\r\n\r\n  const handleSetDirections = (all = false) => {\r\n    const pos = [mouse.x, mouse.y] as Vector;\r\n    const targetArea = quads.find((q) => isPointInShape(pos, q.shape));\r\n    if (!targetArea) return;\r\n\r\n    if (all) {\r\n      const newState = !Object.values(targetArea.direction).every((x) => x);\r\n      for (const key of Object.keys(targetArea.direction)) {\r\n        targetArea.direction[key as DirKeys] = newState;\r\n      }\r\n    } else {\r\n      const shape = targetArea.shape;\r\n      const center = centroidOfShape(shape);\r\n      const sectors = {\r\n        up: [shape[0], shape[1], center] as Shape,\r\n        down: [shape[2], shape[3], center] as Shape,\r\n        right: [shape[1], shape[2], center] as Shape,\r\n        left: [shape[3], shape[0], center] as Shape,\r\n      };\r\n\r\n      const selectedDir: DirKeys | null = (() => {\r\n        for (const [k, v] of Object.entries(sectors)) {\r\n          if (isPointInShape(pos, v)) return k as DirKeys;\r\n        }\r\n        return null;\r\n      })();\r\n\r\n      if (!selectedDir) return;\r\n\r\n      targetArea.direction[selectedDir] = !targetArea.direction[selectedDir];\r\n    }\r\n\r\n    updateQuads([targetArea]);\r\n  };\r\n\r\n  const handleToggleType = (version = TOGGLE_SIDEWALK) => {\r\n    const pos = [mouse.x, mouse.y] as Vector;\r\n    const targetArea = quads.find((q) => isPointInShape(pos, q.shape));\r\n    if (!targetArea) return;\r\n\r\n    switch (version) {\r\n      case TOGGLE_SIDEWALK:\r\n        if (targetArea.isCarWalkable) {\r\n          targetArea.isCarWalkable = false;\r\n        } else {\r\n          targetArea.isCarWalkable = true;\r\n        }\r\n        break;\r\n      case TOGGLE_PARK:\r\n        if (targetArea.isParking) {\r\n          targetArea.isParking = false;\r\n        } else {\r\n          targetArea.isParking = true;\r\n        }\r\n        break;\r\n    }\r\n\r\n    updateQuads([targetArea]);\r\n  };\r\n\r\n  const onMouseDown = (e: React.MouseEvent) => {\r\n    switch (e.button) {\r\n      case 0:\r\n        switch (tool) {\r\n          case Tool.ADD:\r\n            addPoint();\r\n            break;\r\n          case Tool.SELECT:\r\n            handleSelect();\r\n            break;\r\n          case Tool.SET_DIRECTIONS:\r\n            handleSetDirections();\r\n            break;\r\n          case Tool.TOGGLE_TYPE:\r\n            handleToggleType(TOGGLE_SIDEWALK);\r\n            break;\r\n          default:\r\n            throw Error(\"Tool not implemented\");\r\n        }\r\n        break;\r\n      case 2:\r\n        switch (tool) {\r\n          case Tool.TOGGLE_TYPE:\r\n            handleToggleType(TOGGLE_PARK);\r\n            break;\r\n          case Tool.SET_DIRECTIONS:\r\n            handleSetDirections(true);\r\n            break;\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  const stopDragging = () => {\r\n    if (dragging && oldMouse) {\r\n      const selectedAreas = quads.filter((a) => a.isSelected);\r\n      const movement: Vector = [mouse.x! - oldMouse[0], mouse.y! - oldMouse[1]];\r\n      const updated = selectedAreas.map((a) => {\r\n        a.shape = order(\r\n          a.shape.map((p, i) => {\r\n            if (dragIndexes && dragIndexes.some((n) => n === i))\r\n              return snapToShapes(\r\n                vecSum(p, movement),\r\n                quads.filter((b) => b.id !== a.id).map((b) => b.shape)\r\n              );\r\n            else return p;\r\n          })\r\n        );\r\n        return a;\r\n      });\r\n      updateQuads(updated);\r\n      setDragging(false);\r\n      setDragIndexes(null);\r\n      setOldMouse(null);\r\n    }\r\n  };\r\n\r\n  const onMouseUp = () => {\r\n    stopDragging();\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    if (dragging && dragIndexes?.length === 4) {\r\n      setDragging(false);\r\n      setDragIndexes(null);\r\n      setOldMouse(null);\r\n      deleteQuads(quads.filter((q) => q.isSelected));\r\n    } else {\r\n      stopDragging();\r\n    }\r\n  };\r\n  const onMouseMove = (e: React.MouseEvent) => {\r\n    const canvas = ref.current;\r\n    if (canvas) {\r\n      const ratio = canvas.clientWidth / canvas.width;\r\n      const topLeft = [canvas.offsetLeft, canvas.offsetTop];\r\n      setMouse({\r\n        x: (e.pageX - topLeft[0]) / ratio,\r\n        y: (e.pageY - topLeft[1]) / ratio,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Canvas\">\r\n      <canvas\r\n        ref={ref}\r\n        onMouseDown={onMouseDown}\r\n        onMouseUp={onMouseUp}\r\n        onMouseLeave={onMouseLeave}\r\n        onMouseMove={onMouseMove}\r\n        onContextMenu={(e) => e.preventDefault()}\r\n        width={CANVAS_W}\r\n        height={CANVAS_H}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Control\") setModifier(true);\r\n        }}\r\n        onKeyUp={(e) => {\r\n          if (e.key === \"Control\") setModifier(false);\r\n        }}\r\n        tabIndex={0}\r\n        onMouseEnter={() => ref.current?.focus()}\r\n        onBlur={() => setPoints([])}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { Check, Clear, Delete } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Area, AreaDictionary, IIndexable, Vector } from \"../utilities/types\";\r\n\r\nimport \"./Inspector.scss\";\r\n\r\ntype InspectorProps = {\r\n  target: Area[];\r\n  update: (updated: Area[]) => void;\r\n  selectById: (id: number) => void;\r\n  deleteById: (id: number) => void;\r\n};\r\n\r\nexport default function Inspector({\r\n  target,\r\n  update,\r\n  selectById,\r\n  deleteById,\r\n}: InspectorProps) {\r\n  const [inspected, setInspected] = useState<AreaDictionary[]>();\r\n  const updateInspected = (updated: AreaDictionary, changed = true) => {\r\n    updated.changed = changed;\r\n    if (!inspected) return;\r\n    const unchanged = inspected?.filter((a) => a.id !== updated.id);\r\n    setInspected(\r\n      [updated, ...unchanged].sort((a, b) => (a.id < b.id ? -1 : 1))\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selected = target;\r\n\r\n    let list = selected.map((a) => a.toAreaDictionary());\r\n\r\n    const pending = inspected?.filter((t) => t.changed);\r\n    list = list.map((a) => {\r\n      const t = pending?.find((t) => t.id === a.id);\r\n      return t ? t : a;\r\n    });\r\n\r\n    list = list.sort((a, b) => (a.id < b.id ? -1 : 1));\r\n\r\n    setInspected(list);\r\n  }, [target]);\r\n\r\n  function renderAD(a: AreaDictionary) {\r\n    const renderPoint = (p: Vector, key: string, ref: AreaDictionary) => {\r\n      return p.map((val, i) => {\r\n        return (\r\n          <td key={`${key}${i}`}>\r\n            <input\r\n              type=\"number\"\r\n              value={Math.round(val)}\r\n              onChange={(e) => {\r\n                (ref.points as IIndexable)[key][i] = +e.target.value;\r\n                updateInspected(ref);\r\n              }}\r\n            />\r\n          </td>\r\n        );\r\n      });\r\n    };\r\n\r\n    const renderedPoints = Object.entries(a.points).flatMap(([k, v]) =>\r\n      renderPoint(v, k, a)\r\n    );\r\n\r\n    const renderedDirection = Object.entries(a.dir).map(([k, v]) => {\r\n      return (\r\n        <td key={k}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={v}\r\n            onChange={() => {\r\n              (a.dir as IIndexable)[k] = !(a.dir as IIndexable)[k];\r\n              updateInspected(a);\r\n            }}\r\n          />\r\n        </td>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <tr\r\n        key={a.id}\r\n        onClick={() => selectById(a.id)}\r\n        className={a.ref?.isSelected ? \"selected\" : \"\"}\r\n      >\r\n        <td key=\"delete\" className=\"delete\">\r\n          <button\r\n            className=\"btn contained secondary\"\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              deleteById(a.id);\r\n            }}\r\n          >\r\n            <Delete />\r\n          </button>\r\n        </td>\r\n        <td key=\"id\">\r\n          <div className=\"id\"> {a.id} </div>\r\n        </td>\r\n        {renderedPoints}\r\n        <td key=\"iscarwalkable\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={a.carWalk}\r\n            onChange={() => {\r\n              a.carWalk = !a.carWalk;\r\n              updateInspected(a);\r\n            }}\r\n          />\r\n        </td>\r\n        {renderedDirection}\r\n        <td key=\"isparking\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={a.parking}\r\n            onChange={() => {\r\n              a.parking = !a.parking;\r\n              updateInspected(a);\r\n            }}\r\n          />\r\n        </td>\r\n        <td key=\"isstop\">\r\n          <input\r\n            type=\"text\"\r\n            value={a.stop ?? \"None\"}\r\n            onChange={(e) => {\r\n              a.stop = e.target.value;\r\n              updateInspected(a);\r\n            }}\r\n          />\r\n        </td>\r\n        <td className={!a.changed ? \"hide\" : \"space\"} />\r\n        <td key=\"update\" className={!a.changed ? \"hide\" : \"\"}>\r\n          <button\r\n            className=\"btn contained primary\"\r\n            onClick={() => {\r\n              updateInspected(a, false);\r\n              update([\r\n                target.find((t) => t.id === a.id)!.fromAreaDictionary(a),\r\n              ]);\r\n            }}\r\n          >\r\n            <Check />\r\n          </button>\r\n        </td>\r\n        <td key=\"discard\" className={!a.changed ? \"hide\" : \"\"}>\r\n          <button\r\n            className={`btn contained secondary ${!a.changed ? \"hide\" : \"\"}`}\r\n            onClick={() => {\r\n              a = target.find((t) => t.id === a.id)!.toAreaDictionary();\r\n              updateInspected(a, false);\r\n            }}\r\n          >\r\n            <Clear />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"Inspector\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th />\r\n            <th>ID </th>\r\n            <th>luX </th>\r\n            <th>luY </th>\r\n            <th>ruX </th>\r\n            <th>ruY </th>\r\n            <th>rbX </th>\r\n            <th>rbY </th>\r\n            <th>lbX </th>\r\n            <th>lbY </th>\r\n            <th>CarWalk </th>\r\n            <th>Left </th>\r\n            <th>Up </th>\r\n            <th>Right </th>\r\n            <th>Down </th>\r\n            <th>Parking </th>\r\n            <th>Stop </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{inspected?.map((a) => renderAD(a))}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { Area, AreaDictionary, Vector } from \"../utilities/types\";\r\n\r\nimport \"./IOManager.css\";\r\n\r\nconst fields = [\r\n  \"luX\",\r\n  \"luY\",\r\n  \"ruX\",\r\n  \"ruY\",\r\n  \"rbX\",\r\n  \"rbY\",\r\n  \"lbX\",\r\n  \"lbY\",\r\n  \"CarWalk\",\r\n  \"Left\",\r\n  \"Up\",\r\n  \"Right\",\r\n  \"Down\",\r\n  \"Parking\",\r\n  \"Stop\",\r\n];\r\n\r\ntype IOMangerProps = {\r\n  target: Area[];\r\n  source?: string;\r\n  load: (arr: Area[]) => void;\r\n};\r\n\r\nexport function IOManager({ target, source, load }: IOMangerProps) {\r\n  const dlRef = useRef<HTMLAnchorElement>(null);\r\n  const loadRef = useRef<HTMLInputElement>(null);\r\n\r\n  const filename = source ? source.replace(\".mp4\", \"_areas.csv\") : \"areas.csv\";\r\n\r\n  const download = () => {\r\n    const outStr = formatData(target);\r\n    const blob = new Blob([outStr], { type: \"text/csv;charset=utf-8;\" });\r\n    const dlUrl = URL.createObjectURL(blob);\r\n    dlRef.current?.setAttribute(\"href\", dlUrl);\r\n    dlRef.current?.click();\r\n    URL.revokeObjectURL(dlUrl);\r\n  };\r\n\r\n  const formatData = (target: Area[]) => {\r\n    const formatted = target.map(formatArea);\r\n    return [fields.join(\",\")].concat(formatted).join(\"\\n\");\r\n  };\r\n\r\n  const formatArea = (area: Area) => {\r\n    const ad = area.toAreaDictionary();\r\n\r\n    const points = [ad.points.lu, ad.points.ru, ad.points.rb, ad.points.lb]\r\n      .map((p) => p.join(\",\"))\r\n      .join(\",\");\r\n    const carWalk = ad.carWalk ? 1 : 0;\r\n    const parking = ad.parking ? 1 : 0;\r\n    const stop = ad.stop;\r\n    const direction = [ad.dir.left, ad.dir.up, ad.dir.right, ad.dir.down]\r\n      .map((f) => (f ? 1 : 0))\r\n      .join(\",\");\r\n\r\n    return [points, carWalk, direction, parking, stop].join(\",\");\r\n  };\r\n\r\n  const loader = async (f: File | null) => {\r\n    if (!f) {\r\n      console.error(\"Unable to load file!\");\r\n      return;\r\n    }\r\n    const csv = await f.text();\r\n    const rows = csv.split(\"\\n\").filter((s) => s !== \"\");\r\n    const strings = rows.slice(1).map((r) => r.split(\",\"));\r\n    const dictionaries = strings.map((r) => {\r\n      let ad: any = { points: {}, dir: {} };\r\n      const vals: number[] = r.map((v) => +v);\r\n      ad.points.lu = vals.slice(0, 2) as Vector;\r\n      ad.points.ru = vals.slice(2, 4) as Vector;\r\n      ad.points.rb = vals.slice(4, 6) as Vector;\r\n      ad.points.lb = vals.slice(6, 8) as Vector;\r\n      ad.carWalk = vals[8] > 0;\r\n      ad.dir.left = vals[9] > 0;\r\n      ad.dir.up = vals[10] > 0;\r\n      ad.dir.right = vals[11] > 0;\r\n      ad.dir.down = vals[12] > 0;\r\n      ad.parking = vals[13] > 0;\r\n      ad.stop = r[14];\r\n      return ad as AreaDictionary;\r\n    });\r\n    const newAreas = dictionaries.map((ad) =>\r\n      new Area().fromAreaDictionary(ad)\r\n    );\r\n    load(newAreas);\r\n  };\r\n\r\n  return (\r\n    <div className=\"IOManager\">\r\n      <button\r\n        className=\"btn contained primary\"\r\n        onClick={() => loadRef.current?.click()}\r\n      >\r\n        Load CSV\r\n      </button>\r\n      <input\r\n        hidden\r\n        type=\"file\"\r\n        ref={loadRef}\r\n        accept=\".csv\"\r\n        onChange={() => loader(loadRef.current?.files?.item(0) ?? null)}\r\n      />\r\n\r\n      <button className=\"btn contained primary\" onClick={download}>\r\n        Download\r\n      </button>\r\n      <a ref={dlRef} href=\".\" download={filename} hidden>\r\n        hidden download link\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Options } from \"../utilities/types\";\r\nimport \"./OptionSelector.scss\";\r\nimport { ArrowUpward } from \"@material-ui/icons\";\r\n\r\ntype OptionSelectorProps = {\r\n  options: Options;\r\n  updateOptions: (o: Options) => void;\r\n};\r\n\r\nexport default function OptionSelector({\r\n  options,\r\n  updateOptions,\r\n}: OptionSelectorProps) {\r\n  return (\r\n    <div className=\"OptionSelector\">\r\n      <button\r\n        className={`btn ${options.ids ? \"contained\" : \"outlined\"}`}\r\n        onClick={() => updateOptions({ ...options, ids: !options.ids })}\r\n      >\r\n        IDs\r\n      </button>\r\n\r\n      <button\r\n        className={`btn ${options.arrows ? \"contained\" : \"outlined\"}`}\r\n        onClick={() => updateOptions({ ...options, arrows: !options.arrows })}\r\n      >\r\n        <ArrowUpward />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.scss\";\r\nimport Video from \"./components/Video\";\r\nimport FilePicker from \"./components/FilePicker\";\r\nimport { Area, Tool, Options } from \"./utilities/types\";\r\nimport ToolSelector from \"./components/ToolSelector\";\r\nimport Canvas from \"./components/Canvas\";\r\nimport Inspector from \"./components/Inspector\";\r\nimport { IOManager } from \"./components/IOManager\";\r\nimport OptionSelector from \"./components/OptionSelector\";\r\n\r\nexport default function App() {\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const [videoSrc, setVideoSrc] = useState<string>(\"\");\r\n  const [video, setVideo] = useState<HTMLVideoElement | null>(null);\r\n  const [slider, setSlider] = useState<number | undefined>();\r\n  const [quadList, setQuadList] = useState<Area[]>([]);\r\n  const [tool, setTool] = useState<Tool>(Tool.ADD);\r\n  const [options, setOptions] = useState<Options>({ ids: true, arrows: true });\r\n\r\n  useEffect(() => {\r\n    if (file) {\r\n      const source = URL.createObjectURL(file);\r\n      setVideoSrc(source);\r\n    }\r\n  }, [file]);\r\n\r\n  const deleteQuads = (quads: Area[]) => {\r\n    const filteredList = quadList.filter((a) =>\r\n      quads.every((b) => b.id !== a.id)\r\n    );\r\n    setQuadList(filteredList);\r\n  };\r\n\r\n  const setSelected = (index: number) => {\r\n    quadList.map((a) => (a.isSelected = false));\r\n    if (index >= 0 && index < quadList.length) {\r\n      quadList[index].isSelected = true;\r\n    }\r\n    setQuadList([...quadList]);\r\n  };\r\n\r\n  const setSelectedById = (id: number) => {\r\n    setSelected(quadList.findIndex((a) => a.id === id));\r\n  };\r\n\r\n  const updateQuads = (quads: Area[]) => {\r\n    const notUpdated = quadList.filter((a) =>\r\n      quads.every((b) => b.id !== a.id)\r\n    );\r\n    setQuadList([...quads, ...notUpdated]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <div className=\"BlockButtons\">\r\n          <OptionSelector options={options} updateOptions={setOptions} />\r\n        </div>\r\n        <div className=\"BlockCanvas\">\r\n          <Canvas\r\n            img={video}\r\n            quads={quadList}\r\n            newQuad={(quad: Area) => setQuadList([quad, ...quadList])}\r\n            tool={tool}\r\n            setSelected={setSelected}\r\n            updateQuads={updateQuads}\r\n            deleteQuads={deleteQuads}\r\n            slider={slider}\r\n            width={video?.videoWidth || undefined}\r\n            height={video?.videoHeight || undefined}\r\n            options={options}\r\n          />\r\n          <Video\r\n            source={videoSrc}\r\n            setVideo={(v) => {\r\n              setVideo(v);\r\n              setQuadList([]);\r\n            }}\r\n            setSlider={setSlider}\r\n            value={slider ?? 0}\r\n          />\r\n        </div>\r\n        <div className=\"BlockButtons\">\r\n          <ToolSelector\r\n            value={tool}\r\n            onAdd={() => {\r\n              setTool(Tool.ADD);\r\n              setSelected(-1);\r\n            }}\r\n            onSelect={() => {\r\n              setTool(Tool.SELECT);\r\n              setSelected(-1);\r\n            }}\r\n            onSetDirections={() => {\r\n              setTool(Tool.SET_DIRECTIONS);\r\n              setSelected(-1);\r\n            }}\r\n            onToggleType={() => {\r\n              setTool(Tool.TOGGLE_TYPE);\r\n              setSelected(-1);\r\n            }}\r\n          />\r\n          <FilePicker setFile={setFile} accept_types=\"video/*\" />\r\n          <IOManager\r\n            target={quadList}\r\n            source={file?.name}\r\n            load={(arr) => setQuadList(arr)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Inspector\r\n          target={quadList}\r\n          update={updateQuads}\r\n          selectById={setSelectedById}\r\n          deleteById={(id) => deleteQuads(quadList.filter((q) => q.id === id))}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { blue, red } from '@material-ui/core/colors';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: blue[400],\r\n    },\r\n    secondary: {\r\n      main: red[400],\r\n    },\r\n  },\r\n  typography: {\r\n    button: {\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiButton: {\r\n      outlined: {\r\n        border: \"2px solid !important\",\r\n      }\r\n    }\r\n  }\r\n\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}